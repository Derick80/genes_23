{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx", "../../app/root.tsx", "../../app/components/layout.tsx", "../../app/routes/kdb.$pdfId.edit-abstract.tsx", "../../app/server/prisma.server.ts", "../../app/routes/variants_.$id.annotate.tsx", "../../app/routes/kdb_.$pdfId_.annotate.tsx", "../../app/components/kdb-components/pdf-library-list.tsx", "../../app/components/kdb-components/pdf-edit-abstract.tsx", "../../app/components/tiptap.tsx", "../../app/utilities/utility-functions.ts", "../../app/routes/criterion_.$splat.tsx", "../../app/components/button.tsx", "../../app/routes/criterion.help.tsx", "../../app/routes/genes.server.ts", "../../app/routes/variants.$id.tsx", "../../app/routes/variants.tsx", "../../app/acmg-functions-utilities/variants.ts", "../../app/routes/actions.pdf.ts", "../../app/server/cloudinary.server.ts", "../../app/routes/kdb_.$pdfId.tsx", "../../app/server/pdf.server.ts", "../../app/routes/calculator/route.tsx", "../../app/components/criteria-components/classification-component.tsx", "../../app/acmg-functions-utilities/acmg-criteria.ts", "../../app/components/criteria-components/my-custom-radix-checkbox.tsx", "../../app/components/criteria-components/my-custom-select.tsx", "../../app/components/bayes-table.tsx", "../../app/routes/calculator/calculator-documentation.tsx", "../../app/routes/criterion.tsx", "../../app/routes/kdb_.new.tsx", "../../app/components/shared/cloudinary-pdf-uploader.tsx", "../../app/routes/clinvar.tsx", "../../app/routes/sign-in.tsx", "../../app/routes/sign-up.tsx", "../../app/routes/_index.tsx", "../../app/components/dev-components/welcome.tsx", "../../app/routes/genes.tsx", "../../app/components/gene-search.tsx", "../../app/routes/beta.tsx", "../../app/routes/kdb.tsx", "../../app/components/kdb-components/kdb-welcome.tsx", "../../app/components/kdb-components/pdf-search.tsx", "../../app/routes/wip.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderArgs,\n  V2_MetaFunction } from\n'@remix-run/node';\nimport { json } from '@remix-run/node';\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n'@remix-run/react';\nimport stylesheet from '~/tailwind.css';\nimport Layout from './components/layout';\nimport { rootAuthLoader } from '@clerk/remix/ssr.server';\nimport { ClerkApp, ClerkCatchBoundary } from '@clerk/remix';\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n  { title: 'Variant Classifications' },\n  {\n    name: 'description',\n    content: 'ACMG Variant Classifications Powered by Remix-run'\n  },\n  { name: 'viewport', content: 'width=device-width, initial-scale=1' }];\n\n};\n\nexport const links: LinksFunction = () => [\n{ rel: 'stylesheet', href: stylesheet }];\n\n\nexport async function loader(args: LoaderArgs) {\n  return rootAuthLoader(args, ({ request }) => {\n    const { userId } = request.auth;\n    if (!userId) return json(({} as any), { status: 401 });\n    return {\n      loadUser: true\n    };\n  });\n}\n\nfunction App() {\n  const data = useLoaderData<typeof loader>();\n  return (\n    <html lang=\"en\">\n            <head>\n                <Meta />\n                <Links />\n            </head>\n            <body>\n                <Layout>\n                    <Outlet />\n                    <ScrollRestoration />\n                    <Scripts />\n                    <LiveReload />\n                </Layout>\n            </body>\n        </html>);\n\n}\n// export function ErrorBoundary() {\n//   const error = useRouteError();\n//   if (isRouteErrorResponse(error)) {\n//     return (\n//       <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n//         <h1 className=\"text-2xl font-bold text-red-500\">Uh Oh!...</h1>\n//         <h1 className=\"text-2xl font-bold text-red-500\">\n//           Status:{error.status}\n//         </h1>\n//         <p className=\"text-xl\">{error.data.message}</p>\n//       </div>\n//     );\n//   }\n//   let errorMessage = \"unknown error\";\n//   if (error instanceof Error) {\n//     errorMessage = error.message;\n//   } else if (typeof error === \"string\") {\n//     errorMessage = error;\n//   }\n//   return (\n//     <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n//       <h1 className=\"text-2xl font-bold\">uh Oh..</h1>\n//       <p className=\"text-xl\">something went wrong</p>\n//       <pre>{errorMessage}</pre>\n//     </div>\n//   );\n// }\n\nexport default ClerkApp(App);\n\nexport const CatchBoundary = ClerkCatchBoundary();", "import { UserButton, useAuth } from '@clerk/remix'\nimport { GitHubLogoIcon, TwitterLogoIcon } from '@radix-ui/react-icons'\nimport { Link } from '@remix-run/react'\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n    const { userId } = useAuth()\n    return (\n        <div className=\"flex min-h-screen flex-col bg-[#212529] p-1 text-gray-100 md:p-2\">\n            <header className=\"fixed left-0 right-0 top-0 z-10 flex flex-wrap items-center justify-around gap-2  bg-gray-800 p-1 text-gray-100 shadow-md \">\n                <p className=\"text-center text-xl font-bold md:text-2xl\">\n                    ACMG Variant Classifications\n                </p>\n                <ul className=\"hidden items-center gap-1 md:flex \">\n                    <li className=\"font-semibold\">\n                        <Link to=\"/\">Home</Link>\n                    </li>\n                    <li className=\"font-semibold\">\n                        {' '}\n                        <Link to=\"/criterion\">Criterion</Link>\n                    </li>\n                    <li className=\"font-semibold\">\n                        {' '}\n                        <Link to=\"variants\">Variants</Link>\n                    </li>\n                    <li className=\"font-semibold\">\n                        <Link to=\"/calculator\">Calculator</Link>\n                    </li>\n                    <li className=\"font-semibold\">\n                        <Link to=\"/kdb\">KDB</Link>\n                    </li>\n\n                    <li className=\"font-semibold\">\n                        <Link to=\"/beta\">Beta</Link>\n                    </li>\n                </ul>\n                {userId ? (\n                    <div className=\"flex w-full justify-center md:w-fit\">\n                        <UserButton />\n                    </div>\n                ) : (\n                    <div className=\"text-semibold flex gap-1\">\n                        <Link to=\"/sign-in\">Sign In</Link>\n                        <Link to=\"/sign-up\">Sign Up</Link>\n                    </div>\n                )}\n            </header>\n            <main className=\"relative mt-20 flex-1\">{children}</main>\n            <footer className=\"fixed bottom-0 left-0 right-0 z-50 flex h-10 items-center  justify-center bg-gray-800 text-gray-100 shadow-md\">\n                <ul className=\"flex items-center gap-1\">\n                    <li className=\"flex flex-col  items-center gap-1 font-semibold\">\n                        <GitHubLogoIcon />\n\n                        <a\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://github.com/Derick80\"\n                        >\n                            <p className=\"text-sm\">Github</p>\n                        </a>\n                    </li>\n                    <li className=\"flex flex-col  items-center gap-1 font-semibold\">\n                        <div className=\"flex gap-1\">\n                            <p className=\"text-sm \">Copyright</p>\n                            <p className=\"text-sm\">\n                                {' '}\n                                {new Date().getFullYear()}\n                            </p>\n                        </div>\n                    </li>\n                    <li className=\"flex flex-col  items-center gap-1 font-semibold\">\n                        <TwitterLogoIcon />\n                        <a\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            href=\"https://twitter.com/GeneticsStar\"\n                        >\n                            <p className=\"text-sm\">Twitter</p>\n                        </a>\n                    </li>\n                </ul>\n            </footer>\n        </div>\n    )\n}\n", "import type { ActionArgs } from '@remix-run/node'\nimport { json, redirect } from '@remix-run/node'\nimport { prisma } from '~/server/prisma.server'\nexport async function action({ request, params }: ActionArgs) {\n    const pdfId = params.pdfId\n    console.log('pdfId', pdfId)\n    const formData = await request.formData()\n    const abstract = formData.get('abstract') as string\n\n    const updated = await prisma.pdfLibrary.update({\n        where: {\n            id: pdfId,\n        },\n        data: {\n            abstract,\n        },\n    })\n\n    if (!updated) {\n        return json({ error: 'There was an error updating the abstract' })\n    }\n    return redirect(`/kdb`)\n}\n", "import { PrismaClient } from '@prisma/client'\n\n// Prevent multiple instances of Prisma Client in development\ndeclare global {\n    // eslint-disable-next-line no-var\n    var __db: PrismaClient | undefined\n}\n\nlet prisma: PrismaClient\n\nif (process.env.NODE_ENV === 'production') {\n    prisma = new PrismaClient()\n    prisma.$connect()\n} else {\n    if (!global.__db) {\n        global.__db = new PrismaClient()\n        global.__db.$connect()\n    }\n    prisma = global.__db\n}\nexport { prisma }\n", "import type { LoaderArgs } from '@remix-run/node'\n\nimport { json, redirect } from '@remix-run/node'\nexport async function loader({ request, params }: LoaderArgs) {\n    return json({})\n}\n", "import { Label } from '@radix-ui/react-label'\nimport type { ActionArgs, LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Form, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport { zx } from 'zodix'\nimport PdfList from '~/components/kdb-components/pdf-library-list'\nimport TipTap from '~/components/tiptap'\nimport { prisma } from '~/server/prisma.server'\nimport { validateAction } from '~/utilities/utility-functions'\nexport async function loader({ request, params }: LoaderArgs) {\n    const pdfId = params.pdfId\n    console.log('pdfId', pdfId)\n    const pdfLibrary = await prisma.pdfLibrary.findUnique({\n        where: {\n            id: pdfId,\n        },\n        include: {\n            pdfNotes: {\n                where: {\n                    pdfLibraryId: pdfId,\n                },\n                take: 1,\n                orderBy: {\n                    createdAt: 'desc',\n                },\n            },\n        },\n    })\n    if (!pdfLibrary) {\n        throw new Error('Article not found')\n    }\n\n    return json({ pdfLibrary })\n}\n\nconst schema = z.object({\n    notes: z.string(),\n})\n\ntype ActionInput = z.infer<typeof schema>\n\nexport async function action({ request, params }: ActionArgs) {\n    const pdfId = zx.parseParams(params, {\n        pdfId: z.string().nonempty(),\n    }).pdfId\n\n    const { formData, errors } = await validateAction({\n        request,\n        schema,\n    })\n\n    if (errors) {\n        return json(errors, { status: 400 })\n    }\n\n    const { notes } = formData as ActionInput\n    await prisma.pdfLibrary.update({\n        where: {\n            id: pdfId,\n        },\n        data: {\n            pdfNotes: {\n                create: {\n                    notes: notes,\n                },\n            },\n        },\n    })\n\n    return json({ message: 'success' })\n}\n\nexport default function AnnotatePdfRoute() {\n    const data = useLoaderData<typeof loader>()\n    return (\n        <div className=\"flex h-full w-full flex-col  justify-center gap-2\">\n            <h1 className=\"text-2xl font-bold\">Annotate PDF</h1>\n            <PdfList pdfLibrary={data.pdfLibrary} />\n\n            <Form method=\"post\">\n                <Label htmlFor=\"notes\">Notes</Label>\n                <TipTap\n                    content={\n                        data.pdfLibrary.pdfNotes\n                            .map((note) => note.notes)\n                            .join('') || 'bhi ther'\n                    }\n                />\n                <button type=\"submit\">Save</button>\n            </Form>\n            <div\n                dangerouslySetInnerHTML={{\n                    __html:\n                        data.pdfLibrary.pdfNotes\n                            .map((note) => note.notes)\n                            .join('') || '',\n                }}\n            />\n        </div>\n    )\n}\n", "import {\n    ChevronUpIcon,\n    ChevronDownIcon,\n    DownloadIcon,\n} from '@radix-ui/react-icons'\nimport { Link } from '@remix-run/react'\nimport { AnimatePresence, motion } from 'framer-motion'\nimport React, { useCallback } from 'react'\nimport type { PdfLibrary, myPdfLibrary } from '~/types/kdb-types'\nimport EditAbstract from './pdf-edit-abstract'\n\n\ntype PdfListProps = {\n    pdfLibrary: myPdfLibrary \n}\n\nexport default function PdfList({ pdfLibrary }: PdfListProps) {\n    const [edit, setEdit] = React.useState(false)\n\n    return (\n        <div className=\" flex w-full flex-col gap-2 \">\n            <div\n                key={pdfLibrary.id}\n                className=\"flex w-full flex-col items-stretch gap-4 rounded-md  border-2 p-1 \"\n            >\n                <div className=\"flex flex-col items-center justify-between gap-2  text-xs md:flex-row md:items-baseline\">\n                    <p className=\"text-center text-base font-bold\">\n                        {pdfLibrary.title}\n                    </p>\n                    <p className=\"hidden text-xs font-bold md:block\">\n                        ({pdfLibrary.pubYear})\n                    </p>\n                </div>\n                <AccordianTriggerBar kdbEntry={pdfLibrary}>\n                    <div className=\"flex h-full flex-col items-start gap-2  px-4 py-2 md:flex-row\">\n                        <div className=\"relative h-full w-full\">\n                            {/* inline \n                                    replace .pdf with .webp\n                                */}\n                            <img\n                                src={pdfLibrary.internalPdfUrl.replace(\n                                    '.pdf',\n                                    '.webp'\n                                )}\n                                alt=\"pdf\"\n                            />\n                            <button className=\"absolute right-0 top-0 flex flex-col items-center rounded-md  px-2 font-bold text-black hover:bg-blue-400\">\n                                <Link\n                                    to={pdfLibrary.internalPdfUrl}\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    Download\n                                </Link>\n                                <DownloadIcon />\n                            </button>\n                        </div>\n\n                        <ul className=\"flex h-full w-full px-2\">\n                            <li className=\"flex list-none flex-col gap-2 text-teal-400\">\n                                <p className=\"text-xs font-bold underline\">\n                                    Abstract:\n                                </p>\n                                {pdfLibrary.abstract ? (\n                                    <p className=\"text-xs\">\n                                        {pdfLibrary.abstract}\n                                    </p>\n                                ) : (\n                                    <>\n                                        <p className=\"text-xs\">no abstract</p>\n                                        <button onClick={() => setEdit(true)}>\n                                            add abstract\n                                        </button>\n                                        {edit ? (\n                                            <EditAbstract\n                                                pdfId={pdfLibrary.id}\n                                            />\n                                        ) : null}\n                                    </>\n                                )}\n                                <div className=\"flex flex-col gap-2\">\n                                    <div className=\"flex flex-col justify-between\">\n                                        <p className=\"text-xs font-bold underline\">\n                                            Authors:\n                                        </p>\n                                        <p className=\"text-xs\">\n                                            {pdfLibrary.authors.join(', ')}\n                                        </p>\n                                    </div>\n                                    <div className=\"flex flex-row items-center justify-between\">\n                                        <div className=\"flex flex-col\">\n                                            <p className=\"text-xs font-bold underline\">\n                                                PMID:\n                                            </p>\n                                            <p className=\"text-xs\">\n                                                {pdfLibrary.pmid}\n                                            </p>\n                                        </div>\n                                        <div className=\"flex flex-col\">\n                                            <p className=\"text-xs font-bold underline\">\n                                                PMCID:\n                                            </p>\n                                            <p className=\"text-xs\">\n                                                {pdfLibrary.pmcid}\n                                            </p>\n                                        </div>\n                                        <Link\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                            to={pdfLibrary.internalPdfUrl}\n                                            className=\"text-xs\"\n                                        >\n                                            <p className=\"text-xs font-bold underline\">\n                                                Download PDF\n                                            </p>\n                                        </Link>\n                                        <div className=\"flex flex-col\">\n                                            <Link\n                                                to={`/kdb/${pdfLibrary.id}/annotate`}\n                                            >\n                                                <p className=\"text-xs font-bold underline\">\n                                                    annotate:\n                                                </p>\n                                            </Link>\n                                        </div>\n                                       \n                                     \n                                    </div> <div\n                                            className=\"flex flex-col gap-2\"\n                                    >\n                                            <p className=\"text-xs font-bold underline\">\n                                                Notes:\n                                            </p>\n                                            {\n                                                pdfLibrary?.pdfNotes?.map((note) => {\n                                                    return (\n                                                        <div\n                                                            key={note.id}\n                                                        className=\"flex flex-col gap-2\">\n                                                          <div dangerouslySetInnerHTML={{__html: note.notes}}/>\n\n                                                          <Link\n                                                to={`/kdb/${note.pdfLibraryId}/annotate`}\n                                            >\n                                                <p className=\"text-xs font-bold underline\">\n                                                    annotate:\n                                                </p>\n                                            </Link>\n\n                                                            </div>\n                                                    )\n                                                })\n                                            }\n                                        </div>\n                                </div>\n                            </li>\n                        </ul>\n                    </div>\n                </AccordianTriggerBar>\n            </div>\n        </div>\n    )\n}\n\ntype Props = {\n    children: React.ReactNode\n    kdbEntry: PdfLibrary\n}\n\nfunction AccordianTriggerBar(props: Props) {\n    const { children, kdbEntry } = props\n\n    const [open, setOpen] = React.useState(false)\n    const toggleOpen = useCallback(() => {\n        setOpen((open) => !open)\n    }, [])\n\n    return (\n        <div className=\"flex flex-col gap-2 rounded-md md:gap-4\">\n            <div className=\"flex flex-col items-center justify-between gap-2 text-xs md:flex-row\">\n                <div className=\"flex flex-col items-center gap-1 md:items-start \">\n                    <p className=\"text-xs font-bold underline\">Journal</p>\n                    <p className=\"text-xs font-bold\">{kdbEntry.journal}</p>\n                </div>\n                <div className=\"grow\" />\n\n                <AccordianNavBar kdbEntry={kdbEntry} />\n                <div className=\"grow\" />\n\n                <div className=\"flex flex-col items-center  gap-1\">\n                    <p className=\"text-xs font-bold underline\">\n                        Publication Year\n                    </p>\n                    <p className=\"text-xs font-bold\">({kdbEntry.pubYear})</p>\n                </div>\n                <div className=\"flex flex-col items-center gap-1 pl-4\">\n                    <button\n                        type=\"button\"\n                        onClick={toggleOpen}\n                        aria-label=\"Search database\"\n                        className=\"rounded-md p-2 text-teal-400 transition-all duration-300 hover:backdrop-blur-sm\"\n                    >\n                        {open ? (\n                            <div className=\"flex flex-col items-center gap-1 md:items-end\">\n                                <p className=\"text-xs font-bold\">\n                                    Hide Details\n                                </p>\n                                <ChevronUpIcon />\n                            </div>\n                        ) : (\n                            <div className=\"flex flex-col items-center gap-1 md:items-end\">\n                                <p className=\"text-xs font-bold\">\n                                    View Details\n                                </p>\n                                <ChevronDownIcon />\n                            </div>\n                        )}\n                    </button>\n                </div>\n            </div>\n            <AnimatePresence>\n                {open && (\n                    <motion.div\n                        key={kdbEntry.id}\n                        initial={{ opacity: 0, height: 0 }}\n                        animate={{ opacity: 1, height: 'auto' }}\n                        exit={{ opacity: 0, height: 0 }}\n                        transition={{ type: 'tween' }}\n                    >\n                        <div className=\"flex  flex-col items-stretch\">\n                            {children}\n                        </div>\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </div>\n    )\n}\n\nfunction AccordianNavBar({ kdbEntry }: { kdbEntry: PdfLibrary }) {\n    return (\n        <div className=\"flex flex-col items-center gap-1\">\n            <p className=\"text-xs font-bold underline\">Links</p>\n\n            <div className=\"flex flex-row items-center justify-between gap-2 text-xs\">\n                <Link\n                    to={`https://pubmed.ncbi.nlm.nih.gov/${kdbEntry.pmid}/`}\n                    className=\"text-xs font-bold hover:cursor-pointer\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    PubMed\n                </Link>\n                {kdbEntry.pmcid ? (\n                    <Link\n                        to={`https://www.ncbi.nlm.nih.gov/pmc/${kdbEntry.pmcid}/`}\n                        className=\"text-xs font-bold hover:cursor-pointer\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        PMC\n                    </Link>\n                ) : null}\n                <Link\n                    to={`https://doi.org/${kdbEntry.doi}`}\n                    className=\"text-xs font-bold hover:cursor-pointer\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    DOI\n                </Link>\n                <Link\n                    to={kdbEntry.semanticScholarUrl}\n                    className=\"text-center text-xs font-bold hover:cursor-pointer\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Semantic Scholar\n                </Link>\n            </div>\n        </div>\n    )\n}\n", "import { Form } from '@remix-run/react'\n\nexport default function EditAbstract({ pdfId }: { pdfId: string }) {\n    return (\n        <Form\n            className=\"z-10 flex flex-col\"\n            method=\"post\"\n            action={`/kdb/${pdfId}/edit-abstract`}\n        >\n            <div className=\"flex flex-col\">\n                <label htmlFor=\"abstract\">Abstract</label>\n                <textarea\n                    name=\"abstract\"\n                    id=\"abstract\"\n                    cols={30}\n                    rows={10}\n                ></textarea>\n            </div>\n            <button type=\"submit\">Submit</button>\n        </Form>\n    )\n}\n", "import {\n    FontBoldIcon,\n    FontItalicIcon,\n    StrikethroughIcon,\n    UnderlineIcon,\n    Pencil1Icon,\n    HeadingIcon,\n    Link1Icon,\n    LinkBreak1Icon,\n    CodeIcon,\n    ImageIcon,\n    ListBulletIcon,\n} from '@radix-ui/react-icons'\nimport { Editor, EditorContent, useEditor } from '@tiptap/react'\nimport Superscript from '@tiptap/extension-superscript'\nimport Underline from '@tiptap/extension-underline'\nimport Link from '@tiptap/extension-link'\nimport Subscript from '@tiptap/extension-subscript'\nimport StarterKit from '@tiptap/starter-kit'\nimport Image from '@tiptap/extension-image'\nimport Highlight from '@tiptap/extension-highlight'\nimport React from 'react'\nimport Heading from '@tiptap/extension-heading'\nimport BulletList from '@tiptap/extension-bullet-list'\nimport Code from '@tiptap/extension-code'\nimport TextStyle from '@tiptap/extension-text-style'\nimport OrderedList from '@tiptap/extension-ordered-list'\nimport Typography from '@tiptap/extension-typography'\n\nconst MenuBar = ({ editor }: { editor: Editor }) => {\n    const addImage = React.useCallback(() => {\n        const url = window.prompt('URL')\n\n        if (url) {\n            editor.chain().focus().setImage({ src: url }).run()\n        }\n    }, [editor])\n    const setLink = React.useCallback(() => {\n        const previousUrl = editor?.getAttributes('link').href\n        const url = window.prompt('URL', previousUrl)\n\n        // cancelled\n        if (url === null) {\n            return\n        }\n\n        // empty\n        if (url === '') {\n            editor?.chain().focus().extendMarkRange('link').unsetLink().run()\n\n            return\n        }\n\n        // update link\n        editor\n            ?.chain()\n            .focus()\n            .extendMarkRange('link')\n            .setLink({ href: url })\n            .run()\n    }, [editor])\n\n    if (!editor) {\n        return null\n    }\n\n    return (\n        <div className=\"flex h-12 w-full flex-row items-center justify-between border-b border-gray-200 bg-gray-100 text-black\">\n            <button\n                type=\"button\"\n                className={editor.isActive('bold') ? 'is-active' : ''}\n                onClick={() => editor.chain().focus().toggleBold().run()}\n            >\n                <FontBoldIcon />\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleItalic().run()}\n            >\n                <FontItalicIcon />\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleStrike().run()}\n            >\n                <StrikethroughIcon />\n            </button>\n\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleUnderline().run()}\n            >\n                <UnderlineIcon />\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleSuperscript().run()}\n            >\n                <svg\n                    className=\"text-black\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    width=\"16\"\n                    height=\"16\"\n                >\n                    <path d=\"M11 7V20H9V7H3V5H15V7H11ZM19.5507 6.5803C19.7042 6.43453 19.8 6.22845 19.8 6C19.8 5.55817 19.4418 5.2 19 5.2C18.5582 5.2 18.2 5.55817 18.2 6C18.2 6.07624 18.2107 6.14999 18.2306 6.21983L17.0765 6.54958C17.0267 6.37497 17 6.1906 17 6C17 4.89543 17.8954 4 19 4C20.1046 4 21 4.89543 21 6C21 6.57273 20.7593 7.08923 20.3735 7.45384L18.7441 9H21V10H17V9L19.5507 6.5803V6.5803Z\"></path>\n                </svg>\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleSubscript().run()}\n            >\n                <svg\n                    className=\"text-black\"\n                    color=\"currentColor\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    viewBox=\"0 0 24 24\"\n                    width=\"16\"\n                    height=\"16\"\n                >\n                    <path d=\"M11 6V19H9V6H3V4H17V6H11ZM19.5507 16.5803C19.7042 16.4345 19.8 16.2284 19.8 16C19.8 15.5582 19.4418 15.2 19 15.2C18.5582 15.2 18.2 15.5582 18.2 16C18.2 16.0762 18.2107 16.15 18.2306 16.2198L17.0765 16.5496C17.0267 16.375 17 16.1906 17 16C17 14.8954 17.8954 14 19 14C20.1046 14 21 14.8954 21 16C21 16.5727 20.7593 17.0892 20.3735 17.4538L18.7441 19H21V20H17V19L19.5507 16.5803V16.5803Z\"></path>\n                </svg>{' '}\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleHighlight().run()}\n            >\n                <Pencil1Icon />\n            </button>\n\n            <button\n                type=\"button\"\n                onClick={() =>\n                    editor.chain().focus().toggleHeading({ level: 1 }).run()\n                }\n                className={\n                    editor.isActive('heading', { level: 1 }) ? 'is-active' : ''\n                }\n            >\n                <div className=\"flex flex-row items-center justify-center\">\n                    <HeadingIcon />\n                    <p className=\"text-[15px]\">1</p>\n                </div>\n            </button>\n            <button\n                type=\"button\"\n                onClick={() =>\n                    editor.chain().focus().toggleHeading({ level: 2 }).run()\n                }\n                className={\n                    editor.isActive('heading', { level: 2 }) ? 'is-active' : ''\n                }\n            >\n                <div className=\"flex flex-row items-center justify-center\">\n                    <HeadingIcon />\n                    <p className=\"text-[15px]\">2</p>\n                </div>\n            </button>\n            <button\n                type=\"button\"\n                onClick={() =>\n                    editor.chain().focus().toggleHeading({ level: 3 }).run()\n                }\n                className={\n                    editor.isActive('heading', { level: 3 }) ? 'is-active' : ''\n                }\n            >\n                <div className=\"flex flex-row items-center justify-center\">\n                    <HeadingIcon />\n                    <p className=\"text-[15px]\">3</p>\n                </div>\n            </button>\n            <button\n                type=\"button\"\n                onClick={setLink}\n                className={editor.isActive('link') ? 'is-active' : ''}\n            >\n                <Link1Icon />\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().unsetLink().run()}\n                disabled={!editor.isActive('link')}\n            >\n                <LinkBreak1Icon />\n            </button>\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleCode().run()}\n                className={editor.isActive('code') ? 'is-active' : ''}\n            >\n                <CodeIcon />\n            </button>\n            <button\n                className={editor.isActive('image') ? 'is-active' : ''}\n                type=\"button\"\n                onClick={addImage}\n            >\n                <ImageIcon />\n            </button>\n            <button\n                type=\"button\"\n                className={editor.isActive('bulletList') ? 'is-active' : ''}\n                onClick={() => editor.chain().focus().toggleBulletList().run()}\n            >\n                <ListBulletIcon />\n            </button>\n\n            <button\n                type=\"button\"\n                onClick={() => editor.chain().focus().toggleOrderedList().run()}\n            >\n                <ListBulletIcon />\n            </button>\n        </div>\n    )\n}\nconst TipTap = ({ content }: { content: string }) => {\n    const editor = useEditor({\n        extensions: [\n            StarterKit.configure({\n                heading: {\n                    levels: [1, 2, 3],\n                },\n            }),\n            Heading,\n            Superscript,\n            Subscript,\n            Highlight,\n            Link,\n            Code,\n            TextStyle,\n            BulletList,\n            OrderedList,\n            Image,\n            Typography,\n        ],\n        content: content,\n        editorProps: {\n            attributes: {\n                class: 'flex-1 p-4 mx-auto border border-t-0 text-black dark:text-slate-50 w-full h-auto text-sm m-5 focus:outline-non rounded-b-md mt-0 ',\n            },\n        },\n    })\n\n    if (!editor) return null\n\n    return (\n        <div className=\"flex flex-col gap-2 border-2 border-red-500\">\n            <MenuBar editor={editor} />\n            <EditorContent editor={editor} />\n            <input type=\"hidden\" name=\"notes\" value={editor?.getHTML() || ''} />\n        </div>\n    )\n}\n\nexport default TipTap\n", "import { useMatches } from '@remix-run/react'\nimport { useMemo } from 'react'\nimport type { ZodError, ZodSchema } from 'zod'\n\n// This function is used to get the data from the routes\n\nexport async function useMatchesData(\n    id: string\n): Promise<Record<string, string>> {\n    const matchingRoutes = useMatches()\n    const route = useMemo(\n        () => matchingRoutes.find((route) => route.id === id),\n        [matchingRoutes, id]\n    )\n    return route?.data\n}\n\n// This type and the next function are used to validate the input of the action functions in the routes\ntype ActionErrors<T> = Partial<Record<keyof T, string>>\n\nexport async function validateAction<ActionInput>({\n    request,\n    schema,\n}: {\n    request: Request\n    schema: ZodSchema\n}) {\n    const body = Object.fromEntries(await request.formData()) as ActionInput\n\n    try {\n        const formData = schema.parse(body) as ActionInput\n        return { formData, errors: null }\n    } catch (error) {\n        console.log(error)\n\n        const errors = error as ZodError<ActionInput>\n\n        return {\n            formData: body,\n            errors: errors.issues.reduce(\n                (acc: ActionErrors<ActionInput>, curr) => {\n                    const key = curr.path[0] as keyof ActionInput\n\n                    acc[key] = curr.message\n                    return acc\n                },\n                {}\n            ),\n        }\n    }\n}\n", "import { useAuth } from '@clerk/remix'\nimport type { ActionArgs, LoaderArgs } from '@remix-run/node'\nimport * as Label from '@radix-ui/react-label'\n\nimport { json, redirect } from '@remix-run/node'\nimport { Form, useLoaderData } from '@remix-run/react'\nimport { z } from 'zod'\nimport Button from '~/components/button'\nimport { validateAction } from '~/utilities/utility-functions'\nimport { prisma } from '~/server/prisma.server'\nexport async function loader({ request, params }: LoaderArgs) {\n    const searchParam = params.splat || ''\n\n    const formattedsearchParam = searchParam\n        .split(' ')\n        .join('_')\n        .split('_Data')\n        .join('_data')\n        .toLowerCase()\n\n    const criterion = await prisma.criterion.findMany({\n        where: {\n            OR: [\n                {\n                    evidenceType: {\n                        contains: formattedsearchParam,\n                    },\n                },\n                {\n                    id: {\n                        contains: formattedsearchParam,\n                    },\n                },\n            ],\n        },\n\n        orderBy: {\n            evidenceType: 'asc',\n        },\n    })\n\n    return json({ criterion, searchParam })\n}\n\nconst schema = z.object({\n    criterionName: z.string(),\n    definition: z.string(),\n    evidenceType: z.string(),\n    example: z.string(),\n    criterionBaseWeight: z.string(),\n    caveat: z.string(),\n})\n\ntype ActionInput = z.infer<typeof schema>\nexport async function action({ request, params }: ActionArgs) {\n    const criterionId = params.splat\n    const userId = useAuth\n    if (!userId) {\n        return redirect('/sign-in')\n    }\n\n    const { formData, errors } = await validateAction({ request, schema })\n\n    if (errors) {\n        return json({ errors })\n    }\n    const {\n        criterionName,\n        definition,\n        evidenceType,\n        example,\n        criterionBaseWeight,\n        caveat,\n    } = formData as ActionInput\n\n    const updated = await prisma.criterion.update({\n        where: {\n            id: criterionId,\n        },\n        data: {\n            label: criterionName,\n            definition,\n            evidenceType,\n            example,\n            criterionBaseWeight,\n            caveat,\n        },\n    })\n\n    if (updated) {\n        return redirect('/criterion')\n    }\n}\nexport default function EditIndex() {\n    const data = useLoaderData<typeof loader>()\n\n    return (\n        <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2\">\n            <Form\n                className=\"flex w-full max-w-2xl flex-col gap-2 rounded-md border p-4  \"\n                method=\"post\"\n            >\n                <Label.Root\n                    className=\"text-xl font-bold text-white\"\n                    htmlFor=\"criterionName\"\n                >\n                    Criterion Name\n                </Label.Root>\n                <input\n                    className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n                    type=\"text\"\n                    name=\"criterionName\"\n                    id=\"criterionName\"\n                    placeholder=\"criterionName\"\n                    defaultValue={data.criterion[0].label}\n                />\n                <div className=\"flex flex-col gap-2\">\n                    <label className=\"text-xl font-bold\" htmlFor=\"definition\">\n                        Definition\n                    </label>\n                    <input\n                        className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n                        type=\"text\"\n                        name=\"definition\"\n                        id=\"definition\"\n                        placeholder=\"definition\"\n                        defaultValue={data.criterion[0].definition}\n                    />\n                </div>\n                <div className=\"flex flex-col gap-2\">\n                    <label className=\"text-xl font-bold\" htmlFor=\"evidenceType\">\n                        Evidence Type\n                    </label>\n                    <input\n                        className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n                        type=\"text\"\n                        name=\"evidenceType\"\n                        id=\"evidenceType\"\n                        placeholder=\"evidenceType\"\n                        defaultValue={data.criterion[0].evidenceType}\n                    />\n                </div>\n                <div className=\"flex flex-col gap-2\">\n                    <label className=\"text-xl font-bold\" htmlFor=\"example\">\n                        Example\n                    </label>\n                    <input\n                        className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n                        type=\"text\"\n                        name=\"example\"\n                        id=\"example\"\n                        placeholder=\"...example\"\n                        defaultValue={data.criterion[0].example || ''}\n                    />\n                </div>\n                <div className=\"flex flex-col gap-2\">\n                    <label\n                        className=\"text-xl font-bold\"\n                        htmlFor=\"criterionBaseWeight\"\n                    >\n                        Criterion Base Weight\n                    </label>\n                    <select\n                        className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n                        name=\"criterionBaseWeight\"\n                        id=\"criterionBaseWeight\"\n                        defaultValue={data.criterion[0].criterionBaseWeight}\n                    >\n                        <option value=\"P\">Supporting</option>\n                        <option value=\"M\">Moderate</option>\n                        <option value=\"S\">Strong</option>\n                        <option value=\"VS\">Very Strong</option>\n                        <option value=\"SA\">Stand Alone</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col gap-2\">\n                    <label className=\"text-xl font-bold\" htmlFor=\"caveat\">\n                        Caveat\n                    </label>\n                    <input\n                        className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n                        type=\"text\"\n                        name=\"caveat\"\n                        id=\"caveat\"\n                        defaultValue={data.criterion[0].caveat || ''}\n                        onChange={(e) => {\n                            console.log(e.target.value, 'e.target.value')\n                        }}\n                    />\n                </div>\n                <Button variant=\"warning_filled\" size=\"large\" type=\"submit\">\n                    Submit\n                </Button>\n            </Form>\n        </div>\n    )\n}\n", "import { type ButtonHTMLAttributes, type ReactNode } from 'react'\nimport clsx from 'clsx'\n\ntype buttonVariant =\n    | 'success'\n    | 'warning'\n    | 'danger'\n    | 'primary'\n    | 'ghost'\n    | 'success_filled'\n    | 'danger_filled'\n    | 'primary_filled'\n    | 'icon_filled'\n    | 'icon_unfilled'\n    | 'warning_filled'\n    | 'icon_text_filled'\n    | 'icon_text_unfilled'\ntype buttonSize = 'base' | 'large' | 'small' | 'tiny'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n    size?: buttonSize\n    variant?: buttonVariant\n    children: ReactNode\n}\n\nexport default function Button({\n    size = 'base',\n    variant = 'primary_filled',\n    children,\n    className,\n    ...props\n}: Props) {\n    const sizeClasses = {\n        base: 'px-4 py-2',\n        large: 'px-6 py-3',\n        small: 'px-2 py-1',\n        tiny: 'px-1 py-1 text-xs',\n    }\n    const variantClasses = {\n        success:\n            'rounded border-2  border-green-500 dark:text-slate-50 hover:bg-green-600 hover:border-green-600 hover:text-slate-50 capitalize',\n        warning:\n            'rounded border-2 border-orange-200 dark:text-slate-50 hover:bg-orange-300 hover:border-orange-200 hover:text-slate-50 capitalize',\n        danger: 'rounded border-2 border-red-500 dark:text-slate-50 hover:bg-red-600 hover:border-red-600 hover:text-slate-50 capitalize',\n        primary:\n            'rounded border-2  border-blue-500 capitalize dark:text-slate-50 hover:bg-blue-600 hover:border-blue-600 hover:text-slate-50 capitalize',\n        ghost: 'hover:bg-slate-50 hover:text-slate-500 capitalize hover:border-2',\n        success_filled:\n            'rounded border-2 bg-green-500 border-green-500 text-slate-50 hover:bg-green-600 hover:border-green-600 capitalize',\n        warning_filled:\n            'rounded border-2 bg-orange-500 border-orange-500  hover:bg-orange-300 hover:border-orange-300 capitalize ',\n        danger_filled:\n            'rounded border-2 bg-red-500 border-red-500 text-slate-50 hover:bg-red-600 hover:border-red-600 capitalize',\n        primary_filled:\n            'rounded border-2 bg-blue-500 border-blue-500 text-slate-50 hover:bg-blue-600 hover:border-blue-600',\n        icon_filled:\n            'rounded border-2 bg-slate-500 border-slate-500 text-slate-50 hover:bg-slate-600 hover:border-slate-600',\n        icon_unfilled:\n            'font-semibold text-slate-500 hover:bg-slate-50 dark:text-slate-50',\n        icon_text_filled:\n            'rounded border-2 bg-slate-500 border-slate-500 text-slate-50 hover:bg-slate-600 hover:border-slate-600 capitalize flex flex-row items-center gap-2',\n        icon_text_unfilled:\n            'font-semibold text-slate-500 hover:bg-slate-900 capitalize dark:text-slate-50 flex flex-row items-center gap-2',\n    }\n    return (\n        <button\n            className={clsx(\n                'flex h-fit w-fit flex-row items-center gap-2 rounded-md text-xs font-medium transition-all disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:border-transparent disabled:hover:bg-transparent disabled:hover:text-slate-500',\n                sizeClasses[size],\n                variantClasses[variant],\n                className\n            )}\n            {...props}\n        >\n            {children}\n        </button>\n    )\n}\n", "export default function CriterionHelpRoute() {\n    return (\n        <div\n            className=\"\nflex\"\n        >\n            <h3 className=\"text-2xl font-bold\">Criterion Help</h3>\n            <h3 className=\"text-xl font-bold\">Evidence Types</h3>\n            <div className=\"flex flex-col gap-2\"></div>\n        </div>\n    )\n}\n", "import { prisma } from '~/server/prisma.server'\n\nexport async function getFilteredGenes(whereFilter: string) {\n    return await prisma.gene.findMany({\n        where: {\n            symbol: {\n                contains: whereFilter,\n                mode: 'insensitive',\n            },\n        },\n        include: {\n            lofMetrics: true,\n        },\n    })\n}\n", "import type { LoaderArgs } from '@remix-run/node'\n\nimport { json, redirect } from '@remix-run/node'\nimport { Link, Outlet, useLoaderData } from '@remix-run/react'\nimport { prisma } from '~/server/prisma.server'\nimport { VariantSummaryCard } from './variants'\nimport { variants } from '~/acmg-functions-utilities/variants'\nexport async function loader({ request, params }: LoaderArgs) {\n    const id = params.id\n\n    if (!id) return redirect('/variants')\n\n    const variant = await variants.find((variant) => variant.id === id)\n\n    if (!variant) return redirect('/variants')\n    return json({ variant })\n}\n\nexport default function VariantRoute() {\n    const data = useLoaderData<typeof loader>()\n\n    return (\n        <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2 md:flex-row\">\n            <main className=\"flex flex-1 flex-col items-center gap-2 text-center\">\n                <h1 className=\"text-6xl font-bold\">Variant</h1>\n                <Link to={`/variants/${data.variant.id}/annotate`}>\n                    annotate\n                </Link>\n                <VariantSummaryCard\n                    variant={data.variant}\n                    key={data.variant.id}\n                />\n            </main>\n            <Outlet />\n        </div>\n    )\n}\n", "import type { LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { variants } from '~/acmg-functions-utilities/variants'\nimport { Link, NavLink, Outlet, useLoaderData } from '@remix-run/react'\nimport { DotsVerticalIcon, InfoCircledIcon } from '@radix-ui/react-icons'\nimport React, { useCallback } from 'react'\nexport async function loader({ request, params }: LoaderArgs) {\n    return json({ variants })\n}\n\nexport default function VariantRoute() {\n    const data = useLoaderData<typeof loader>()\n\n    return (\n        <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2\">\n            <main className=\"flex flex-1 flex-col items-center gap-2 px-20 text-center\">\n                <Outlet />\n                <h1 className=\"text-6xl font-bold\">Variant</h1>\n\n                {data.variants.map((variant) => (\n                    <CardContainer key={variant.id} variant={variant} />\n                ))}\n            </main>\n        </div>\n    )\n}\n\nconst CardContainer = ({ variant }: { variant: VariantCardType }) => {\n    const [flip, setFlip] = React.useState(false)\n\n    const handleFlip = useCallback(() => {\n        setFlip((flip) => !flip)\n    }, [])\n\n    return (\n        <div\n            key={variant.id}\n            className=\"h-[350px] w-[450px] rounded-md border-2 bg-gray-800 p-2 \"\n        >\n            <div className=\"duration-800 preserve-3d relative h-full w-full transform-gpu items-center transition-transform\">\n                {flip ? (\n                    <CardBack variant={variant} handleFlip={handleFlip} />\n                ) : (\n                    <CardFront variant={variant} handleFlip={handleFlip} />\n                )}\n            </div>\n        </div>\n    )\n}\n\nfunction CardFront({\n    handleFlip,\n    variant,\n}: {\n    handleFlip: () => void\n    variant: VariantCardType\n}) {\n    return (\n        <div className=\"[ backface-visibility:hidden] absolute flex h-full w-full flex-col\">\n            <div className=\"flex h-auto w-full grow flex-col justify-between gap-3 overflow-hidden rounded-md border p-2\">\n                <Link to={`/variants/${variant.id}/annotate`}>\n                    <h3 className=\"text-xl font-bold text-slate-50\">\n                        {variant.symbol}\n                    </h3>\n                </Link>\n                <div className=\"flex flex-row items-center justify-between gap-3\">\n                    <div className=\"flex w-1/2 flex-col items-start gap-1\">\n                        <span className=\"text-xs text-gray-500\">\n                            <p className=\"text-left text-xs font-semibold text-slate-50\">\n                                HGVS:\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                                {variant.hgvs}\n                            </p>\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                            <p className=\"text-left text-xs font-semibold text-slate-50\">\n                                Protein:\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                                {variant.protein}\n                            </p>\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                            <p className=\"text-left text-xs font-semibold text-slate-50\">\n                                cDNA:\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                                {variant.cdna}\n                            </p>\n                        </span>\n                    </div>\n                    <div className=\"flex w-1/2 flex-col items-start gap-2 \">\n                        <span className=\"text-xs text-gray-500\">\n                            <p className=\"text-left text-xs font-semibold text-slate-50\">\n                                Transcript:\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                                {variant.transcript}\n                            </p>\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                            <p className=\"text-left text-xs font-semibold text-slate-50\">\n                                CPRA:\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                                chr{variant.chr}:{variant.pos}\n                                {variant.ref}&gt;{variant.alt}\n                            </p>\n                        </span>\n                        <span className=\"text-xs text-gray-500\">\n                            <p className=\"text-left text-xs font-semibold text-slate-50\">\n                                AA:\n                            </p>\n                            <p className=\"text-xs text-gray-500\">\n                                {variant.aa}\n                            </p>\n                        </span>\n                    </div>\n                </div>\n\n                <div className=\"flex flex-col gap-2\">\n                    <p className=\"text-center text-xs font-semibold text-slate-50\">\n                        Description\n                    </p>\n                    <p className=\"text-xs text-gray-500\">\n                        {variant.description}\n                    </p>\n                </div>\n            </div>\n\n            <div className=\"flex flex-row justify-end gap-2\">\n                <button onClick={handleFlip}>\n                    <InfoCircledIcon />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nfunction CardBack({\n    handleFlip,\n    variant,\n}: {\n    handleFlip: () => void\n    variant: VariantCardType\n}) {\n    return (\n        <div className=\"[ backface-visibility:hidden] absolute flex h-full w-full flex-col\">\n            <div className=\"flex h-auto w-full grow flex-col gap-1 overflow-hidden rounded-md border p-2\">\n                back\n            </div>\n            <div className=\"flex flex-row justify-end gap-2\">\n                <button onClick={handleFlip}>\n                    <InfoCircledIcon />\n                </button>\n            </div>\n        </div>\n    )\n}\nexport type VariantCardType = {\n    id: string\n    symbol: string\n    transcript: string\n    hgvs: string\n    protein: string\n    cdna: string\n    aa: string\n    chr: string\n    pos: string\n    ref: string\n    alt: string\n    hgnc: string\n    omim: string\n    clinvar: string\n    gnomad: string\n    sift: string\n    polyphen: string\n    zygosity: string\n    inheritance: string\n    vaf: string\n    description: string\n}\n\nexport function VariantCardFront({ variant }: { variant: VariantCardType }) {\n    const [flip, setFlip] = React.useState(false)\n\n    return (\n        <div className=\"flex  w-full flex-col gap-1 rounded-md border-2 p-2\">\n            <div\n                className=\"flex h-[350px] w-[350px] flex-col gap-1 overflow-hidden rounded-md bg-transparent p-2\"\n                key={variant.id}\n            ></div>\n        </div>\n    )\n}\n\nexport function VariantCardBack({ variant }: { variant: VariantCardType }) {\n    return (\n        <div\n            className=\"flex h-auto w-full flex-col gap-1 overflow-hidden rounded-md border-red-500  p-2\"\n            key={variant.id}\n        >\n            <div className=\"flex flex-row items-center justify-between gap-2\">\n                <h5 className=\"text-xl font-bold text-gray-900\">\n                    {variant.symbol}\n                </h5>\n\n                <span className=\"text-xs text-gray-500\">{variant.hgvs}</span>\n                <span className=\"text-xs text-gray-500\">{variant.protein}</span>\n            </div>\n            <div className=\"flex h-full flex-col gap-2\">\n                <div className=\"flex w-full flex-row items-center gap-2\">\n                    <span className=\"text-xs text-gray-500\">\n                        chr{variant.chr}:{variant.pos}\n                        {variant.ref}&gt;{variant.alt}\n                    </span>\n\n                    <span className=\"text-xs text-gray-500\">\n                        {variant.gnomad}\n                    </span>\n                </div>\n                <div className=\"flex w-full flex-col gap-2\">\n                    <div className=\"flex w-full flex-col gap-2\">\n                        <div\n                            className=\"flex flex-col gap-2\n               rounded-md p-1\n            \"\n                        >\n                            <h5 className=\"text-left text-xs font-semibold text-gray-500\">\n                                inSilico\n                            </h5>\n                            <div className=\"flex flex-row gap-1\">\n                                <p className=\"text-xs text-gray-500\">\n                                    Combined:\n                                </p>\n                                <p className=\"text-xs text-gray-500\">\n                                    {sortInSilico({\n                                        polyphen: variant.polyphen,\n                                        sift: variant.sift,\n                                    })}\n                                </p>\n                            </div>\n                            <div className=\"flex flex-row gap-2\">\n                                <p className=\"text-xs text-gray-500\">SIFT:</p>\n                                <span className=\"text-xs text-gray-500\">\n                                    {variant.sift}\n                                </span>\n                                <p className=\"text-xs text-gray-500\">\n                                    PolyPhen:\n                                </p>\n\n                                <span className=\"text-xs text-gray-500\">\n                                    {variant.polyphen}\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"flex w-full flex-row gap-1\">\n                        <h5 className=\"text-xs font-semibold text-gray-500\">\n                            Inheritance:\n                        </h5>\n                        <span className=\"text-xs text-gray-500\">\n                            {variant.inheritance === 'Autosomal Dominant'\n                                ? 'A.D'\n                                : 'A.R'}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport function VariantSummaryCard({ variant }: { variant: VariantCardType }) {\n    const [flip, setFlip] = React.useState(false)\n\n    return (\n        <div\n            className=\"flex h-auto w-full flex-col gap-1 overflow-hidden rounded-md border p-2\"\n            key={variant.id}\n        >\n            {flip ? (\n                <VariantCardBack variant={variant} />\n            ) : (\n                <VariantCardFront variant={variant} />\n            )}\n            <div className=\"flex flex-row justify-end gap-2\">\n                <DotsVerticalIcon />\n                <button onClick={() => setFlip(!flip)}>\n                    <InfoCircledIcon />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nfunction sortInSilico({ polyphen, sift }: { polyphen: string; sift: string }) {\n    const phen = polyphen.toLowerCase()\n    const sifted = sift.toLowerCase()\n\n    if (phen === 'benign' && sift === 'benign') {\n        return 'Benign'\n    } else if (phen === 'benign' && sifted === 'deleterious') {\n        return 'Likely Benign'\n    } else if (phen === 'possibly damaging' && sifted === 'tolerated') {\n        return 'Likely Benign'\n    } else if (phen === 'possibly damaging' && sifted === 'deleterious') {\n        return 'Likely Pathogenic'\n    } else if (phen === 'probably damaging' && sifted === 'tolerated') {\n        return 'Likely Pathogenic'\n    } else if (phen === 'probably damaging' && sifted === 'deleterious') {\n        return 'Pathogenic'\n    } else {\n        return 'Unknown'\n    }\n}\n", "export const variants = [\n    {\n        id: '1',\n        symbol: 'BRCA2',\n        transcript: 'NM_000059.3',\n        hgvs: 'NM_000059.3:c.68_69del',\n        protein: 'NP_000050.2:p.Glu23Valfs*17',\n        cdna: 'c.68_69del',\n        aa: 'p.Glu23Valfs*17',\n        chr: '13',\n        pos: '32315474',\n        ref: 'CT',\n        alt: 'C',\n        hgnc: 'HGNC:1101',\n        omim: 'OMIM:600185',\n        clinvar: 'RCV000000000',\n        gnomad: '0.0000000000',\n        sift: 'Deleterious',\n        polyphen: 'Probably Damaging',\n        zygosity: 'Heterozygous',\n        inheritance: 'Autosomal Dominant',\n        vaf: '0.5',\n        description: 'This is a brca2 variant description',\n    },\n    {\n        id: '2',\n        symbol: 'EGFR',\n        transcript: 'NM_005228.4',\n        hgvs: 'NM_005228.4:c.2155G>T',\n        protein: 'NP_005219.2:p.Glu719*',\n        cdna: 'c.2155G>T',\n        aa: 'p.Glu719*',\n        chr: '7',\n        pos: '55249071',\n        ref: 'G',\n        alt: 'T',\n        hgnc: 'HGNC:3236',\n        omim: 'OMIM:131550',\n        clinvar: 'RCV000000000',\n        gnomad: '0.0000000000',\n        sift: 'Deleterious',\n        polyphen: 'Probably Damaging',\n        zygosity: 'Heterozygous',\n        inheritance: 'Autosomal Dominant',\n        vaf: '0.5',\n        descriptions: 'This is a EGFR variant description',\n    },\n    {\n        id: '3',\n        symbol: 'RYR1',\n        transcript: 'NM_000540.3',\n        hgvs: 'NM_000540.2(RYR1):c.1202G>A',\n        protein: 'NP_001036188.1:p.Arg401His',\n        cdna: 'c.1202G>A',\n        aa: 'pp.Arg401His',\n        chr: '19',\n        pos: '38942483',\n        ref: 'G',\n        alt: 'A',\n        hgnc: 'HGNC:10479',\n        omim: 'OMIM:180901',\n        clinvar: '133030',\n        gnomad: '0.0000000000',\n        sift: 'Deleterious',\n        polyphen: 'Probably Damaging',\n        zygosity: 'Heterozygous',\n        inheritance: 'Autosomal Resessive',\n        vaf: '0.5',\n        description: 'This is a RYR1 variant description',\n    },\n    {\n        id: '4',\n        symbol: 'TP53',\n        transcript: 'NM_000546.6',\n        hgvs: 'NM_000546.5:c.935C>G',\n        protein: 'NP_000537.3:p.Thr312Ser',\n        cdna: 'c.935C>G',\n        aa: 'p.Thr312Ser',\n        chr: '17',\n        pos: '7576911',\n        ref: 'C',\n        alt: 'G',\n        hgnc: 'HGNC:11998',\n        omim: 'OMIM:191170',\n        clinvar: 'RCV000000000',\n        gnomad: '0.0000000000',\n        sift: 'benign',\n        polyphen: 'benign',\n        zygosity: 'Heterozygous',\n        inheritance: 'Autosomal Dominant',\n        vaf: '0.5',\n        description: 'This is a TP53 variant description',\n    },\n]\n", "import type { ActionArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { cloudinaryPdfUpload } from '~/server/cloudinary.server'\nexport async function action({ request, params }: ActionArgs) {\n    const pdfUrl = await cloudinaryPdfUpload(request)\n\n    console.log('pdfUrl from action function', pdfUrl)\n\n    return json({ pdfUrl })\n}\n", "import cloudinary from 'cloudinary'\nimport type { UploadHandler } from '@remix-run/node'\nimport { unstable_parseMultipartFormData } from '@remix-run/node'\nimport {\n    unstable_composeUploadHandlers,\n    unstable_createMemoryUploadHandler,\n    writeAsyncIterableToWritable,\n} from '@remix-run/node'\n\ncloudinary.v2.config({\n    cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET,\n})\n\nexport async function uploadPdfToCloudinary(\n    data: AsyncIterable<Uint8Array>,\n    filename: string\n) {\n    const uploadPromise = new Promise(async (resolve, reject) => {\n        const uploadStream = cloudinary.v2.uploader.upload_stream(\n            {\n                cloud_name: 'dch-photo',\n                folder: 'alleles_pdf',\n                use_filename: true,\n                unique_filename: false,\n                public_id: filename,\n            },\n\n            (error, result) => {\n                if (error) {\n                    reject(error)\n                    return\n                }\n                resolve(result)\n            }\n        )\n        await writeAsyncIterableToWritable(data, uploadStream)\n    })\n    return uploadPromise\n}\n\nexport const pdfUploadHandler: UploadHandler = unstable_composeUploadHandlers(\n    async ({ name, data, filename }) => {\n        if (name !== 'pdfUrl') {\n            return undefined\n        }\n        // use the filename to create a new file in cloudinary but not the file extension\n\n        const updatedFileName =\n            filename?.replace(/\\.[^/.]+$/, '') || 'no_file_name'\n        console.log(\n            'updatedFileName from cloudinary server file',\n            updatedFileName\n        )\n        const uploadedPdf = (await uploadPdfToCloudinary(\n            data,\n            updatedFileName\n        )) as string\n        console.log('uploadedPdf from cloudinary server file', uploadedPdf)\n\n        // @ts-ignore\n        // this ignore came from the source i followed.  I think I kinda solved this by adding the type to the uploadImage function\n\n        return uploadedPdf.secure_url\n    },\n    unstable_createMemoryUploadHandler()\n)\n\nexport async function cloudinaryPdfUpload(request: Request) {\n    const formData = await unstable_parseMultipartFormData(\n        request,\n        pdfUploadHandler\n    )\n    console.log(\n        Object.fromEntries(formData),\n        'formData from cloudinary server file'\n    )\n\n    const pdfUrl = formData.get('pdfUrl' || '') as string\n    return pdfUrl\n}\n", "import type { LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Outlet, useLoaderData } from '@remix-run/react'\n\nimport z from 'zod'\nimport { zx } from 'zodix'\nimport { getPdfLibraryItem } from '~/server/pdf.server'\n\nexport async function loader({ request, params }: LoaderArgs) {\n    console.log('params', params)\n\n    const { pdfId } = zx.parseParams(params, {\n        pdfId: z.string().nonempty(),\n    })\n    const pdfItem = await getPdfLibraryItem(pdfId)\n    if (!pdfItem) {\n        throw new Error('pdfItem not found')\n    }\n    console.log(pdfItem.abstract as string, 'pdfItem.abstract')\n\n    const tst = JSON.stringify(pdfItem.abstract, null, 2)\n    console.log('tst', tst)\n\n    return json({ pdfItem })\n}\n\nexport default function KdbPdfItemRoute() {\n    const data = useLoaderData<typeof loader>()\n\n    return (\n        <div className=\"mt-15 mb-10 flex h-full w-full flex-row items-center justify-center\">\n            {\n                <div\n                    dangerouslySetInnerHTML={{ __html: data.pdfItem.abstract }}\n                />\n            }\n            <details>\n                <pre className=\"whitespace-break-spaces\">\n                    {JSON.stringify(data.pdfItem.abstract, null, 2)}\n                </pre>\n            </details>\n        </div>\n    )\n}\n", "import type { Prisma } from '@prisma/client'\nimport { prisma } from './prisma.server'\n//  extract PMCiD from last part of url\nexport async function getPMSearchTerm(url: string) {\n    console.log(url, 'url from getPMSearchTerm')\n\n    const urlParts = url.split('/')\n    const lastPart = urlParts[urlParts.length - 1]\n    const pmcId = lastPart.split('.')[0]\n    return pmcId\n}\n\nexport async function createPdfEntry(data: Prisma.PdfLibraryCreateInput) {\n    const alreadyExists = await prisma.pdfLibrary.findUnique({\n        where: {\n            internalPdfUrl: data.internalPdfUrl,\n        },\n    })\n    if (alreadyExists) {\n        return\n    }\n    const pdfEntry = await prisma.pdfLibrary.create({\n        data,\n    })\n    return pdfEntry\n}\n\nexport async function getPdfLibrary({\n    whereFilter,\n}: {\n    whereFilter: Prisma.PdfLibraryWhereInput\n}) {\n    const pdfLibrary = await prisma.pdfLibrary.findMany({\n        where: {\n            ...whereFilter,\n        },\n        orderBy: {\n            pubYear: 'desc',\n        },\n    })\n    return pdfLibrary\n}\n\nexport async function getPdfLibraryItem(id: string) {\n    const pdfLibraryItem = await prisma.pdfLibrary.findUnique({\n        where: {\n            id,\n        },\n    })\n    return pdfLibraryItem\n}\n// Convert internalPdfUrl to webp url for display in kdb\nexport function convertUrlToImg(url: string) {\n    // remove .pdf extension from url and replace with .webp\n    const baseUrl = url.slice(0, -4)\n\n    const urlWithWebp = baseUrl + '.webp'\n\n    return urlWithWebp\n}\n\n// Semantic Scholor API\n// https://api.semanticscholar.org/api-docs/graph#tag/Paper-Data/operation/get_graph_get_paper\n\n//\n// https://api.semanticscholar.org/graph/v1/paper/PMID:30191630?fields=abstract,authors,externalIds,fieldsOfStudy,influentialCitationCount,paperId,references,title,url,venue,year\nexport async function getSemanticScholorArticleDetails(pmid: string) {\n    // Determine which identifier to use based upon the extracted filename\n    const typeofId = pmid.startsWith('PMC') ? 'pmcid' : 'pmid'\n\n    const fields =\n        'abstract,authors,externalIds,fieldsOfStudy,influentialCitationCount,paperId,title,url,venue,year'\n\n    const builtUrl = `https://api.semanticscholar.org/graph/v1/paper/${typeofId}:${pmid}?fields=${fields}`\n    // console.log(builtUrl, 'builtUrl from getSemanticScholorArticleDetails')\n\n    const response = await fetch(builtUrl)\n    const data = (await response.json()) as Root\n\n    // reconstrut data to return to client to match pdfLibrary schema in prisma\n    const dataToReturn = {\n        semanticScholarId: data.paperId,\n        semanticScholarUrl: data.url,\n        title: data.title,\n        abstract: data.abstract || '',\n        authors: data.authors.map((author: Author) => author.name),\n        journal: data.venue,\n        pubYear: data.year,\n        pmid: data.externalIds.PubMed,\n        pmcId: data.externalIds.PubMedCentral || '',\n        doi: data.externalIds.DOI,\n    }\n    console.log(\n        dataToReturn,\n        'dataToReturn from getSemanticScholorArticleDetails'\n    )\n\n    return dataToReturn as DataToReturn\n}\n\n// Semantic Scholor API Types\nexport interface Root {\n    paperId: string\n    externalIds: ExternalIds\n    url: string\n    title: string\n    abstract: string\n    venue: string\n    year: number\n    influentialCitationCount: number\n    fieldsOfStudy: string[]\n    authors: Author[]\n}\n\nexport interface ExternalIds {\n    PubMedCentral: string\n    MAG: string\n    DOI: string\n    CorpusId: number\n    PubMed: string\n}\n\nexport interface Author {\n    authorId: string\n    name: string\n}\nexport interface DataToReturn {\n    semanticScholarId: string\n    semanticScholarUrl: string\n    title: string\n    abstract: string\n    authors: string[]\n    journal: string\n    pubYear: number\n    pmid: string\n    pmcId: string\n    doi: string\n}\n", "import type { ActionArgs, LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Form, Outlet, useLoaderData } from '@remix-run/react'\n\nimport { prisma } from '~/server/prisma.server'\nimport React from 'react'\nimport ClassificationComponent from '~/components/criteria-components/classification-component'\nimport CustomCriteriaCheckBox from '~/components/criteria-components/my-custom-radix-checkbox'\nimport CustomCriteriaSelect from '~/components/criteria-components/my-custom-select'\nimport Documentation from './calculator-documentation'\n\nexport type ListCriteriaUsed = {\n    evidenceType: string\n    label: string\n    weight: number\n}[]\n\nexport type ClassificatonScore = number\nexport async function loader({ request, params }: LoaderArgs) {\n    const criteria = await prisma.criterion.findMany()\n\n    const functionalData = criteria.filter((item) => {\n        return item.evidenceType === 'Functional Data'\n    })\n    const allOtherData = criteria.filter((item) => {\n        return item.evidenceType !== 'Functional Data'\n    })\n\n    //  I want to group the criteria by evidenceType so that updating the state array can be done in complex ways\n\n    const allDataByEvidenceType = allOtherData.reduce((acc, item) => {\n        const { evidenceType, label, id, definition, weight } = item\n        if (!acc[evidenceType]) {\n            acc[evidenceType] = []\n        }\n        acc[evidenceType].push({ label, id, evidenceType, definition, weight })\n        return acc\n    }, {} as Record<string, { label: string; id: string; evidenceType: string; definition: string; weight: number }[]>)\n\n    // extract the functional data from the byEvidenceType object\n\n    return json({ functionalData, allDataByEvidenceType, criteria })\n}\n\nexport async function action({ request, params }: ActionArgs) {\n    return json({\n        message: 'success',\n    })\n}\n\nexport default function CalculatorRoute() {\n    const { functionalData, criteria, allDataByEvidenceType } =\n        useLoaderData<typeof loader>()\n    const [listCriteriaUsed, setListCriteriaUsed] =\n        React.useState<ListCriteriaUsed>([])\n\n    const [classificationScore, setClassificationScore] =\n        React.useState<ClassificatonScore>(0)\n    const [variantClassification, setVariantClassification] =\n        React.useState<string>('')\n\n    const calculatorRef = React.useRef<HTMLDivElement>(null)\n    const handleListCriteriaUsed = (\n        value: string,\n        evidenceType: string,\n        weight: number\n    ) => {\n        const index = listCriteriaUsed.findIndex((item) => {\n            return item.evidenceType === evidenceType\n        })\n        if (index === -1) {\n            setListCriteriaUsed((prev) => {\n                return [...prev, { evidenceType, label: value, weight }]\n            })\n        } else {\n            setListCriteriaUsed((prev) => {\n                return prev.map((item) => {\n                    if (item.evidenceType === evidenceType) {\n                        return { evidenceType, label: value, weight }\n                    }\n                    return item\n                })\n            })\n        }\n    }\n    const handleCheckBoxListCriteriaUsed = (\n        value: string,\n        evidenceType: string,\n        weight: number\n    ) => {\n        const isPresent = listCriteriaUsed.some((item) => {\n            return item.label === value\n        })\n        if (isPresent) {\n            setListCriteriaUsed((prev) => {\n                return prev.filter((item) => {\n                    return item.label !== value\n                })\n            })\n        } else {\n            setListCriteriaUsed((prev) => {\n                return [...prev, { evidenceType, label: value, weight }]\n            })\n        }\n    }\n\n    return (\n        <div className=\"itesms-center justify-cesnter mb-10 mt-10 flex flex-col gap-2 md:flex-row\">\n            <Form\n                method=\"post\"\n                className=\"w-full rounded-md border-2 p-1 md:w-1/3 \"\n            >\n                <CustomCriteriaSelect\n                    handleListCriteriaUsed={handleListCriteriaUsed}\n                    data={allDataByEvidenceType}\n                    options={criteria}\n                />\n\n                <CustomCriteriaCheckBox\n                    handleCheckBoxListCriteriaUsed={\n                        handleCheckBoxListCriteriaUsed\n                    }\n                    data={functionalData}\n                />\n                <button type=\"submit\">Submit</button>\n            </Form>\n            <ClassificationComponent\n                data={listCriteriaUsed}\n                setClassificationScore={setClassificationScore}\n                setVariantClassification={setVariantClassification}\n            />\n            <Documentation />\n            <Outlet />\n        </div>\n    )\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react'\nimport { extractFirstTwoLetters } from '~/acmg-functions-utilities/acmg-criteria'\nimport { convertToNumbers } from '~/acmg-functions-utilities/acmg-criteria'\nimport type { ListCriteriaUsed } from '~/routes/calculator/route'\n\ntype Props = {\n    data: ListCriteriaUsed\n    setClassificationScore: React.Dispatch<React.SetStateAction<number>>\n    setVariantClassification: React.Dispatch<React.SetStateAction<string>>\n}\nexport default function ClassificationComponent({\n    data,\n    setClassificationScore,\n    setVariantClassification,\n}: Props) {\n    // calculate the subtotal of the weights of the criteria used\n    const [subtotals, setSubtotals] = React.useState<number>(0)\n    const subtotal = data.reduce((acc, item) => {\n        return acc + item.weight\n    }, 0)\n\n    const criteriaBreakdown = extractFirstTwoLetters(\n        data.map((item) => {\n            return item.label\n        })\n    )\n\n    const transformed = convertToNumbers(criteriaBreakdown)\n\n    React.useEffect(() => {\n        setClassificationScore(subtotal)\n        setSubtotals(subtotal)\n        setVariantClassification(transformed.classification)\n    }, [\n        subtotal,\n        setClassificationScore,\n        setVariantClassification,\n        transformed,\n    ])\n\n    return (\n        <div className=\"order-first flex w-full flex-col gap-2 rounded-md border-2 p-1 md:order-none md:w-1/3\">\n            <div className=\"flex items-center justify-between\">\n                <div className=\"text-white\">Classification Score</div>\n                <div className=\"text-white\">{subtotals}</div>\n            </div>\n\n            <div className=\"flex flex-col items-center justify-between\">\n                <div className=\"text-white\">Variant Classification</div>\n                <div className=\"text-white\">{transformed.classification}</div>\n            </div>\n        </div>\n    )\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n// consts.ts is my reference for this file\nimport type { Criterion as PrismaCriterion } from '@prisma/client'\nimport type { SerializeFrom } from '@remix-run/node'\n\nexport type Criterion = SerializeFrom<PrismaCriterion>\n\n// define an object that will help convert outdated acmg strength to updated acmg strength\n\nexport const specialCases: string[] = [\n    'PM2_Supporting',\n    'PVS1_Supporting',\n    'PVS1_Strong',\n    'PVS1_Moderate',\n]\n\n//  define a mapping from the special cases to their corresponding values\nexport const specialConversion: { [key: string]: string } = {\n    PM2_Supporting: 'P',\n    PVS1_Supporting: 'P',\n    PVS1_Strong: 'S',\n    PVS1_Moderate: 'M',\n}\n\n//   define a function that will extract the first two letters of the acmg strength\nexport const extractFirstTwoLetters = (arr: string[]) => {\n    const firstTwoLetters: string[] = []\n    return arr.map((item) => {\n        const firstLetter = item[0]\n\n        let firstTwoChars: string\n\n        const underScoreIndex = item.indexOf('_')\n        if (underScoreIndex > -1 && specialCases.includes(item)) {\n            firstTwoChars = item[0] + specialConversion[item]\n        } else {\n            firstTwoChars = item.substring(0, 2)\n        }\n        firstTwoLetters.push(firstTwoChars)\n        return firstTwoChars\n    })\n}\n// Define a mapping from strength letters to their corresponding values\nexport const strengthValues: { [key: string]: number } = {\n    V: 5,\n    A: 5,\n    S: 4,\n    M: 2,\n    P: 1,\n}\n\n//   Define a function to convert the output to numbers that correspond to the strength values\nexport function convertToNumbers(arr: string[]) {\n    const strengthValues: { [key: string]: number } = {\n        V: 5,\n        A: 5,\n        S: 4,\n        M: 2,\n        P: 1,\n    }\n\n    const transformedValues = arr.map((item) => {\n        const firstLetter = item[0]\n\n        const secondLetter = item[1]\n\n        const secondNumber = strengthValues[secondLetter]\n        const transformedNumber =\n            firstLetter === 'B' ? -secondNumber : secondNumber\n        return transformedNumber\n    })\n    const totalSum = transformedValues.reduce((sum, value) => sum + value, 0)\n\n    interface Classification {\n        totalSum: number\n        classification: string\n    }\n    const obj = {} as Classification\n\n    if (totalSum <= -7) {\n        obj.classification = 'Benign'\n    } else if (totalSum >= -6 && totalSum <= -1) {\n        obj.classification = 'Likely Benign'\n    } else if (totalSum >= 0 && totalSum <= 5) {\n        obj.classification = 'Variant of Uncertain Significance'\n    } else if (totalSum >= 6 && totalSum <= 10) {\n        obj.classification = 'Likely Pathogenic'\n    } else if (totalSum > 10) {\n        obj.classification = 'Pathogenic'\n    } else {\n        obj.classification = 'Error'\n    }\n\n    obj.totalSum = totalSum\n    return obj\n}\n", "import { ChevronUpIcon, ChevronDownIcon } from '@radix-ui/react-icons'\nimport React from 'react'\nimport type { Criterion } from '~/acmg-functions-utilities/acmg-criteria'\nimport * as Checkbox from '@radix-ui/react-checkbox'\nimport { CheckIcon } from '@radix-ui/react-icons'\nimport { Label } from '@radix-ui/react-label'\nexport default function CustomCriteriaCheckBox({\n    data,\n    handleCheckBoxListCriteriaUsed,\n}: {\n    data: Criterion[]\n    handleCheckBoxListCriteriaUsed: (\n        value: string,\n        evidenceType: string,\n        weight: number\n    ) => void\n}) {\n    const [open, setOpen] = React.useState(false)\n\n    return (\n        <div className=\"flex w-full flex-col gap-2 rounded-md border-2 p-1\">\n            <div className=\"flex justify-between gap-2\">\n                <div>{data[0].evidenceType}</div>\n                <button\n                    type=\"button\"\n                    onClick={() => {\n                        setOpen(!open)\n                    }}\n                >\n                    {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n                </button>\n            </div>\n            {open &&\n                data.map((item) => {\n                    return (\n                        <Checkbox.Root\n                            className=\"outlisne-none flex items-center  justify-center rounded-[4px] bg-slate-300 text-black shadow-[0_2px_10px] shadow-black hover:bg-blue-50 focus:shadow-[0_0_0_2px_black]\"\n                            id={item.label}\n                            key={item.label}\n                            name={item.evidenceType}\n                            onCheckedChange={(e) => {\n                                handleCheckBoxListCriteriaUsed(\n                                    item.label,\n                                    item.evidenceType,\n                                    item.weight\n                                )\n                            }}\n                            value={item.label}\n                        >\n                            <Checkbox.Indicator\n                                className=\"text-teal-400\"\n                                id={item.label}\n                            >\n                                <CheckIcon />\n                            </Checkbox.Indicator>\n                            <Label className=\"pl-[15px] text-[15px] leading-none text-black\">\n                                <p className=\"p-1\">{item.label}</p>\n                                <p className=\"text-xs\">{item.definition}</p>\n                            </Label>\n                        </Checkbox.Root>\n                    )\n                })}\n        </div>\n    )\n}\n", "import { Label } from '@radix-ui/react-label'\nimport React from 'react'\nimport * as Select from '@radix-ui/react-select'\nimport { ChevronDownIcon, ChevronUpIcon } from '@radix-ui/react-icons'\ntype Props = {\n    data: {\n        [key: string]: {\n            id: string\n            evidenceType: string\n            label: string\n            definition: string\n            weight: number\n        }[]\n    }\n\n    options: {\n        id: string\n        evidenceType: string\n        label: string\n        definition: string\n        weight: number\n    }[]\n    handleListCriteriaUsed: (\n        value: string,\n        evidenceType: string,\n        weight: number\n    ) => void\n}\n\nexport default function CustomCriteriaSelect({\n    data,\n    options,\n    handleListCriteriaUsed,\n}: Props) {\n    return (\n        <div className=\"flex w-full flex-col\">\n            {Object.entries(data).map((key, index) => {\n                const dataagain = options.filter(\n                    (item) => item.evidenceType === key[0]\n                )\n\n                return (\n                    <div key={key[0]}>\n                        <Label key={key[0]} className=\"text-white\">\n                            {key[0]}\n                        </Label>\n\n                        <div\n                            key={key[0]}\n                            className=\"w-fsull flex items-center justify-between rounded-md border p-2 text-white\"\n                        >\n                            <Select.Root\n                                name={key[0]}\n                                onValueChange={(value) => [\n                                    handleListCriteriaUsed(\n                                        value,\n                                        key[0],\n                                        dataagain\n                                            .filter(\n                                                (item: {\n                                                    id: string\n                                                    evidenceType: string\n                                                    label: string\n                                                    definition: string\n                                                    weight: number\n                                                }) =>\n                                                    item.label === value &&\n                                                    item.evidenceType === key[0]\n                                            )\n                                            .map(\n                                                (item: {\n                                                    id: string\n                                                    evidenceType: string\n                                                    label: string\n                                                    definition: string\n                                                    weight: number\n                                                }) => item.weight\n                                            )[0]\n                                    ),\n                                ]}\n                            >\n                                <Select.Trigger className=\"flex w-full items-center justify-between rounded-md  p-2 text-white\">\n                                    <Select.Value\n                                        placeholder=\"Select\"\n                                        className=\"text-black\"\n                                    ></Select.Value>\n                                    <ChevronDownIcon />\n                                </Select.Trigger>\n                                <Select.Content className=\"overflow-hidden rounded-md bg-white shadow-[0px_10px_38px_-10px_rgba(22,_23,_24,_0.35),0px_10px_20px_-15px_rgba(22,_23,_24,_0.2)]\">\n                                    <Select.ScrollUpButton className=\"text-violet11 flex h-[25px] cursor-default items-center justify-center bg-white\">\n                                        <ChevronUpIcon />\n                                    </Select.ScrollUpButton>\n                                    <Select.Viewport className=\"p-[5px]\">\n                                        {options\n                                            .filter(\n                                                (item) =>\n                                                    item.evidenceType === key[0]\n                                            )\n                                            .map((item) => {\n                                                return (\n                                                    <Select.Item\n                                                        key={item.id}\n                                                        value={item.label}\n                                                    >\n                                                        <p className=\"text-xs text-black\">\n                                                            {item.label}\n                                                        </p>\n                                                        <p className=\"text-xs text-black\">\n                                                            {item.definition}\n                                                        </p>\n                                                        <Select.ItemText>\n                                                            {item.label}\n                                                        </Select.ItemText>\n                                                    </Select.Item>\n                                                )\n                                            })}\n                                    </Select.Viewport>\n                                </Select.Content>\n                            </Select.Root>\n                        </div>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n", "export default function BayesTable() {\n    return (\n        <div className=\"flex w-1/2 flex-col gap-2\">\n            <table className=\"w-1/2 text-sm\">\n                <thead>\n                    <tr>\n                        <th className=\"text-left\">Category</th>\n\n                        <th className=\"text-left\">Total Score</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td className=\"text-left\">Pathogenic</td>\n                        <td className=\"text-left\"> &gt;10</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-left\"> Likely Pathogenic</td>\n                        <td className=\"text-left\"> 6-9</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-left\">Uncertain Significance</td>\n                        <td className=\"text-left\">0-5</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-left\">Likely Benign</td>\n                        <td className=\"text-left\"> -1-6</td>\n                    </tr>\n                    <tr>\n                        <td className=\"text-left\">Benign</td>\n                        <td className=\"text-left\">\n                            {' '}\n                            {`>=`}\n                            -7\n                        </td>\n                    </tr>\n                    <tr></tr>\n                </tbody>\n                <p className=\"text-xs text-gray-500\">\n                    *Note: This is a beta version of the ACMG classification\n                    tool. Please use with caution. Based on Tavtigian 2020\n                </p>\n            </table>\n        </div>\n    )\n}\n", "import BayesTable from '~/components/bayes-table'\n\nexport default function Documentation() {\n    return (\n        <div className=\"flex w-full flex-col gap-2 rounded-md border-2 md:w-1/3\">\n            <h1 className=\"text-2xl font-bold\">Documentation</h1>\n            <p className=\"text-gray-500\">\n                This is a work in progress. Please check back later.\n            </p>\n            <h2 className=\"text-xl font-bold\">Known Issues + Future Fixes</h2>\n            <p className=\"text-gray-500\">\n                Cannot unselect criteria. This is a known issue and will be\n                fixed in the future.\n            </p>\n            <p>\n                Form isn't hooked up to an action yet but was built on a route\n                that could recieve form data\n            </p>\n            <p>\n                Some UI/layout issues including large dropdown menus, lack of\n                actual checkboxes in the checkbox component\n            </p>\n            <h3 className=\"text-xl font-bold\">ACMG Calculator</h3>\n            <p className=\"text-gray-500\">\n                This implementation of the calculator is based on the 2015\n                ACMG/AMP guidelines and Tavtigian paper using Bayes scores\n            </p>\n            <p className=\"text-gray-500\">\n                I followed most of the rules but modified the scoring such that\n                a single very strong piece of evidence can not be enough to\n                classify a variant as pathogenic. That means I took the\n                recommended score of 8 and reduced it 2 5. This means that a\n                very strong piece of evidence requires at least 1 supporting\n                piece of evidence to be classified as pathogenic. I think this\n                is in line with the spirit of the guidelines.\n            </p>\n            <BayesTable />\n            <p className=\"text-gray-500\">Generating Criterion</p>\n\n            <h3 className=\"text-xl font-bold\">Criterion</h3>\n            <p className=\"text-gray-500\">\n                The ACMG/AMP guidelines are broken down into 28 individual\n                criteria. Each Criterion is assigned an evidenceType Group of\n                which there are 8\n            </p>\n            <h3 className=\"text-xl font-bold\">Variants</h3>\n            <p className=\"text-gray-500\">\n                Variants are the individual mutations that are being evaluated.\n                Each variant is assigned a classification based on the criteria.\n            </p>\n        </div>\n    )\n}\n", "import type { Criterion } from '@prisma/client'\nimport { ChevronDownIcon, ChevronUpIcon } from '@radix-ui/react-icons'\nimport type { LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Link, Outlet, useLoaderData, useMatches } from '@remix-run/react'\nimport React from 'react'\nimport { prisma } from '~/server/prisma.server'\n\nexport async function loader({ request }: LoaderArgs) {\n    const searchParam =\n        new URLSearchParams(request.url.split('?')[1]).get('searchParam') || ''\n    console.log(searchParam, 'searchParam')\n\n    const criterion = await prisma.criterion.findMany({\n        where: {\n            evidenceType: {\n                contains: searchParam,\n            },\n        },\n        orderBy: {\n            evidenceType: 'asc',\n        },\n    })\n\n    // reduce to evidenceType object with benign and pathogenic arrays\n\n    // generate a list of unique column names\n    const columnNames = criterion.reduce(\n        (acc: string[], cur: (typeof criterion)[0]) => {\n            if (!acc.includes(cur.evidenceType)) {\n                acc.push(cur.evidenceType)\n            }\n            return acc\n        },\n        [] as string[]\n    )\n\n    return json({ criterion, columnNames })\n}\n\nexport default function Criterio() {\n    const data = useLoaderData<typeof loader>()\n\n    return (\n        <div className=\"flex min-h-screen w-full flex-col p-1\">\n            <div className=\"flex flex-col gap-2\">\n                <Outlet />\n                <h1 className=\"text-2xl font-bold\">Documentation</h1>\n\n                <p className=\"text-gray-500\">\n                    This page is a work in progress. Please check back later for\n                    more information. Definitions are based on the ACMG/AMP 2015\n                    Guidelines.\n                </p>\n                <p className=\"text-gray-500\">\n                    Individual Criterion are grouped by Evidence Type. Click on\n                    the Evidence Type to see the Criterion.\n                </p>\n                <p className=\"text-gray-500\">\n                    To Edit a Criterion, click on the Criterion Name.\n                </p>\n\n                <div className=\"flex flex-col gap-2 p-1\">\n                    {data.columnNames.map((column) => {\n                        return (\n                            <div\n                                key={column}\n                                className=\"items-cener flex w-full flex-col gap-2\"\n                            >\n                                <div className=\"flex flex-row gap-2\">\n                                    <CriteriaFetcher searchParam={column} />\n                                </div>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction CriteriaFetcher({ searchParam }: { searchParam: string }) {\n    const matches = useMatches()\n\n    const criterion = matches.find((match) => match.pathname === '/criterion')\n        ?.data.criterion as Criterion[]\n\n    const byEvidenceType = criterion?.filter((criterion) => {\n        return criterion.evidenceType === searchParam\n    }) as Criterion[]\n\n    const [open, setOpen] = React.useState(false)\n    return (\n        <div\n            className={`flex w-full flex-col gap-2 p-1 ${\n                open ? 'rounded-md border border-gray-500' : 'rounded-md border'\n            }`}\n        >\n            <div className=\"flex flex-row items-center gap-2\">\n                <button\n                    className=\"flex flex-row items-center gap-2\"\n                    onClick={() => setOpen(!open)}\n                >\n                    <h3 className=\"text-xl font-bold\">{searchParam}</h3>\n\n                    {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n                </button>\n            </div>\n\n            {open ? (\n                <div className=\"flex flex-col gap-2 p-1\">\n                    {byEvidenceType?.map((criterion) => {\n                        return (\n                            <div\n                                key={criterion.id}\n                                className=\"flex flex-col gap-2\"\n                            >\n                                <Link to={`/criterion/${criterion.id}`}>\n                                    <h3 className=\"text-xl font-bold\">\n                                        {criterion.label}\n                                    </h3>\n                                </Link>\n                                <div className=\"flex flex-row gap-2\">\n                                    <FormatDefinition\n                                        definition={criterion.definition}\n                                    />\n                                </div>\n\n                                {criterion.example ? (\n                                    <div className=\"flex flex-row gap-2\">\n                                        <p className=\"text-gray-500\">\n                                            {' '}\n                                            Example: {criterion.example}\n                                        </p>\n                                    </div>\n                                ) : null}\n\n                                {criterion.caveat ? (\n                                    <div className=\"flex flex-row gap-2\">\n                                        <p className=\"text-gray-500\">\n                                            {' '}\n                                            Caveat: {criterion.caveat}\n                                        </p>\n                                    </div>\n                                ) : null}\n\n                                {criterion.criterionBaseWeight ? (\n                                    <div className=\"flex flex-row gap-2\">\n                                        <p className=\"text-gray-500\">\n                                            Criterion Base Weight:{' '}\n                                            {criterion.criterionBaseWeight}\n                                        </p>\n                                    </div>\n                                ) : null}\n                                {criterion.weight ? (\n                                    <div className=\"flex flex-row gap-2\">\n                                        <p className=\"text-gray-500\">\n                                            Weight: {criterion.weight}\n                                        </p>\n                                    </div>\n                                ) : null}\n                            </div>\n                        )\n                    })}\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nfunction FormatDefinition({ definition }: { definition: string }) {\n    function sortMe(definition: string) {\n        const toString = definition.toString()\n\n        const formattedDef = toString\n            .replace(`P:`, 'Supporting: ')\n            .replace(`VS:`, 'Strong: ')\n            .replace(`M:`, 'Moderate: ')\n            .replace(`S:`, 'Strong: ')\n            .replace(`SA: `, 'Stand alone:')\n\n        return formattedDef\n    }\n    return (\n        <div className=\"flex flex-col gap-2\">\n            <p className=\"text-gray-500\">Definition: {sortMe(definition)}</p>\n        </div>\n    )\n}\n", "import type { ActionArgs } from '@remix-run/node'\nimport { json, redirect } from '@remix-run/node'\nimport { Form, useActionData } from '@remix-run/react'\nimport React from 'react'\nimport PdfUploader from '~/components/shared/cloudinary-pdf-uploader'\nimport {\n    createPdfEntry,\n    getPMSearchTerm,\n    getSemanticScholorArticleDetails,\n} from '~/server/pdf.server'\n\nexport async function action({ request, params }: ActionArgs) {\n    const formData = await request.formData()\n\n    const pdfUrl = formData.get('pdfUrl') as string\n    const searchPmid = (await getPMSearchTerm(pdfUrl)) as string\n\n    const data = await getSemanticScholorArticleDetails(searchPmid)\n    console.log('data, from semantic scholor', data)\n\n    const {\n        semanticScholarId,\n        semanticScholarUrl,\n        title,\n        abstract,\n        authors,\n        journal,\n        pubYear,\n        pmid,\n        pmcId,\n        doi,\n    } = data\n\n    const dbData = {\n        semanticScholarId,\n        semanticScholarUrl,\n        title,\n        abstract,\n        authors,\n        journal,\n        pubYear: Number(pubYear),\n        pmid,\n        pmcid: pmcId,\n        doi,\n        internalPdfUrl: pdfUrl,\n    }\n    const pdfEntry = await createPdfEntry(dbData)\n\n    if (!pdfEntry) {\n        return json({ error: 'There was an error uploading the pdf' })\n    }\n\n    return redirect(`/kdb/${pdfEntry.id}`)\n}\n\nexport default function Wip() {\n    const actionData = useActionData<{\n        pdfEntry: {\n            error?: string\n        }\n    }>()\n\n    const [url, setUrl] = React.useState<string>('')\n\n    return (\n        <div className=\"mb-20 flex flex-col items-center justify-center\">\n            <PdfUploader setUrl={setUrl} />\n\n            <div>\n                <Form\n                    className=\"flex w-full flex-col items-center justify-center\"\n                    method=\"POST\"\n                >\n                    <input\n                        className=\"w-full text-black\"\n                        type=\"text\"\n                        name=\"pdfUrl\"\n                        defaultValue={url}\n                        onChange={(e) => setUrl(e.target.value)}\n                    />\n                    {actionData?.pdfEntry?.error && (\n                        <div className=\"text-red-500\">\n                            {actionData.pdfEntry.error}\n                        </div>\n                    )}\n                    <button type=\"submit\">Submit</button>\n                </Form>\n            </div>\n        </div>\n    )\n}\n", "import { useFetcher } from '@remix-run/react'\nimport React from 'react'\n\ntype PdfUploaderProps = {\n    setUrl: React.Dispatch<React.SetStateAction<string>>\n}\nexport default function PdfUploader({ setUrl }: PdfUploaderProps) {\n    const [selectedFile, setSelectedFile] = React.useState<Boolean>(false)\n\n    const pdfFetcher = useFetcher()\n\n    const handleDisabledState = () => {\n        if (!selectedFile) {\n            setSelectedFile(true)\n            setUrl(pdfFetcher.data?.pdfUrl)\n        }\n\n        return false\n    }\n\n    const handlePdfUpload = async () => {\n        pdfFetcher.submit({\n            pdfUrl: 'pdfUrl',\n            key: 'pdfUrl',\n            action: `/actions/pdf`,\n        })\n        pdfFetcher.data?.pdfUrl && setUrl(pdfFetcher.data.pdfUrl)\n        setSelectedFile(true)\n    }\n\n    return (\n        <>\n            <pdfFetcher.Form\n                method=\"post\"\n                encType=\"multipart/form-data\"\n                action=\"/actions/pdf\"\n                onChange={handlePdfUpload}\n                className=\"flex flex-col items-center justify-center\"\n            >\n                <input\n                    className=\"border-input ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex h-10 w-full rounded-md border bg-transparent px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    type=\"file\"\n                    name=\"pdfUrl\"\n                    accept=\"application/pdf\"\n                />\n                <button disabled={!selectedFile} type=\"submit\">\n                    Upload\n                </button>\n            </pdfFetcher.Form>\n            {pdfFetcher.data?.pdfUrl && (\n                <div>\n                    <input\n                        type=\"text\"\n                        name=\"pdfUrl\"\n                        onChange={void setUrl(pdfFetcher.data?.pdfUrl)}\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n", "import type { LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { useLoaderData } from '@remix-run/react'\nimport { prisma } from '~/server/prisma.server'\nexport async function loader({ request, params }: LoaderArgs) {\n    const clinvarData = await prisma.clinvar.findMany({\n        take: 50,\n    })\n    console.log(clinvarData.slice(0, 10))\n\n    if (!clinvarData) {\n        throw new Error('No clinvar data found')\n    }\n    return json({ clinvarData })\n}\n\nexport default function ClinVarIndexRoute() {\n    const data = useLoaderData<typeof loader>()\n    return (\n        <div className=\"\">\n            <details className=\"mb-4\">\n                <pre className=\"text-sm\">\n                    {JSON.stringify(data.clinvarData.slice(0, 10), null, 2)}\n                </pre>\n            </details>\n        </div>\n    )\n}\n", "import { SignIn } from '@clerk/remix'\n\nexport default function SignInPage() {\n    return (\n        <div>\n            <h1>Sign In route</h1>\n            <SignIn routing={'path'} path={'/sign-in'} />\n        </div>\n    )\n}\n", "import { SignUp } from '@clerk/remix'\n\nexport default function SignUpPage() {\n    return (\n        <div>\n            <h1>Sign Up route</h1>\n            <SignUp routing={'path'} path={'/sign-up'} />\n        </div>\n    )\n}\n", "import DevelopmentWelcome from '~/components/dev-components/welcome'\n\nexport default function Index() {\n    return (\n        <div className=\"\">\n            <DevelopmentWelcome />\n        </div>\n    )\n}\n", "import { Link } from '@remix-run/react'\n\nexport default function DevelopmentWelcome() {\n    return (\n        <div className=\"prose prose-invert mx-auto flex h-full w-full flex-col items-center gap-2  rounded-md border-2 p-2 xl:prose-xl\">\n            Welcome to my in development site. This site is a work in progress.\n            I am working towards a comprehensive ACMG/AMP variant classification\n            tool.\n            <h2>Current Features</h2>\n            <ul>\n                <li>\n                    <Link to=\"/calculator\">\n                        ACMG Classification Counter Calculator\n                    </Link>\n                </li>\n                <li>Variant Classification Score</li>\n            </ul>\n            <h2>Future Features</h2>\n            <ul>\n                <li>Citations</li>\n                <li>Documentation </li>\n                <li>PDF upload and retreival page</li>\n            </ul>\n        </div>\n    )\n}\n", "import type { LoaderArgs } from '@remix-run/node'\nimport { json, redirect } from '@remix-run/node'\nimport { getFilteredGenes } from './genes.server'\nimport GeneSearch from '~/components/gene-search'\nimport { useLoaderData } from '@remix-run/react'\nexport async function loader({ request, params }: LoaderArgs) {\n    const url = new URL(request.url)\n    const filter = url.searchParams.get('filter')\n    console.log(filter, 'filter')\n\n    const gene = await getFilteredGenes(filter ? filter : '')\n\n    return json({ gene })\n}\n\nexport default function GenesRoute() {\n    const data = useLoaderData<typeof loader>()\n    console.log(data)\n\n    return (\n        <div>\n            <h1>Genes</h1>\n            <GeneSearch />\n        </div>\n    )\n}\n", "import { useNavigate, useSearchParams } from '@remix-run/react'\n\nexport default function GeneSearch() {\n    const navigate = useNavigate()\n    let [searchParams] = useSearchParams()\n    return (\n        <form className=\"text-black\">\n            <input type=\"text\" placeholder=\"Search for a gene\" name=\"filter\" />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}\n", "export default function BetaRoute() {\n    return <div className=\"\"></div>\n}\n", "import type { Prisma } from '@prisma/client'\nimport type { LoaderArgs } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { NavLink, useLoaderData } from '@remix-run/react'\nimport KdbWelcome from '~/components/kdb-components/kdb-welcome'\nimport PdfList from '~/components/kdb-components/pdf-library-list'\nimport PdfSearch from '~/components/kdb-components/pdf-search'\nimport { prisma } from '~/server/prisma.server'\nexport function shouldRevalidate() {\n    return true\n}\n\nexport async function loader({ request, params }: LoaderArgs) {\n    const url = new URL(request.url)\n    const filter = url.searchParams.get('filter')\n    console.log('filter', filter)\n\n    let textFilter: Prisma.PdfLibraryWhereInput = {}\n    if (filter) {\n        textFilter = {\n            OR: [\n                {\n                    title: {\n                        contains: filter,\n                        mode: 'insensitive',\n                    },\n                },\n                {\n                    abstract: {\n                        contains: filter,\n                        mode: 'insensitive',\n                    },\n                },\n                {\n                    pmcid: {\n                        contains: filter,\n                        mode: 'insensitive',\n                    },\n                },\n                {\n                    pmid: {\n                        contains: filter,\n                        mode: 'insensitive',\n                    },\n                },\n                {\n                    authors: {\n                        has: filter,\n                    },\n                },\n            ],\n        }\n    }\n\n    const pdfLibrary = await prisma.pdfLibrary.findMany({\n        where: {\n            ...textFilter,\n        },\n        include: {\n            pdfNotes: {\n                take: 1,\n                orderBy: {\n                    createdAt: 'desc',\n                },\n            },\n        },\n        \n    }) \n\n    // const pdfLibrary = await getPdfLibrary( textFilter);\n\n    if (!pdfLibrary) {\n        throw new Error('pdfLibrary not found')\n    }\n\n    return json({ pdfLibrary })\n}\n\nexport default function KdbIndex() {\n    const data = useLoaderData<typeof loader>()\n    return (\n        <div className=\"mt-15 mb-10 flex flex-col  justify-center overflow-auto md:flex-row \">\n            <div className=\"itesms-center flex w-full flex-col md:h-full md:w-1/5\">\n                <PdfSearch searchSourceName=\"kdb\" />\n                <NavLink to=\"/kdb/new\">add new pdf</NavLink>\n            </div>\n\n            <div className=\"flex w-full flex-col items-center   gap-2  md:h-full md:w-4/5\">\n                <KdbWelcome />\n             {\n                data.pdfLibrary.map((pdf) => {\n                    return <PdfList key={pdf.id} pdfLibrary={pdf} />\n                }\n                )}\n                \n\n\n            </div>\n        </div>\n    )\n}\n", "import PdfSearch from './pdf-search'\n\nexport default function KdbWelcome() {\n    return (\n        <div className=\"flex w-full flex-col items-center gap-2 border-2 border-purple-500 p-2\">\n            <p className=\"text-2xl\">Welcome to the KDB</p>\n            <p className=\"text-2xl\">\n                Please select an option from the menu below\n            </p>\n        </div>\n    )\n}\n", "import { redirect } from '@remix-run/node'\nimport { Form, useNavigate, useSearchParams } from '@remix-run/react'\nimport React from 'react'\nimport { set } from 'zod'\nexport function shouldRevalidate() {\n    return true\n}\ntype SearchTarget = 'kdb' | 'variants' | 'criterion' | 'genes'\n\nconst placeholderText = {\n    kdb: 'Search the KDB for PMID, PMCID, Author, Title\"',\n    variants: 'Search Variants',\n    criterion: 'Search Criterion',\n    genes: 'Search Genes',\n}\n\ntype SearchProps = {\n    searchSourceName: string\n}\n\nexport default function PdfSearch({ searchSourceName }: SearchProps) {\n    const placeholder = placeholderText[searchSourceName as SearchTarget]\n    console.log('placeholder', placeholder)\n\n    const [searchParams, setSearchParams] = useSearchParams()\n    const formRef = React.useRef<HTMLFormElement>(null)\n    const navigate = useNavigate()\n    function handleClear(e: React.MouseEvent<HTMLButtonElement>) {\n        e.preventDefault()\n\n        searchParams.delete('filter')\n\n        formRef.current?.reset()\n        // navigate(-1)\n        navigate(`/kdb/`, {\n            replace: true,\n        })\n        return redirect('/kdb')\n    }\n    function handleClick(e: React.MouseEvent<HTMLButtonElement>) {\n        const { value } = e.currentTarget\n        console.log('value', value)\n\n        if (value === null) {\n            setSearchParams('')\n            navigate(`/kdb/`, {\n                replace: true,\n            })\n        } else {\n            setSearchParams(value)\n        }\n        navigate(`/kdb/?filter=${value}`, {\n            replace: true,\n        })\n        return redirect('/kdb')\n    }\n\n    return (\n        <div className=\"flex flex-col  items-center gap-2 border-2 border-purple-500 p-1 md:p-2\">\n            <Form\n                ref={formRef}\n                className=\"flex w-full flex-col items-center gap-2\"\n                method=\"GET\"\n            >\n                <input\n                    className=\"border-input ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex h-10 w-full rounded-md border bg-transparent px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-white placeholder:text-[8px] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n                    type=\"text\"\n                    name=\"filter\"\n                    placeholder={placeholder}\n                    // defaultValue={searchParams.get('filter' ) || ''}\n                />\n                <div className=\"flex gap-2\">\n                    <button\n                        className=\"rounded-xl bg-blue-300 px-3 py-2 font-semibold text-blue-600 transition duration-300 ease-in-out hover:-translate-y-1 hover:bg-yellow-400\"\n                        type=\"submit\"\n                        onClick={(e) => handleClick(e)}\n                    >\n                        Search\n                    </button>\n\n                    <button\n                        className=\"w-1/2 rounded-xl bg-red-300 px-3 py-2 font-semibold text-blue-600 transition duration-300 ease-in-out hover:-translate-y-1 hover:bg-yellow-400\"\n                        onClick={(e) => handleClear(e)}\n                        type=\"submit\"\n                    >\n                        Clear\n                    </button>\n                </div>\n            </Form>\n        </div>\n    )\n}\n", "export {}\n", "export default {'entry':{'module':'/build/entry.client-M4P5JIFM.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-OENXDVSZ.js','/build/_shared/chunk-FYE7RXT4.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-VA6TLHT6.js','imports':['/build/_shared/chunk-TNP56VJC.js','/build/_shared/chunk-JHVWG4IG.js','/build/_shared/chunk-W4JOHJUN.js','/build/_shared/chunk-2KKE22B5.js','/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-DCILL3CY.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/actions.pdf':{'id':'routes/actions.pdf','parentId':'root','path':'actions/pdf','index':undefined,'caseSensitive':undefined,'module':'/build/routes/actions.pdf-K73GFXMQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/beta':{'id':'routes/beta','parentId':'root','path':'beta','index':undefined,'caseSensitive':undefined,'module':'/build/routes/beta-YI6HWIZ4.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/calculator':{'id':'routes/calculator','parentId':'root','path':'calculator','index':undefined,'caseSensitive':undefined,'module':'/build/routes/calculator-NH7H44TS.js','imports':['/build/_shared/chunk-VLOORRQ2.js','/build/_shared/chunk-4T5KGPBP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/clinvar':{'id':'routes/clinvar','parentId':'root','path':'clinvar','index':undefined,'caseSensitive':undefined,'module':'/build/routes/clinvar-O5UVHCSM.js','imports':['/build/_shared/chunk-4T5KGPBP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion':{'id':'routes/criterion','parentId':'root','path':'criterion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion-DMCH22JE.js','imports':['/build/_shared/chunk-4T5KGPBP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion.help':{'id':'routes/criterion.help','parentId':'routes/criterion','path':'help','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion.help-D6KH52FF.js','imports':['/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion_.$splat':{'id':'routes/criterion_.$splat','parentId':'root','path':'criterion/:splat','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion_.$splat-7ZKICJR6.js','imports':['/build/_shared/chunk-JNOKBHGH.js','/build/_shared/chunk-VLOORRQ2.js','/build/_shared/chunk-4T5KGPBP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/genes':{'id':'routes/genes','parentId':'root','path':'genes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/genes-K2VSHV7R.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/genes.server':{'id':'routes/genes.server','parentId':'routes/genes','path':'server','index':undefined,'caseSensitive':undefined,'module':'/build/routes/genes.server-HPSUZRDK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb':{'id':'routes/kdb','parentId':'root','path':'kdb','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb-SWSJSOIM.js','imports':['/build/_shared/chunk-NRT7HMQY.js','/build/_shared/chunk-4T5KGPBP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb.$pdfId.edit-abstract':{'id':'routes/kdb.$pdfId.edit-abstract','parentId':'routes/kdb','path':':pdfId/edit-abstract','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb.$pdfId.edit-abstract-VIGQUX6B.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb_.$pdfId':{'id':'routes/kdb_.$pdfId','parentId':'root','path':'kdb/:pdfId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb_.$pdfId-LLNRUSAD.js','imports':['/build/_shared/chunk-P745DJB6.js','/build/_shared/chunk-SX3R7FK7.js','/build/_shared/chunk-JNOKBHGH.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb_.$pdfId_.annotate':{'id':'routes/kdb_.$pdfId_.annotate','parentId':'root','path':'kdb/:pdfId/annotate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb_.$pdfId_.annotate-NWO35NVN.js','imports':['/build/_shared/chunk-NRT7HMQY.js','/build/_shared/chunk-SX3R7FK7.js','/build/_shared/chunk-JNOKBHGH.js','/build/_shared/chunk-VLOORRQ2.js','/build/_shared/chunk-4T5KGPBP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb_.new':{'id':'routes/kdb_.new','parentId':'root','path':'kdb/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb_.new-53MXJL4C.js','imports':['/build/_shared/chunk-P745DJB6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-QWZVHSWK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up':{'id':'routes/sign-up','parentId':'root','path':'sign-up','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up-CTGCT3TJ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants':{'id':'routes/variants','parentId':'root','path':'variants','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants-XD5MILNS.js','imports':['/build/_shared/chunk-K7T7BSZM.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants.$id':{'id':'routes/variants.$id','parentId':'routes/variants','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants.$id-CHJADSQ2.js','imports':['/build/_shared/chunk-TNP56VJC.js','/build/_shared/chunk-2KKE22B5.js','/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants_.$id.annotate':{'id':'routes/variants_.$id.annotate','parentId':'root','path':'variants/:id/annotate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants_.$id.annotate-ZP5XECGE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/wip':{'id':'routes/wip','parentId':'root','path':'wip','index':undefined,'caseSensitive':undefined,'module':'/build/routes/wip-4BDBACDH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'31bdcb0e','hmr':{'runtime':'/build/_shared/chunk-FYE7RXT4.js','timestamp':1687318657646},'url':'/build/manifest-31BDCB0E.js'};", "\nimport * as entryServer from \"/Users/voidnation/Documents/projects/remix-2023/genes_23/node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/kdb.$pdfId.edit-abstract.tsx\";\nimport * as route2 from \"./routes/variants_.$id.annotate.tsx\";\nimport * as route3 from \"./routes/kdb_.$pdfId_.annotate.tsx\";\nimport * as route4 from \"./routes/criterion_.$splat.tsx\";\nimport * as route5 from \"./routes/criterion.help.tsx\";\nimport * as route6 from \"./routes/genes.server.ts\";\nimport * as route7 from \"./routes/variants.$id.tsx\";\nimport * as route8 from \"./routes/actions.pdf.ts\";\nimport * as route9 from \"./routes/kdb_.$pdfId.tsx\";\nimport * as route10 from \"./routes/calculator/route.tsx\";\nimport * as route11 from \"./routes/criterion.tsx\";\nimport * as route12 from \"./routes/kdb_.new.tsx\";\nimport * as route13 from \"./routes/variants.tsx\";\nimport * as route14 from \"./routes/clinvar.tsx\";\nimport * as route15 from \"./routes/sign-in.tsx\";\nimport * as route16 from \"./routes/sign-up.tsx\";\nimport * as route17 from \"./routes/_index.tsx\";\nimport * as route18 from \"./routes/genes.tsx\";\nimport * as route19 from \"./routes/beta.tsx\";\nimport * as route20 from \"./routes/kdb.tsx\";\nimport * as route21 from \"./routes/wip.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":false,\"v2_headers\":false,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"port\":3001}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/kdb.$pdfId.edit-abstract\": {\n      id: \"routes/kdb.$pdfId.edit-abstract\",\n      parentId: \"routes/kdb\",\n      path: \":pdfId/edit-abstract\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/variants_.$id.annotate\": {\n      id: \"routes/variants_.$id.annotate\",\n      parentId: \"root\",\n      path: \"variants/:id/annotate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/kdb_.$pdfId_.annotate\": {\n      id: \"routes/kdb_.$pdfId_.annotate\",\n      parentId: \"root\",\n      path: \"kdb/:pdfId/annotate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/criterion_.$splat\": {\n      id: \"routes/criterion_.$splat\",\n      parentId: \"root\",\n      path: \"criterion/:splat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/criterion.help\": {\n      id: \"routes/criterion.help\",\n      parentId: \"routes/criterion\",\n      path: \"help\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/genes.server\": {\n      id: \"routes/genes.server\",\n      parentId: \"routes/genes\",\n      path: \"server\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/variants.$id\": {\n      id: \"routes/variants.$id\",\n      parentId: \"routes/variants\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/actions.pdf\": {\n      id: \"routes/actions.pdf\",\n      parentId: \"root\",\n      path: \"actions/pdf\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/kdb_.$pdfId\": {\n      id: \"routes/kdb_.$pdfId\",\n      parentId: \"root\",\n      path: \"kdb/:pdfId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/calculator\": {\n      id: \"routes/calculator\",\n      parentId: \"root\",\n      path: \"calculator\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/criterion\": {\n      id: \"routes/criterion\",\n      parentId: \"root\",\n      path: \"criterion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/kdb_.new\": {\n      id: \"routes/kdb_.new\",\n      parentId: \"root\",\n      path: \"kdb/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/variants\": {\n      id: \"routes/variants\",\n      parentId: \"root\",\n      path: \"variants\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/clinvar\": {\n      id: \"routes/clinvar\",\n      parentId: \"root\",\n      path: \"clinvar\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/sign-up\": {\n      id: \"routes/sign-up\",\n      parentId: \"root\",\n      path: \"sign-up\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/genes\": {\n      id: \"routes/genes\",\n      parentId: \"root\",\n      path: \"genes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/beta\": {\n      id: \"routes/beta\",\n      parentId: \"root\",\n      path: \"beta\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    },\n  \"routes/kdb\": {\n      id: \"routes/kdb\",\n      parentId: \"root\",\n      path: \"kdb\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route20\n    },\n  \"routes/wip\": {\n      id: \"routes/wip\",\n      parentId: \"root\",\n      path: \"wip\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route21\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_remix", "import_jsx_dev_runtime", "import_node", "loader", "import_node", "loader", "action", "loader", "import_node", "import_react", "import_react_icons", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "open", "import_react_icons", "import_react", "import_jsx_dev_runtime", "React", "StarterKit", "Heading", "Superscript", "Subscript", "Highlight", "Link", "Code", "TextStyle", "BulletList", "OrderedList", "Image", "Typography", "import_react", "schema", "import_jsx_dev_runtime", "loader", "action", "action", "loader", "import_remix", "Label", "import_node", "import_react", "import_zod", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "loader", "schema", "action", "import_jsx_dev_runtime", "VariantRoute", "loader", "import_node", "import_react", "loader", "import_node", "import_react", "import_react_icons", "import_jsx_dev_runtime", "loader", "React", "flip", "import_jsx_dev_runtime", "loader", "variant", "VariantRoute", "action", "import_node", "import_node", "cloudinary", "action", "loader", "import_node", "import_react", "import_zod", "import_zodix", "import_jsx_dev_runtime", "loader", "z", "action", "loader", "import_node", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "React", "import_react_icons", "import_react", "import_react_label", "import_jsx_dev_runtime", "React", "import_react_label", "import_react_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "React", "loader", "import_react_icons", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "criterion", "React", "definition", "action", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "React", "_a", "import_jsx_dev_runtime", "action", "React", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "import_remix", "import_jsx_dev_runtime", "import_remix", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_node", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "loader"]
}
