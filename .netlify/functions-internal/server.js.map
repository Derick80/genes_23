{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx", "../../app/root.tsx", "../../app/components/layout.tsx", "../../app/routes/variants_.$id.annotate.tsx", "../../app/components/button.tsx", "../../app/components/bayes-table.tsx", "../../app/constants/consts.ts", "../../app/server/functions.server.ts", "../../app/routes/criteria-dropdown.tsx", "../../app/routes/criterion_.$splat.tsx", "../../app/functions.ts", "../../app/server/prisma.server.ts", "../../app/routes/criterion.help.tsx", "../../app/routes/variants.$id.tsx", "../../app/routes/variants.tsx", "../../app/constants/variants.ts", "../../app/routes/calculator/route.tsx", "../../app/routes/calculator/info.tsx", "../../app/routes/criterion.tsx", "../../app/routes/sign-in.tsx", "../../app/routes/sign-up.tsx", "../../app/routes/beta.tsx", "../../app/routes/wip.tsx", "../../app/components/accord-drop.tsx", "../../app/constants/acmg-criteria.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\n\nimport type { EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          console.error(error);\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          console.error(error);\n          responseStatusCode = 500;\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import {\n  LinksFunction,\n  LoaderArgs,\n  V2_MetaFunction,\n  json } from\n\"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  isRouteErrorResponse,\n  useLoaderData,\n  useRouteError } from\n\"@remix-run/react\";\nimport stylesheet from \"~/tailwind.css\";\nimport Layout from \"./components/layout\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp, ClerkCatchBoundary } from \"@clerk/remix\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n  { title: \"Variant Classifications\" },\n  {\n    name: \"description\",\n    content: \"ACMG Variant Classifications Powered by Remix-run\"\n  },\n  { name: \"viewport\", content: \"width=device-width, initial-scale=1\" }];\n\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nexport async function loader(args: LoaderArgs) {\n  return rootAuthLoader(args, ({ request }) => {\n    const { userId } = request.auth;\n    if (!userId) return json(({} as any), { status: 401 });\n    return {\n      loadUser: true\n    };\n  });\n}\n\nfunction App() {\n  const data = useLoaderData<typeof loader>();\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </Layout>\n      </body>\n    </html>);\n\n}\n// export function ErrorBoundary() {\n//   const error = useRouteError();\n//   if (isRouteErrorResponse(error)) {\n//     return (\n//       <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n//         <h1 className=\"text-2xl font-bold text-red-500\">Uh Oh!...</h1>\n//         <h1 className=\"text-2xl font-bold text-red-500\">\n//           Status:{error.status}\n//         </h1>\n//         <p className=\"text-xl\">{error.data.message}</p>\n//       </div>\n//     );\n//   }\n//   let errorMessage = \"unknown error\";\n//   if (error instanceof Error) {\n//     errorMessage = error.message;\n//   } else if (typeof error === \"string\") {\n//     errorMessage = error;\n//   }\n//   return (\n//     <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n//       <h1 className=\"text-2xl font-bold\">uh Oh..</h1>\n//       <p className=\"text-xl\">something went wrong</p>\n//       <pre>{errorMessage}</pre>\n//     </div>\n//   );\n// }\n\nexport default ClerkApp(App);\n\nexport const CatchBoundary = ClerkCatchBoundary();", "import { UserButton, UserProfile, useAuth } from \"@clerk/remix\";\nimport { GitHubLogoIcon } from \"@radix-ui/react-icons\";\nimport { Link } from \"@remix-run/react\";\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  const { userId } = useAuth();\n  return (\n    <div className=\"flex min-h-screen flex-col bg-gray-900 p-1 text-gray-100\">\n      <header className=\"fixed left-0 right-0 top-0 z-50 flex flex-wrap items-center justify-between gap-2  bg-gray-800 p-1 text-gray-100 shadow-md \">\n        <p className=\"text-2xl font-bold\">ACMG Variant Classifications</p>\n        <ul className=\"flex gap-1\">\n          <li className=\"font-semibold\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"font-semibold\">\n            {\" \"}\n            <Link to=\"/criterion\">Criterion</Link>\n          </li>\n          <li className=\"font-semibold\">\n            {\" \"}\n            <Link to=\"variants\">Variants</Link>\n          </li>\n          <li className=\"font-semibold\">\n            <Link to=\"/calculator\">Calculator</Link>\n          </li>\n          <li className=\"font-semibold\">\n            <Link to=\"/beta\">Beta</Link>\n          </li>\n          <li className=\"font-semibold\">\n            <Link to='wip'>WIP</Link>\n          </li>\n        </ul>\n        {userId ? (\n          <>\n            <UserButton /> <Link to=\"/sign-out\">Sign Out</Link>\n          </>\n        ) : (\n          <div className=\"text-semibold flex gap-1\">\n            <Link to=\"/sign-in\">Sign In</Link>\n            <Link to=\"/sign-up\">Sign Up</Link>\n          </div>\n        )}\n      </header>\n      <main className=\"relative mt-20 flex-1\">{children}</main>\n      <footer className=\"fixed bottom-0 left-0 right-0 z-50 flex h-10 items-center  justify-center bg-gray-800 text-gray-100 shadow-md\">\n        <ul className=\"flex gap-1\">\n          <li className=\"font-semibold\">\n            <Link to=\"/https://github.com/Derick80\">\n              <p className=\"text-sm\">Github</p>\n            </Link>\n          </li>\n          <li className=\"flex gap-1 font-semibold\">\n            <p className=\"text-sm \">Copyright</p>\n            <p className=\"text-sm\"> {new Date().getFullYear()}</p>\n          </li>\n          <li className=\"font-semibold\">\n            <Link to=\"/https://twitter.com/Derick80\">\n              <p className=\"text-sm\">Twitter</p>\n            </Link>\n          </li>\n        </ul>\n      </footer>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form } from \"@remix-run/react\";\nimport React from \"react\";\nimport Button from \"~/components/button\";\nimport BayesTable from \"~/components/bayes-table\";\nimport { criteria } from \"~/constants/consts\";\nimport { getACMGClassification } from \"~/server/functions.server\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const id = params.id;\n  if (!id) return redirect(\"/variants\");\n\n  const populationData = criteria.find(\n    (criteria) => criteria.name === \"Population\"\n  );\n  const functionalData = criteria.find(\n    (criteria) => criteria.name === \"Functional\"\n  );\n  const proteinData = criteria.find((criteria) => criteria.name === \"Protein\");\n  const reputableSourceData = criteria.find(\n    (criteria) => criteria.name === \"ReputableSource\"\n  );\n  const caseLevelData = criteria.find(\n    (criteria) => criteria.name === \"CaseLevel\"\n  );\n\n  return json({\n    populationData,\n    functionalData,\n    proteinData,\n    reputableSourceData,\n    caseLevelData,\n  });\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const population = formData.get(\"population\");\n  const functional = formData.get(\"functionalComputational\");\n  const protein = formData.get(\"protein\");\n  const reputableSource = formData.get(\"reputableSource\");\n  const caseLevel = formData.get(\"caseLevel\");\n\n  const data = Object.fromEntries(formData.entries()) as Record<string, string>;\n  console.log(data, \"data\");\n  // Use the following function to calculate the total classification\n  const totals = await getACMGClassification(data);\n  console.log(totals, \"totals\");\n  return json({ message: \"updated\" });\n}\nexport default function BetaRoute() {\n  const [criterias, setCriterias] = React.useState<string[]>([]);\n  const [totals, setTotals] = React.useState<number>(0);\n  const [classification, setClassification] =\n    React.useState<string>(\"No classification\");\n  const [dropdown, setDropdown] = React.useState(false);\n  const optionsRef = React.useRef<HTMLOptionElement>(null);\n  const [reset, setReset] = React.useState(false);\n\n  const formRef = React.useRef<HTMLFormElement>(null);\n  const calculatorRef = React.useRef<HTMLDivElement>(null);\n  React.useEffect(() => {\n    if (reset) {\n      formRef.current?.reset();\n    }\n  }, [reset]);\n\n  // create a function to handle the choices from the select boxes\n  function handleChoices(event: React.ChangeEvent<HTMLSelectElement>) {\n    const { name, value } = event.target;\n    // subcategory is the first letter of the value Benign = B or Pathogenic = P\n    const subcategory = value.substring(0, 1);\n\n    // score is the last letter of the value and corresponds to the bayes score from Tavtigian et al 2020\n    const score = Number(value.slice(-1));\n\n    // shortenedEvidenceType is the first 3 letters of the name of the EvidenceType eg Population = pop\n    const shortenedEvidenceType = name.split(\" \")[0];\n    //  combo is the shortenedEvidenceType, subcategory and score eg pop B 1\n\n    const newCriteria = [...criterias];\n\n    // if the newCriteria array already contains a value that starts with the shortenedEvidenceType eg pop B 1 then replace that value with the new combo value\n    if (\n      newCriteria.some((criteria) => criteria.startsWith(shortenedEvidenceType))\n    ) {\n      const index = newCriteria.findIndex((criteria) =>\n        criteria.startsWith(shortenedEvidenceType)\n      );\n      newCriteria[index] =\n        shortenedEvidenceType + \"_\" + subcategory + \"_\" + score;\n    } else {\n      // if the newCriteria array does not contain a value that starts with the shortenedEvidenceType eg pop B 1 then add the combo value to the newCriteria array\n      newCriteria.push(shortenedEvidenceType + \"_\" + subcategory + \"_\" + score);\n    }\n    // set the criterias state to the newCriteria array\u00E5\n\n    setCriterias(newCriteria);\n    console.log(newCriteria, \"newCriteria\");\n\n    // sum the total score from the newCriteria array and set the total state to the sum of the array which corresponds to the total bayes score and set the classification state to the classification name eg Benign\n    const trimmedCriteria = newCriteria.map((criteria) => criteria.slice(-3));\n    console.log(trimmedCriteria, \"trimmedCriteria\");\n\n    const subTotal = getNumbers(trimmedCriteria);\n    const total = subTotal.reduce((a, b) => a + b, 0);\n    console.log(total, \"total\");\n    setTotals(total);\n\n    if (total <= -7) {\n      setClassification(\"Benign\");\n    } else if (total >= -6 && total <= -1) {\n      setClassification(\"Likely Benign\");\n    } else if (total >= 0 && total <= 5) {\n      setClassification(\"Uncertain Significance\");\n    } else if (total >= 6 && total <= 9) {\n      setClassification(\"Likely Pathogenic\");\n    } else if (total >= 10) {\n      setClassification(\"Pathogenic\");\n    } else {\n      setClassification(\"No Classification\");\n    }\n  }\n\n  const handleClickOutside = (event: MouseEvent): void => {\n    if (\n      optionsRef.current &&\n      !optionsRef.current.contains(event.target as Node)\n    ) {\n      setDropdown(false);\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener(\"mouseleave\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mouseleave\", handleClickOutside);\n    };\n  }, []);\n\n  function handleReset(): void {\n    setReset(!reset);\n  }\n  return (\n    <div className=\"flex min-h-screen flex-col  p-2\">\n      <div\n        ref={calculatorRef}\n        className=\"flex w-full flex-col items-center gap-1\"\n      >\n        <h3 className=\"text-2xl font-bold\">ACMG Classification</h3>\n        <p className=\"text-xl font-bold\"> {criterias}</p>\n        <p className=\"text-xl font-bold\">\n          Total Score: {totals !== 0 ? totals : 0}\n        </p>\n        <p className=\"text-xl font-bold\">Classification: {classification}</p>\n      </div>\n      <div className=\"flex w-full flex-row items-center gap-1\">\n        <BayesTable />\n\n        <Form\n          id=\"form\"\n          ref={formRef}\n          method=\"post\"\n          className=\"flex w-1/2 flex-col gap-1\"\n        >\n          {criteria.map((population) => (\n            <>\n              <label\n                className=\"text-left font-semibold capitalize\"\n                key={population.id}\n              >\n                {population.name}\n              </label>\n\n              <select\n                data-state={dropdown}\n                id=\"select\"\n                title={population.name}\n                className=\"rounded-md border border-gray-300 text-black\"\n                key={population.id}\n                name={population.name}\n                onChange={handleChoices}\n              >\n                {population.strength.map((strength) => (\n                  <option\n                    ref={optionsRef}\n                    data-category-type={strength.value.slice(0, 1)}\n                    data-etype={population.name}\n                    placeholder=\"Pick a Criterion\"\n                    key={strength.id}\n                    value={strength.value}\n                    defaultChecked={false}\n                  >\n                    {strength.label}\n                  </option>\n                ))}\n              </select>\n            </>\n          ))}\n          <div className=\"flex w-full flex-row items-center gap-1\">\n            <Button variant=\"primary_filled\" size=\"base\" type=\"submit\">\n              Submit\n            </Button>\n            <Button\n              variant=\"warning_filled\"\n              size=\"base\"\n              type=\"button\"\n              onClick={handleReset}\n            >\n              Reset\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nfunction getNumbers(trimmedCriteria: string[]) {\n  const myArray = [] as number[];\n  trimmedCriteria.forEach((criteria) => {\n    if (criteria.startsWith(\"B\")) {\n      const number = -Number(criteria.slice(-1));\n      myArray.push(number);\n    } else if (criteria.startsWith(\"P\")) {\n      const number = Number(criteria.slice(-1));\n      myArray.push(number);\n    }\n  });\n  return myArray;\n}\n", "import { type ButtonHTMLAttributes, type ReactNode } from \"react\";\nimport clsx from \"clsx\";\n\ntype buttonVariant =\n  | \"success\"\n  | \"warning\"\n  | \"danger\"\n  | \"primary\"\n  | \"ghost\"\n  | \"success_filled\"\n  | \"danger_filled\"\n  | \"primary_filled\"\n  | \"icon_filled\"\n  | \"icon_unfilled\"\n  | \"warning_filled\"\n  | \"icon_text_filled\"\n  | \"icon_text_unfilled\";\ntype buttonSize = \"base\" | \"large\" | \"small\" | \"tiny\";\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  size?: buttonSize;\n  variant?: buttonVariant;\n  children: ReactNode;\n}\n\nexport default function Button({\n  size = \"base\",\n  variant = \"primary_filled\",\n  children,\n  className,\n  ...props\n}: Props) {\n  const sizeClasses = {\n    base: \"px-4 py-2\",\n    large: \"px-6 py-3\",\n    small: \"px-2 py-1\",\n    tiny: \"px-1 py-1 text-xs\",\n  };\n  const variantClasses = {\n    success:\n      \"rounded border-2  border-green-500 dark:text-slate-50 hover:bg-green-600 hover:border-green-600 hover:text-slate-50 capitalize\",\n    warning:\n      \"rounded border-2 border-orange-200 dark:text-slate-50 hover:bg-orange-300 hover:border-orange-200 hover:text-slate-50 capitalize\",\n    danger:\n      \"rounded border-2 border-red-500 dark:text-slate-50 hover:bg-red-600 hover:border-red-600 hover:text-slate-50 capitalize\",\n    primary:\n      \"rounded border-2  border-blue-500 capitalize dark:text-slate-50 hover:bg-blue-600 hover:border-blue-600 hover:text-slate-50 capitalize\",\n    ghost: \"hover:bg-slate-50 hover:text-slate-500 capitalize hover:border-2\",\n    success_filled:\n      \"rounded border-2 bg-green-500 border-green-500 text-slate-50 hover:bg-green-600 hover:border-green-600 capitalize\",\n    warning_filled:\n      \"rounded border-2 bg-orange-500 border-orange-500  hover:bg-orange-300 hover:border-orange-300 capitalize \",\n    danger_filled:\n      \"rounded border-2 bg-red-500 border-red-500 text-slate-50 hover:bg-red-600 hover:border-red-600 capitalize\",\n    primary_filled:\n      \"rounded border-2 bg-blue-500 border-blue-500 text-slate-50 hover:bg-blue-600 hover:border-blue-600\",\n    icon_filled:\n      \"rounded border-2 bg-slate-500 border-slate-500 text-slate-50 hover:bg-slate-600 hover:border-slate-600\",\n    icon_unfilled:\n      \"font-semibold text-slate-500 hover:bg-slate-50 dark:text-slate-50\",\n    icon_text_filled:\n      \"rounded border-2 bg-slate-500 border-slate-500 text-slate-50 hover:bg-slate-600 hover:border-slate-600 capitalize flex flex-row items-center gap-2\",\n    icon_text_unfilled:\n      \"font-semibold text-slate-500 hover:bg-slate-900 capitalize dark:text-slate-50 flex flex-row items-center gap-2\",\n  };\n  return (\n    <button\n      className={clsx(\n        \"flex h-fit w-fit flex-row items-center gap-2 rounded-md text-xs font-medium transition-all disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:border-transparent disabled:hover:bg-transparent disabled:hover:text-slate-500\",\n        sizeClasses[size],\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n", "export default function BayesTable() {\n  return (\n    <div className=\"flex w-1/2 flex-col gap-2\">\n      <table className=\"w-1/2 text-sm\">\n        <thead>\n          <tr>\n            <th className=\"text-left\">Category</th>\n\n            <th className=\"text-left\">Total Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"text-left\">Pathogenic</td>\n            <td className=\"text-left\"> &gt;10</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\"> Likely Pathogenic</td>\n            <td className=\"text-left\"> 6-9</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\">Uncertain Significance</td>\n            <td className=\"text-left\">0-5</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\">Likely Benign</td>\n            <td className=\"text-left\"> -1-6</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\">Benign</td>\n            <td className=\"text-left\">\n              {\" \"}\n              {`>=`}\n              -7\n            </td>\n          </tr>\n          <tr></tr>\n        </tbody>\n        <p className=\"text-xs text-gray-500\">\n          *Note: This is a beta version of the ACMG classification tool. Please\n          use with caution. Based on Tavtigian 2020\n        </p>\n      </table>\n    </div>\n  );\n}\n", "export const criteria = [\n  {\n    id: \"1\",\n    name: \"Population\",\n    strength: [\n      {\n        id: \"1\",\n        value: \"P_2\",\n        label: \"PM2\",\n      },\n      {\n        id: \"2\",\n        value: \"P_1\",\n        label: \"PM2_Supporting\",\n      },\n      {\n        id: \"3\",\n        value: \"B_8\",\n        label: \"BA1\",\n      },\n      {\n        id: \"4\",\n        value: \"B_4\",\n        label: \"BS1\",\n      },\n      {\n        id: \"1\",\n        value: \"P_4\",\n        label: \"PS4\",\n      },\n      {\n        id: \"9\",\n        value: \"B_4\",\n        label: \"BS2\",\n      },\n    ],\n  },\n  {\n    id: \"1.1\",\n    name: \"Computational and Predictive\",\n    strength: [\n      {\n        id: \"4\",\n        value: \"B_1\",\n        label: \"BP4\",\n      },\n      {\n        id: \"10\",\n        value: \"B_1\",\n        label: \"BP1\",\n      },\n      {\n        id: \"12\",\n        value: \"B_1\",\n        label: \"BP7\",\n      },\n      {\n        id: \"4.5\",\n        value: \"P_1\",\n        label: \"PP3\",\n      },\n      {\n        id: \"11\",\n        value: \"B_1\",\n        label: \"BP3\",\n      },\n      {\n        id: \"7\",\n        value: \"P_2\",\n        label: \"PM4\",\n      },\n      {\n        id: \"8\",\n        value: \"PM_5\",\n        label: \"PM5\",\n      },\n      {\n        id: \"1\",\n        value: \"P_8\",\n        label: \"PVS1\",\n      },\n      {\n        id: \"2\",\n        value: \"P_4\",\n        label: \"PVS1_Strong\",\n      },\n      {\n        id: \"3\",\n        value: \"P_2\",\n        label: \"PVS1_Moderate\",\n      },\n      {\n        id: \"4\",\n        value: \"P_1\",\n        label: \"PVS1_Supporting\",\n      },\n      {\n        id: \"5\",\n        value: \"P_4\",\n        label: \"PS1\",\n      },\n    ],\n  },\n  {\n    id: \"2\",\n    name: \"Functional\",\n    strength: [\n      {\n        id: \"1\",\n        value: \"P_4\",\n        label: \"PS3\",\n      },\n      {\n        id: \"2\",\n        value: \"B_4\",\n        label: \"BS3\",\n      },\n      {\n        id: \"6\",\n        value: \"P_2\",\n        label: \"PM1\",\n      },\n\n      {\n        id: \"9\",\n        value: \"P_1\",\n        label: \"PP2\",\n      },\n    ],\n  },\n\n  {\n    id: \"4.1\",\n    name: \"Segregation\",\n    strength: [\n      {\n        id: \"5\",\n        value: \"P_1\",\n        label: \"PP1\",\n      },\n      {\n        id: \"10\",\n        value: \"B_4\",\n        label: \"BS4\",\n      },\n    ],\n  },\n  {\n    id: \"4.5\",\n    name: \"De Novo\",\n    strength: [\n      {\n        id: \"0.5\",\n        value: \"P_4\",\n        label: \"PS2\",\n      },\n      {\n        id: \"3\",\n        value: \"P_2\",\n        label: \"PM6\",\n      },\n    ],\n  },\n  {\n    id: \"4.6\",\n    name: \"Allelic\",\n    strength: [\n      {\n        id: \"7\",\n        value: \"B_1\",\n        label: \"BP2\",\n      },\n      {\n        id: \"4\",\n        value: \"P_2\",\n        label: \"PM3\",\n      },\n    ],\n  },\n  {\n    id: \"4\",\n    name: \"Other Database\",\n    strength: [\n      {\n        id: \"1\",\n        value: \"P_1\",\n        label: \"PP5\",\n      },\n\n      {\n        id: \"2\",\n        value: \"B_1\",\n        label: \"BP6\",\n      },\n    ],\n  },\n  {\n    id: \"5\",\n    name: \"Other Data\",\n    strength: [\n      {\n        id: \"6\",\n        value: \"P_1\",\n        label: \"PP4\",\n      },\n\n      {\n        id: \"8\",\n        value: \"B_1\",\n        label: \"BP5\",\n      },\n    ],\n  },\n];\n\ntype ScoreMatrixItem = {\n  name: string;\n  score: [number, number];\n};\n", "// Use this to split up the classification criteria into an array of objects\nexport async function parseACMGAnnotation(array: Record<string, string>) {\n  const dataTypes = [];\n  for (const key in array) {\n    if (array.hasOwnProperty(key)) {\n      const element = array[key];\n      const data = {\n        id: key,\n        name: element,\n        breakdown: {\n          category: element.split(\"\", 1)[0],\n          strength: Number(element.split(\"_\", 2)[1]),\n        },\n      };\n      dataTypes.push(data);\n    }\n  }\n  return dataTypes.map((item) => item.breakdown);\n}\n\ntype CalcTypes = {\n  category: string;\n  strength: number;\n};\n\n// Use this to calculate the strength of the criteria from the Tavtigian paper 2020\nexport async function reduceAndCalcACMGCategory(array: CalcTypes[]) {\n  const pathogenicCriteria = array.filter((item) => item.category === \"P\");\n  const benignCriteria = array.filter((item) => item.category === \"B\");\n  const pathogenicStrength = pathogenicCriteria.reduce((acc, item) => {\n    return (acc += item.strength);\n  }, 0);\n\n  const benignStrength = benignCriteria.reduce((acc, item) => {\n    return -1 * (acc += item.strength);\n  }, 0);\n  const total = pathogenicStrength + benignStrength;\n  const realTotal =\n    total <= -7\n      ? \"B\"\n      : total <= -2\n      ? \"LB\"\n      : total <= 5\n      ? \"VUS\"\n      : total <= 9\n      ? \"LP\"\n      : \"P\";\n\n  return {\n    pathogenicCriteria,\n    benignCriteria,\n    pathogenicStrength,\n    benignStrength,\n    total,\n    realTotal,\n  };\n}\n// Combine the two functions above\nexport async function getACMGClassification(array: Record<string, string>) {\n  const t1 = await parseACMGAnnotation(array);\n\n  const t2 = await reduceAndCalcACMGCategory(t1);\n\n  return t2;\n}\nexport function calc2(array: CalcTypes[]) {\n  const pathogenicCriteria = [\"P\"];\n  const benignCriteria = [\"B\"];\n  const pathogenicStrength = pathogenicCriteria.map(\n    (item) => item.split(\"_\", 2)[1]\n  );\n  const benignStrength = benignCriteria.map((item) => item.length);\n\n  return {\n    pathogenicCriteria,\n    benignCriteria,\n    pathogenicStrength,\n    benignStrength,\n  };\n}\n", "import { ChevronUpIcon, ChevronDownIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\n\nexport default function CheckBoxes({\n  data,\n  setIsOpen,\n  handleCheckboxChange,\n}: {\n  data: {\n    value: string;\n    label: string;\n    definition: string;\n  }[];\n  handleCheckboxChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  const [open, setOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<\n    {\n      name: string;\n      value: string;\n      label: string;\n    }[]\n  >([]);\n\n  return (\n    <div className=\"flex w-72 flex-col gap-2 rounded-md border-2 p-1\">\n      <div className=\"flex justify-between gap-2\">\n        {data[0][\"value\"]}\n        {selected.map((item) => {\n          return <div key={item.value}>{item.label}</div>;\n        })}\n\n        <button\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </button>\n      </div>\n\n      {open && (\n        <div className=\"flex flex-col gap-2\">\n          {data.map((criterion) => {\n            return (\n              <div key={criterion.value} className=\"flex items-center gap-2\">\n                <input\n                  className=\"flex h-[25px] w-[25px] appearance-none items-center  justify-center rounded-[4px] border-2 bg-white shadow-[0_2px_10px] outline-none\"\n                  name={criterion.value}\n                  value={criterion.label}\n                  onChange={handleCheckboxChange}\n                  type=\"checkbox\"\n                />\n                <div className=\"flex flex-col gap-2\">\n                  <p className=\"text-base leading-none\">{criterion.label}</p>\n                </div>\n                <p className=\"text-[8px]\">{criterion.definition}</p>\n              </div>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { useAuth } from \"@clerk/remix\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { z } from \"zod\";\nimport Button from \"~/components/button\";\nimport { validateAction } from \"~/functions\";\nimport { prisma } from \"~/server/prisma.server\";\nexport async function loader({ request, params }: LoaderArgs) {\n  const searchParam = params.splat || \"\";\n  console.log(searchParam, \"searchParam\");\n  const formattedsearchParam = searchParam\n    .split(\" \")\n    .join(\"_\")\n    .split(\"_Data\")\n    .join(\"_data\")\n    .toLowerCase();\n\n  console.log(formattedsearchParam, \"formattedsearchParam\");\n\n  const criterion = await prisma.criterion.findMany({\n    where: {\n      OR: [\n        {\n          evidenceType: {\n            contains: formattedsearchParam,\n          },\n        },\n        {\n          id: {\n            contains: formattedsearchParam,\n          },\n        },\n      ],\n    },\n\n    orderBy: {\n      evidenceType: \"asc\",\n    },\n  });\n\n  console.log(criterion, \"criterion\");\n\n  return json({ criterion, searchParam });\n}\n\nconst schema = z.object({\n  criterionName: z.string(),\n  definition: z.string(),\n  evidenceType: z.string(),\n  example: z.string(),\n  criterionBaseWeight: z.string(),\n  caveat: z.string(),\n});\n\ntype ActionInput = z.infer<typeof schema>;\nexport async function action({ request, params }: ActionArgs) {\n  const criterionId = params.splat;\n  const userId = useAuth;\n  if (!userId) {\n    return redirect(\"/sign-in\");\n  }\n\n  const { formData, errors } = await validateAction({ request, schema });\n\n  if (errors) {\n    return json({ errors });\n  }\n  const {\n    criterionName,\n    definition,\n    evidenceType,\n    example,\n    criterionBaseWeight,\n    caveat,\n  } = formData as ActionInput;\n\n  const updated = await prisma.criterion.update({\n    where: {\n      id: criterionId,\n    },\n    data: {\n      label: criterionName,\n      definition,\n      evidenceType,\n      example,\n      criterionBaseWeight,\n      caveat,\n    },\n  });\n\n  if (updated) {\n    return redirect(\"/criterion\");\n  }\n}\nexport default function EditIndex() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2\">\n      <Form\n        className=\"flex w-full max-w-2xl flex-col gap-2 rounded-md border p-4  \"\n        method=\"post\"\n      >\n        <label className=\"text-xl font-bold\" htmlFor=\"criterionName\">\n          Criterion Name\n        </label>\n        <input\n          className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n          type=\"text\"\n          name=\"criterionName\"\n          id=\"criterionName\"\n          placeholder=\"criterionName\"\n          defaultValue={data.criterion[0].label}\n        />\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"definition\">\n            Definition\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"definition\"\n            id=\"definition\"\n            placeholder=\"definition\"\n            defaultValue={data.criterion[0].definition}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"evidenceType\">\n            Evidence Type\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"evidenceType\"\n            id=\"evidenceType\"\n            placeholder=\"evidenceType\"\n            defaultValue={data.criterion[0].evidenceType}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"example\">\n            Example\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"example\"\n            id=\"example\"\n            placeholder=\"...example\"\n            defaultValue={data.criterion[0].example || \"\"}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"criterionBaseWeight\">\n            Criterion Base Weight\n          </label>\n          <select\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            name=\"criterionBaseWeight\"\n            id=\"criterionBaseWeight\"\n            defaultValue={data.criterion[0].criterionBaseWeight}\n          >\n            <option value=\"P\">Supporting</option>\n            <option value=\"M\">Moderate</option>\n            <option value=\"S\">Strong</option>\n            <option value=\"VS\">Very Strong</option>\n            <option value=\"SA\">Stand Alone</option>\n          </select>\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"caveat\">\n            Caveat\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"caveat\"\n            id=\"caveat\"\n            defaultValue={data.criterion[0].caveat || \"\"}\n            onChange={(e) => {\n              console.log(e.target.value, \"e.target.value\");\n            }}\n          />\n        </div>\n        <Button variant=\"warning_filled\" size=\"large\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\nimport { ZodError, ZodSchema } from \"zod\";\n\nexport async function useMatchesData(\n  id: string\n): Promise<Record<string, string>> {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\n// UP\n\ntype ActionErrors<T> = Partial<Record<keyof T, string>>;\n\nexport async function validateAction<ActionInput>({\n  request,\n  schema,\n}: {\n  request: Request;\n  schema: ZodSchema;\n}) {\n  const body = Object.fromEntries(await request.formData()) as ActionInput;\n\n  try {\n    const formData = schema.parse(body) as ActionInput;\n    return { formData, errors: null };\n  } catch (error) {\n    console.log(error);\n\n    const errors = error as ZodError<ActionInput>;\n\n    return {\n      formData: body,\n      errors: errors.issues.reduce((acc: ActionErrors<ActionInput>, curr) => {\n        const key = curr.path[0] as keyof ActionInput;\n\n        acc[key] = curr.message;\n        return acc;\n      }, {}),\n    };\n  }\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\n// Prevent multiple instances of Prisma Client in development\ndeclare global {\n  // eslint-disable-next-line no-var\n  var __db: PrismaClient | undefined;\n}\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n  prisma.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  prisma = global.__db;\n}\nexport { prisma };\n", "import { LoaderArgs, json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/server/prisma.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const criteria = await prisma.criterion.groupBy({\n    by: [\"evidenceType\"],\n    orderBy: {\n      evidenceType: \"asc\",\n    },\n  });\n\n  if (!criteria) {\n    throw new Error(\"No Criteria Found\");\n  }\n  const parsedEvidenceTypes = criteria.map((criterion) => {\n    const dataEnd = criterion.evidenceType\n      .split(\"_data\")\n      .join(\" Data\")\n      .split(\"_\")\n      .join(\" \");\n    const formattedEvidenceType = dataEnd\n      .split(\" \")\n      .map((word) => {\n        return word.charAt(0).toUpperCase() + word.slice(1);\n      })\n      .join(\" \");\n\n    return {\n      id: Math.random().toString(36).substring(7),\n      evidenceType: formattedEvidenceType,\n    };\n  });\n\n  return json({ parsedEvidenceTypes });\n}\n\nexport default function CriterionHelpRoute() {\n  const data = useLoaderData<typeof loader>();\n  return (\n    <div\n      className=\"\nflex\"\n    >\n      <h3 className=\"text-2xl font-bold\">Criterion Help</h3>\n      <h3 className=\"text-xl font-bold\">Evidence Types</h3>\n      <div className=\"flex flex-col gap-2\">\n        {data.parsedEvidenceTypes.map((criterion) => {\n          return (\n            <div key={criterion.id}>\n              <h4 className=\"text-lg font-bold\">{criterion.evidenceType}</h4>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/server/prisma.server\";\nimport { VariantSummaryCard } from \"./variants\";\nimport { variants } from \"~/constants/variants\";\nexport async function loader({ request, params }: LoaderArgs) {\n  const id = params.id;\n  console.log(id, \"id\");\n\n  if (!id) return redirect(\"/variants\");\n\n  const variant = await variants.find((variant) => variant.id === id);\n\n  if (!variant) return redirect(\"/variants\");\n  return json({ variant });\n}\n\nexport default function VariantRoute() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2 md:flex-row\">\n      <main className=\"flex flex-1 flex-col items-center gap-2 text-center\">\n        <h1 className=\"text-6xl font-bold\">Variant</h1>\n        <Link to={`/variants/${data.variant.id}/annotate`}>annotate</Link>\n        <VariantSummaryCard variant={data.variant} key={data.variant.id} />\n      </main>\n      <Outlet />\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { variants } from \"~/constants/variants\";\nimport { Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { DotsVerticalIcon, InfoCircledIcon } from \"@radix-ui/react-icons\";\nimport React, { useCallback } from \"react\";\nexport async function loader({ request, params }: LoaderArgs) {\n  return json({ variants });\n}\n\nexport default function VariantRoute() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2\">\n      <main className=\"flex flex-1 flex-col items-center gap-2 px-20 text-center\">\n        <Outlet />\n        <h1 className=\"text-6xl font-bold\">Variant</h1>\n\n        {data.variants.map((variant) => (\n          <CardContainer key={variant.id} variant={variant} />\n        ))}\n      </main>\n    </div>\n  );\n}\n\nconst CardContainer = ({ variant }: { variant: VariantCardType }) => {\n  const [flip, setFlip] = React.useState(false);\n\n  const handleFlip = useCallback(() => {\n    setFlip((flip) => !flip);\n  }, []);\n\n  return (\n    <div\n      key={variant.id}\n      className=\"h-[350px] w-[450px] rounded-md border-2 bg-gray-800 p-2 \"\n    >\n      <div className=\"duration-800 preserve-3d relative h-full w-full transform-gpu items-center transition-transform\">\n        {flip ? (\n          <CardBack variant={variant} handleFlip={handleFlip} />\n        ) : (\n          <CardFront variant={variant} handleFlip={handleFlip} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction CardFront({\n  handleFlip,\n  variant,\n}: {\n  handleFlip: () => void;\n  variant: VariantCardType;\n}) {\n  return (\n    <div className=\"[ backface-visibility:hidden] absolute flex h-full w-full flex-col\">\n      <div className=\"flex h-auto w-full grow flex-col justify-between gap-3 overflow-hidden rounded-md border p-2\">\n        <Link to={`/variants/${variant.id}/annotate`}>\n          <h3 className=\"text-xl font-bold text-slate-50\">{variant.symbol}</h3>\n        </Link>\n        <div className=\"flex flex-row items-center justify-between gap-3\">\n          <div className=\"flex w-1/2 flex-col items-start gap-1\">\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                HGVS:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.hgvs}</p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                Protein:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.protein}</p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                cDNA:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.cdna}</p>\n            </span>\n          </div>\n          <div className=\"flex w-1/2 flex-col items-start gap-2 \">\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                Transcript:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.transcript}</p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                CPRA:\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                chr{variant.chr}:{variant.pos}\n                {variant.ref}&gt;{variant.alt}\n              </p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                AA:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.aa}</p>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <p className=\"text-center text-xs font-semibold text-slate-50\">\n            Description\n          </p>\n          <p className=\"text-xs text-gray-500\">{variant.description}</p>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row justify-end gap-2\">\n        <button onClick={handleFlip}>\n          <InfoCircledIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction CardBack({\n  handleFlip,\n  variant,\n}: {\n  handleFlip: () => void;\n  variant: VariantCardType;\n}) {\n  return (\n    <div className=\"[ backface-visibility:hidden] absolute flex h-full w-full flex-col\">\n      <div className=\"flex h-auto w-full grow flex-col gap-1 overflow-hidden rounded-md border p-2\">\n        back\n      </div>\n      <div className=\"flex flex-row justify-end gap-2\">\n        <button onClick={handleFlip}>\n          <InfoCircledIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\nexport type VariantCardType = {\n  id: string;\n  symbol: string;\n  transcript: string;\n  hgvs: string;\n  protein: string;\n  cdna: string;\n  aa: string;\n  chr: string;\n  pos: string;\n  ref: string;\n  alt: string;\n  hgnc: string;\n  omim: string;\n  clinvar: string;\n  gnomad: string;\n  sift: string;\n  polyphen: string;\n  zygosity: string;\n  inheritance: string;\n  vaf: string;\n  description: string;\n};\n\nexport function VariantCardFront({ variant }: { variant: VariantCardType }) {\n  const [flip, setFlip] = React.useState(false);\n\n  return (\n    <div className=\"flex  w-full flex-col gap-1 rounded-md border-2 p-2\">\n      <div\n        className=\"flex h-[350px] w-[350px] flex-col gap-1 overflow-hidden rounded-md bg-transparent p-2\"\n        key={variant.id}\n      ></div>\n    </div>\n  );\n}\n\nexport function VariantCardBack({ variant }: { variant: VariantCardType }) {\n  return (\n    <div\n      className=\"flex h-auto w-full flex-col gap-1 overflow-hidden rounded-md border-red-500  p-2\"\n      key={variant.id}\n    >\n      <div className=\"flex flex-row items-center justify-between gap-2\">\n        <h5 className=\"text-xl font-bold text-gray-900\">{variant.symbol}</h5>\n\n        <span className=\"text-xs text-gray-500\">{variant.hgvs}</span>\n        <span className=\"text-xs text-gray-500\">{variant.protein}</span>\n      </div>\n      <div className=\"flex h-full flex-col gap-2\">\n        <div className=\"flex w-full flex-row items-center gap-2\">\n          <span className=\"text-xs text-gray-500\">\n            chr{variant.chr}:{variant.pos}\n            {variant.ref}&gt;{variant.alt}\n          </span>\n\n          <span className=\"text-xs text-gray-500\">{variant.gnomad}</span>\n        </div>\n        <div className=\"flex w-full flex-col gap-2\">\n          <div className=\"flex w-full flex-col gap-2\">\n            <div\n              className=\"flex flex-col gap-2\n               rounded-md p-1\n            \"\n            >\n              <h5 className=\"text-left text-xs font-semibold text-gray-500\">\n                inSilico\n              </h5>\n              <div className=\"flex flex-row gap-1\">\n                <p className=\"text-xs text-gray-500\">Combined:</p>\n                <p className=\"text-xs text-gray-500\">\n                  {sortInSilico({\n                    polyphen: variant.polyphen,\n                    sift: variant.sift,\n                  })}\n                </p>\n              </div>\n              <div className=\"flex flex-row gap-2\">\n                <p className=\"text-xs text-gray-500\">SIFT:</p>\n                <span className=\"text-xs text-gray-500\">{variant.sift}</span>\n                <p className=\"text-xs text-gray-500\">PolyPhen:</p>\n\n                <span className=\"text-xs text-gray-500\">\n                  {variant.polyphen}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex w-full flex-row gap-1\">\n            <h5 className=\"text-xs font-semibold text-gray-500\">\n              Inheritance:\n            </h5>\n            <span className=\"text-xs text-gray-500\">\n              {variant.inheritance === \"Autosomal Dominant\" ? \"A.D\" : \"A.R\"}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport function VariantSummaryCard({ variant }: { variant: VariantCardType }) {\n  const [flip, setFlip] = React.useState(false);\n\n  return (\n    <div\n      className=\"flex h-auto w-full flex-col gap-1 overflow-hidden rounded-md border p-2\"\n      key={variant.id}\n    >\n      {flip ? (\n        <VariantCardBack variant={variant} />\n      ) : (\n        <VariantCardFront variant={variant} />\n      )}\n      <div className=\"flex flex-row justify-end gap-2\">\n        <DotsVerticalIcon />\n        <button onClick={() => setFlip(!flip)}>\n          <InfoCircledIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction sortInSilico({ polyphen, sift }: { polyphen: string; sift: string }) {\n  const phen = polyphen.toLowerCase();\n  const sifted = sift.toLowerCase();\n\n  if (phen === \"benign\" && sift === \"benign\") {\n    return \"Benign\";\n  } else if (phen === \"benign\" && sifted === \"deleterious\") {\n    return \"Likely Benign\";\n  } else if (phen === \"possibly damaging\" && sifted === \"tolerated\") {\n    return \"Likely Benign\";\n  } else if (phen === \"possibly damaging\" && sifted === \"deleterious\") {\n    return \"Likely Pathogenic\";\n  } else if (phen === \"probably damaging\" && sifted === \"tolerated\") {\n    return \"Likely Pathogenic\";\n  } else if (phen === \"probably damaging\" && sifted === \"deleterious\") {\n    return \"Pathogenic\";\n  } else {\n    return \"Unknown\";\n  }\n}\n", "export const variants = [\n  {\n    id: \"1\",\n    symbol: \"BRCA2\",\n    transcript: \"NM_000059.3\",\n    hgvs: \"NM_000059.3:c.68_69del\",\n    protein: \"NP_000050.2:p.Glu23Valfs*17\",\n    cdna: \"c.68_69del\",\n    aa: \"p.Glu23Valfs*17\",\n    chr: \"13\",\n    pos: \"32315474\",\n    ref: \"CT\",\n    alt: \"C\",\n    hgnc: \"HGNC:1101\",\n    omim: \"OMIM:600185\",\n    clinvar: \"RCV000000000\",\n    gnomad: \"0.0000000000\",\n    sift: \"Deleterious\",\n    polyphen: \"Probably Damaging\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Dominant\",\n    vaf: \"0.5\",\n    description: \"This is a brca2 variant description\",\n  },\n  {\n    id: \"2\",\n    symbol: \"EGFR\",\n    transcript: \"NM_005228.4\",\n    hgvs: \"NM_005228.4:c.2155G>T\",\n    protein: \"NP_005219.2:p.Glu719*\",\n    cdna: \"c.2155G>T\",\n    aa: \"p.Glu719*\",\n    chr: \"7\",\n    pos: \"55249071\",\n    ref: \"G\",\n    alt: \"T\",\n    hgnc: \"HGNC:3236\",\n    omim: \"OMIM:131550\",\n    clinvar: \"RCV000000000\",\n    gnomad: \"0.0000000000\",\n    sift: \"Deleterious\",\n    polyphen: \"Probably Damaging\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Dominant\",\n    vaf: \"0.5\",\n    descriptions: \"This is a EGFR variant description\",\n  },\n  {\n    id: \"3\",\n    symbol: \"RYR1\",\n    transcript: \"NM_000540.3\",\n    hgvs: \"NM_000540.2(RYR1):c.1202G>A\",\n    protein: \"NP_001036188.1:p.Arg401His\",\n    cdna: \"c.1202G>A\",\n    aa: \"pp.Arg401His\",\n    chr: \"19\",\n    pos: \"38942483\",\n    ref: \"G\",\n    alt: \"A\",\n    hgnc: \"HGNC:10479\",\n    omim: \"OMIM:180901\",\n    clinvar: \"133030\",\n    gnomad: \"0.0000000000\",\n    sift: \"Deleterious\",\n    polyphen: \"Probably Damaging\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Resessive\",\n    vaf: \"0.5\",\n    description: \"This is a RYR1 variant description\",\n  },\n  {\n    id: \"4\",\n    symbol: \"TP53\",\n    transcript: \"NM_000546.6\",\n    hgvs: \"NM_000546.5:c.935C>G\",\n    protein: \"NP_000537.3:p.Thr312Ser\",\n    cdna: \"c.935C>G\",\n    aa: \"p.Thr312Ser\",\n    chr: \"17\",\n    pos: \"7576911\",\n    ref: \"C\",\n    alt: \"G\",\n    hgnc: \"HGNC:11998\",\n    omim: \"OMIM:191170\",\n    clinvar: \"RCV000000000\",\n    gnomad: \"0.0000000000\",\n    sift: \"benign\",\n    polyphen: \"benign\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Dominant\",\n    vaf: \"0.5\",\n    description: \"This is a TP53 variant description\",\n  },\n];\n", "import { Form } from \"@remix-run/react\";\nimport React from \"react\";\nimport Button from \"~/components/button\";\nimport BayesTable from \"~/components/bayes-table\";\nimport { criteria } from \"~/constants/consts\";\nimport InfoPanel from \"./info\";\n\nexport default function Calculator() {\n  const strengths = criteria.map((strength) => strength.strength);\n  console.log(strengths, \"strengths\");\n\n  const [criterias, setCriterias] = React.useState<string[]>([]);\n  const [criteriaDetail, setCriteriaDetail] = React.useState<string[]>([]);\n  const [totals, setTotals] = React.useState<number>(0);\n  const [classification, setClassification] =\n    React.useState<string>(\"No classification\");\n  const [dropdown, setDropdown] = React.useState(false);\n  const optionsRef = React.useRef<HTMLOptionElement>(null);\n\n  const formRef = React.useRef<HTMLFormElement>(null);\n  const calculatorRef = React.useRef<HTMLDivElement>(null);\n\n  // create a function to handle the choices from the select boxes\n  function handleChoices(event: React.ChangeEvent<HTMLSelectElement>) {\n    const { name, value } = event.target;\n    console.log(value, \"value\");\n\n    // overly complex way of doing this but...\n\n    const newValue = value.substring(0, value.indexOf(\"^\"));\n    console.log(newValue, \"newValue\");\n    const newLabel = value.substring(value.indexOf(\"^\") + 1);\n    console.log(newLabel, \"newLabel\");\n\n    //  update newCriterial detail with the newLabel but only if it doesn't already exist in the array\n    const newCriteriaDetail = [...criteriaDetail];\n    if (!newCriteriaDetail.includes(newLabel)) {\n      newCriteriaDetail.push(newLabel);\n    }\n    setCriteriaDetail(newCriteriaDetail);\n    console.log(newCriteriaDetail, \"newCriteriaDetail\");\n\n    // setCriteriaDetail([...criteriaDetail, value])\n    // subcategory is the first letter of the value Benign = B or Pathogenic = P\n    const subcategory = newValue.substring(0, 1);\n\n    // score is the last letter of the value and corresponds to the bayes score from Tavtigian et al 2020\n    const score = Number(newValue.slice(-1));\n\n    // shortenedEvidenceType is the first 3 letters of the name of the EvidenceType eg Population = pop\n    const shortenedEvidenceType = name.split(\" \")[0];\n    //  combo is the shortenedEvidenceType, subcategory and score eg pop B 1\n\n    const newCriteria = [...criterias];\n\n    // if the newCriteria array already contains a value that starts with the shortenedEvidenceType eg pop B 1 then replace that value with the new combo value\n    if (\n      newCriteria.some((criteria) => criteria.startsWith(shortenedEvidenceType))\n    ) {\n      const index = newCriteria.findIndex((criteria) =>\n        criteria.startsWith(shortenedEvidenceType)\n      );\n      newCriteria[index] =\n        shortenedEvidenceType + \"_\" + subcategory + \"_\" + score;\n    } else {\n      // if the newCriteria array does not contain a value that starts with the shortenedEvidenceType eg pop B 1 then add the combo value to the newCriteria array\n      newCriteria.push(shortenedEvidenceType + \"_\" + subcategory + \"_\" + score);\n    }\n    // set the criterias state to the newCriteria array\u00E5\n\n    setCriterias(newCriteria);\n    console.log(newCriteria, \"newCriteria\");\n\n    // sum the total score from the newCriteria array and set the total state to the sum of the array which corresponds to the total bayes score and set the classification state to the classification name eg Benign\n    const trimmedCriteria = newCriteria.map((criteria) => criteria.slice(-3));\n    console.log(trimmedCriteria, \"trimmedCriteria\");\n\n    const subTotal = getNumbers(trimmedCriteria);\n    const total = subTotal.reduce((a, b) => a + b, 0);\n    console.log(total, \"total\");\n    setTotals(total);\n\n    if (total <= -7) {\n      setClassification(\"Benign\");\n    } else if (total >= -6 && total <= -1) {\n      setClassification(\"Likely Benign\");\n    } else if (total >= 0 && total <= 5) {\n      setClassification(\"Uncertain Significance\");\n    } else if (total >= 6 && total <= 9) {\n      setClassification(\"Likely Pathogenic\");\n    } else if (total >= 10) {\n      setClassification(\"Pathogenic\");\n    } else {\n      setClassification(\"No Classification\");\n    }\n  }\n\n  const handleClickOutside = (event: MouseEvent): void => {\n    if (\n      optionsRef.current &&\n      !optionsRef.current.contains(event.target as Node)\n    ) {\n      setDropdown(false);\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener(\"mouseleave\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mouseleave\", handleClickOutside);\n    };\n  }, []);\n\n  function handleReset(): void {\n    if (calculatorRef.current?.innerText !== null) {\n      setClassification(\"No Classification\");\n    }\n    formRef.current?.reset();\n    setCriterias([]);\n    setTotals(0);\n  }\n  return (\n    <div className=\"block\">\n      <div\n        ref={calculatorRef}\n        className=\"block w-full flex-col items-center gap-1\"\n      >\n        <h3 className=\"text-center text-2xl font-bold\">ACMG Classification</h3>\n        <p className=\"text-xl font-bold\">Criterias: {criterias}</p>\n        <span className=\"text-xl font-bold\">\n          <p className=\"text-xl font-bold\">\n            {\" \"}\n            Total Score: {totals !== 0 ? totals : 0}\n          </p>\n          {/* breakup criterialDetail by a comma */}\n          <p className=\"text-xl font-bold\">\n            {\" \"}\n            Criteria: [\n            {criteriaDetail.map((criteria, index) => (\n              <span key={index}>\n                {index !== 0 ? \", \" : \"\"}\n                {criteria}\n              </span>\n            ))}\n            ]\n          </p>\n        </span>\n        <p className=\"text-xl font-bold\">Classification: {classification}</p>\n      </div>\n      <div className=\"flex w-full flex-col gap-1 md:flex-row md:justify-between\">\n        <div className=\"w-full border border-blue-500 px-4 md:w-1/2\">\n          <Form\n            id=\"form\"\n            ref={formRef}\n            method=\"post\"\n            className=\"flex flex-col gap-1\"\n          >\n            {criteria.map((population) => (\n              <>\n                <label\n                  className=\"text-left font-semibold capitalize\"\n                  key={population.id}\n                >\n                  {population.name}\n                </label>\n\n                <select\n                  data-state={dropdown}\n                  id=\"select\"\n                  title={population.name}\n                  className=\"rounded-md border border-gray-300 text-black\"\n                  key={population.id}\n                  name={population.name}\n                  onChange={handleChoices}\n                >\n                  {population.strength.map((strength) => (\n                    <option\n                      ref={optionsRef}\n                      data-category-type={strength.value.slice(0, 1)}\n                      data-etype={strength.label}\n                      placeholder=\"Pick a Criterion\"\n                      id={strength.label}\n                      key={strength.id}\n                      value={strength.value + \"^\" + strength.label}\n                      defaultChecked={false}\n                    >\n                      {strength.label}\n                    </option>\n                  ))}\n                </select>\n              </>\n            ))}\n            <div className=\"flex w-full flex-row items-center gap-1\">\n              <Button variant=\"primary_filled\" size=\"base\" type=\"submit\">\n                Submit\n              </Button>\n              <Button\n                variant=\"warning_filled\"\n                size=\"base\"\n                type=\"button\"\n                onClick={handleReset}\n              >\n                Reset\n              </Button>\n            </div>\n          </Form>\n        </div>\n        <div className=\"w-full border border-red-500 px-4 md:w-1/2\">\n          <InfoPanel />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getNumbers(trimmedCriteria: string[]) {\n  const myArray = [] as number[];\n  trimmedCriteria.forEach((criteria) => {\n    if (criteria.startsWith(\"B\")) {\n      const number = -Number(criteria.slice(-1));\n      myArray.push(number);\n    } else if (criteria.startsWith(\"P\")) {\n      const number = Number(criteria.slice(-1));\n      myArray.push(number);\n    }\n  });\n  return myArray;\n}\n", "export default function Index() {\n  return (\n    <div className=\"flex min-h-screen flex-col\">\n      <Documentation />\n    </div>\n  );\n}\n\nfunction Documentation() {\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <h1 className=\"text-2xl font-bold\">Documentation</h1>\n      <p className=\"text-gray-500\">\n        This is a work in progress. Please check back later.\n      </p>\n      <p className=\"text-gray-500\">Generating Criterion</p>\n\n      <h3 className=\"text-xl font-bold\">Criterion</h3>\n      <p className=\"text-gray-500\">\n        The ACMG/AMP guidelines are broken down into 28 individual criteria.\n        Each Criterion is assigned an evidenceType Group of which there are 8\n      </p>\n      <h3 className=\"text-xl font-bold\">Variants</h3>\n      <p className=\"text-gray-500\">\n        Variants are the individual mutations that are being evaluated. Each\n        variant is assigned a classification based on the criteria.\n      </p>\n    </div>\n  );\n}\n", "import type { Criterion } from \"@prisma/client\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useMatches } from \"@remix-run/react\";\nimport React from \"react\";\nimport { prisma } from \"~/server/prisma.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const searchParam =\n    new URLSearchParams(request.url.split(\"?\")[1]).get(\"searchParam\") || \"\";\n  console.log(searchParam, \"searchParam\");\n\n  const criterion = await prisma.criterion.findMany({\n    where: {\n      evidenceType: {\n        contains: searchParam,\n      },\n    },\n    orderBy: {\n      evidenceType: \"asc\",\n    },\n  });\n  console.log(criterion, \"criterion\");\n  // reduce to evidenceType object with benign and pathogenic arrays\n\n  const groups = criterion.reduce((acc, cur) => {\n    if (!acc[cur.evidenceType]) {\n      acc[cur.evidenceType] = [];\n    }\n    acc[cur.evidenceType].push(cur.weight);\n\n    return acc;\n  }, {} as CriterionLoaderData[\"groups\"][0]);\n\n  console.log(groups, \"groups\");\n\n  // generate a list of unique column names\n  const columnNames = criterion.reduce(\n    (acc: string[], cur: (typeof criterion)[0]) => {\n      if (!acc.includes(cur.evidenceType)) {\n        acc.push(cur.evidenceType);\n      }\n      return acc;\n    },\n    [] as string[]\n  );\n\n  return json({ criterion, columnNames, groups });\n}\n\nexport type CriterionLoaderData = {\n  groups: {\n    [key: string]: {\n      id: string;\n      label: string;\n      weight: number;\n      definition: string;\n      evidenceType: string;\n      example: string;\n      criterionBaseWeight: string;\n      caveat: string;\n    }[];\n  }[];\n};\n\nexport default function Criterio() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col p-1\">\n      <div className=\"flex flex-col gap-2\">\n        <Outlet />\n        <h1 className=\"text-2xl font-bold\">Documentation</h1>\n\n        <p className=\"text-gray-500\">\n          This page is a work in progress. Please check back later for more\n          information. Definitions are based on the ACMG/AMP 2015 Guidelines.\n        </p>\n        <p className=\"text-gray-500\">\n          Individual Criterion are grouped by Evidence Type. Click on the\n          Evidence Type to see the Criterion.\n        </p>\n        <p className=\"text-gray-500\">\n          To Edit a Criterion, click on the Criterion Name.\n        </p>\n\n        <div className=\"flex flex-col gap-2 p-1\">\n          {data.columnNames.map((column) => {\n            return (\n              <div\n                key={column}\n                className=\"items-cener flex w-full flex-col gap-2\"\n              >\n                <div className=\"flex flex-row gap-2\">\n                  <CriteriaFetcher searchParam={column} />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CriteriaFetcher({ searchParam }: { searchParam: string }) {\n  const matches = useMatches();\n\n  const criterion = matches.find((match) => match.pathname === \"/criterion\")\n    ?.data.criterion as Criterion[];\n\n  const byEvidenceType = criterion?.filter((criterion) => {\n    return criterion.evidenceType === searchParam;\n  }) as Criterion[];\n\n  const [open, setOpen] = React.useState(false);\n  return (\n    <div\n      className={`flex w-full flex-col gap-2 p-1 ${\n        open ? \"rounded-md border border-gray-500\" : \"rounded-md border\"\n      }`}\n    >\n      <div className=\"flex flex-row items-center gap-2\">\n        <button\n          className=\"flex flex-row items-center gap-2\"\n          onClick={() => setOpen(!open)}\n        >\n          <h3 className=\"text-xl font-bold\">{searchParam}</h3>\n\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </button>\n      </div>\n\n      {open ? (\n        <div className=\"flex flex-col gap-2 p-1\">\n          {byEvidenceType?.map((criterion) => {\n            return (\n              <div key={criterion.id} className=\"flex flex-col gap-2\">\n                <Link to={`/criterion/${criterion.id}`}>\n                  <h3 className=\"text-xl font-bold\">{criterion.label}</h3>\n                </Link>\n                <div className=\"flex flex-row gap-2\">\n                  <FormatDefinition definition={criterion.definition} />\n                </div>\n\n                {criterion.example ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\">\n                      {\" \"}\n                      Example: {criterion.example}\n                    </p>\n                  </div>\n                ) : null}\n\n                {criterion.caveat ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\"> Caveat: {criterion.caveat}</p>\n                  </div>\n                ) : null}\n\n                {criterion.criterionBaseWeight ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\">\n                      Criterion Base Weight: {criterion.criterionBaseWeight}\n                    </p>\n                  </div>\n                ) : null}\n                {criterion.weight ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\">Weight: {criterion.weight}</p>\n                  </div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction FormatDefinition({ definition }: { definition: string }) {\n  function sortMe(definition: string) {\n    const toString = definition.toString();\n\n    const formattedDef = toString\n      .replace(`P:`, \"Supporting: \")\n      .replace(`VS:`, \"Strong: \")\n      .replace(`M:`, \"Moderate: \")\n      .replace(`S:`, \"Strong: \")\n      .replace(`SA: `, \"Stand alone:\");\n\n    return formattedDef;\n  }\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <p className=\"text-gray-500\">Definition: {sortMe(definition)}</p>\n    </div>\n  );\n}\n", "import { SignIn } from \"@clerk/remix\";\n\nexport default function SignInPage() {\n  return (\n    <div>\n      <h1>Sign In route</h1>\n      <SignIn routing={\"path\"} path={\"/sign-in\"} />\n    </div>\n  );\n}\n", "import { SignUp } from \"@clerk/remix\";\n\nexport default function SignUpPage() {\n  return (\n    <div>\n      <h1>Sign Up route</h1>\n      <SignUp routing={\"path\"} path={\"/sign-up\"} />\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\n\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { prisma } from \"~/server/prisma.server\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport React from \"react\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n  Cross2Icon,\n} from \"@radix-ui/react-icons\";\nimport type { Criterion } from \"~/constants/acmg-criteria\";\nimport Button from \"~/components/button\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const criteria = await prisma.criterion.findMany();\n\n  return json({ criteria });\n}\nexport async function action({ request, params }: ActionArgs) {\n  const formData = await request.formData();\n\n  console.log(Object.fromEntries(formData), \"formData\");\n\n  const population = formData.get(\"population_data\") as string;\n  const functional = formData.get(\"functional_data\");\n  const deNovo = formData.get(\"de_novo_data\");\n  const allele = formData.get(\"allele_data\");\n  const segregation = formData.get(\"segregation_data\");\n  const other = formData.get(\"other_data\");\n  const computational = formData.get(\"computational_data\");\n\n  function getCriteria(item: string) {\n    const [evidenceType, label, weight] = item.split(\"^\");\n    return {\n      label,\n    };\n  }\n  const pop = getCriteria(population);\n  console.log(pop, \"pop\");\n\n  return json({\n    message: \"success\",\n  });\n}\n\ntype CriterionGroup = {\n  evidenceType: string;\n  label: string;\n  weight: number;\n};\nexport default function Beta() {\n  const data = useLoaderData<typeof loader>();\n  const [checkedBox, setCheckedBox] = React.useState<CriterionGroup[]>([]);\n  const [selectedOption, setSelectedOption] = React.useState<string>(\"\");\n  const [selected, setSelected] = React.useState<\n    { evidenceType: string; label: string; weight: number }[]\n  >([]);\n\n  const functionalData = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"Functional Data\"\n  );\n\n  const [open, setOpen] = React.useState(false);\n\n  const bothArrays = [...selected, ...checkedBox];\n  console.log(bothArrays, \"bothArrays\");\n\n  const total = bothArrays.reduce((acc, curr) => {\n    return acc + curr.weight;\n  }, 0);\n\n  const [classification, setClassification] = React.useState<string>(\"\");\n\n  function getClassificatin(total: number) {\n    if (total <= -7) {\n      setClassification(\"Benign\");\n    } else if (total >= -6 && total <= -1) {\n      setClassification(\"Likely Benign\");\n    } else if (total >= 0 && total <= 5) {\n      setClassification(\"Uncertain Significance\");\n    } else if (total >= 6 && total <= 9) {\n      setClassification(\"Likely Pathogenic\");\n    } else if (total >= 10) {\n      setClassification(\"Pathogenic\");\n    } else {\n      setClassification(\"No Classification\");\n    }\n  }\n\n  React.useEffect(() => {\n    getClassificatin(total);\n  }, [total]);\n\n  console.log(classification, \"classification\");\n\n  const population = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"Population Data\"\n  );\n  const deNovo = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"De Novo Data\"\n  );\n  const alleleData = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"Allelic Data\"\n  );\n  const segregationData = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"Segregation Data\"\n  );\n  const otherdata = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"Other Data\"\n  );\n  const computationalData = data.criteria.filter(\n    (criterion) =>\n      criterion.evidenceType === \"Computational and Predictive Data\"\n  );\n  const otherdb = data.criteria.filter(\n    (criterion) => criterion.evidenceType === \"Other Database\"\n  );\n\n  // handle checkbox change event\n  const handleCheckboxChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, checked } = e.target;\n    const [evidenceType, label, weight] = value.split(\"^\");\n\n    if (checked) {\n      setCheckedBox((prev) => [\n        ...prev,\n        {\n          evidenceType,\n          label,\n          weight: Number(weight),\n        },\n      ]);\n    } else {\n      setCheckedBox((prev) =>\n        prev.filter((criterion) => criterion.label !== label)\n      );\n    }\n  };\n\n  // handle select change event\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = e.target;\n\n    const [evidenceType, label, weight] = value.split(\"^\");\n    if (evidenceType === \"\") {\n      return;\n    }\n    setSelected((prev) =>\n      prev.filter((criterion) => criterion.evidenceType !== evidenceType)\n    );\n    setSelected((prev) => [\n      ...prev,\n      {\n        evidenceType,\n        label,\n        weight: Number(weight) || 0,\n      },\n    ]);\n  };\n\n  // test stuff\n  const evidenceTypes = Array.from(\n    new Set(data.criteria.map((c) => c.evidenceType))\n  );\n  console.log(evidenceTypes, \"evidenceTypes\");\n\n  return (\n    <>\n      <div className=\"flex flex-row items-center gap-2\">\n        <p className=\"text-2xl font-bold\">ACMG Variant Classification:</p>\n        {classification}\n      </div>\n\n      <Form method=\"post\" action=\"/beta\" className=\"flex flex-col gap-2\">\n        <div className=\"flex flex-col gap-2\">\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={population}\n            name=\"population_data\"\n          />\n\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={deNovo}\n            name=\"de_novo_data\"\n          />\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={alleleData}\n            name=\"allele_data\"\n          />\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={segregationData}\n            name=\"segregation_data\"\n          />\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={otherdata}\n            name=\"other_data\"\n          />\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={computationalData}\n            name=\"computational_data\"\n          />\n          <CSelect\n            handleSelectChange={handleSelectChange}\n            criterion={otherdb}\n            name=\"other_db\"\n          />\n          <div className=\"flex flex-col gap-2\">\n            <div className=\"flex gap-1\">\n              <h3 className=\"capitalize\">functional data</h3>\n              <button type=\"button\" onClick={() => setOpen(!open)}>\n                {open ? (\n                  <ChevronUpIcon className=\"h-6 w-6\" />\n                ) : (\n                  <ChevronDownIcon className=\"h-6 w-6\" />\n                )}\n              </button>\n            </div>\n            {open &&\n              functionalData.map((criterion) => (\n                <label key={criterion.id} className=\"capitalize\">\n                  <input\n                    type=\"checkbox\"\n                    name={criterion.evidenceType}\n                    value={`${criterion.evidenceType}^${criterion.label}^${criterion.weight}`}\n                    onChange={handleCheckboxChange}\n                  />\n                  {criterion.label}\n                </label>\n              ))}\n          </div>\n        </div>\n\n        <Button variant=\"primary_filled\" size=\"base\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n\n// function CriteriaSelect({\n//   handleSelectChange,\n//   criterion,\n//   name,\n// }: {\n//   handleSelectChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n//   criterion: Criterion[];\n//   name: string;\n// }) {\n//   return (\n//     <div className=\"flex flex-col gap-2\">\n//       <label className=\" capitalize\" htmlFor=\"gene\">\n//         {name.split(\"_\").join(\" \")}\n//       </label>\n//       <select name={name} className=\"text-black\" onChange={handleSelectChange}>\n//         {criterion.map((criterion) => (\n//           <option\n//             key={criterion.id}\n//             value={`${criterion.evidenceType}^${criterion.label}^${criterion.weight}`}\n//           >\n//             {criterion.label}\n//           </option>\n//         ))}\n//       </select>\n//     </div>\n//   );\n// }\nfunction CSelect({\n  handleSelectChange,\n  criterion,\n  name,\n}: {\n  handleSelectChange: (e: React.ChangeEvent<HTMLSelectElement>) => void;\n  criterion: Criterion[];\n  name: string;\n}) {\n  const [open, setOpen] = React.useState(false);\n  const [value, setValue] = React.useState(\"\");\n  return (\n    <div className=\"flex flex-col gap-2 rounded-md\">\n      <div className=\"flex gap-1\">\n        <label className=\" capitalize\" htmlFor=\"gene\">\n          {name.split(\"_\").join(\" \")}\n        </label>\n        <button type=\"button\" onClick={() => setOpen(!open)}>\n          {open ? (\n            <ChevronUpIcon className=\"h-6 w-6\" />\n          ) : (\n            <ChevronDownIcon className=\"h-6 w-6\" />\n          )}\n        </button>\n      </div>\n      <div className=\"relative \">\n        {value}\n\n        <input type=\"hidden\" name={name} value={value} />\n        <button\n          type=\"button\"\n          onClick={(e) => {\n            handleSelectChange(\n              e as unknown as React.ChangeEvent<HTMLSelectElement>\n            );\n            setOpen(false);\n          }}\n          className=\"abg-red-500 h-6 w-6 rounded-full text-white\"\n        >\n          {value === \"\" ? \"\" : <Cross2Icon />}\n        </button>\n        {open && (\n          <div className=\"absolute z-10 w-full bg-white\">\n            <ul className=\"flex flex-col gap-2\">\n              {criterion.map((criterion) => (\n                <>\n                  <li key={criterion.id} className=\"capitalize text-black\">\n                    <button\n                      type=\"button\"\n                      value={`${criterion.evidenceType}^${criterion.label}^${criterion.weight}`}\n                      className={value === criterion.label ? \"bg-blue-100\" : \"\"}\n                      onClick={(e) => {\n                        const { value } = e.currentTarget;\n                        const [evidenceType, label, weight] = value.split(\"^\");\n                        setValue(value);\n                        handleSelectChange(\n                          e as unknown as React.ChangeEvent<HTMLSelectElement>\n                        );\n                        setOpen(false);\n                      }}\n                    >\n                      {criterion.label}\n                    </button>\n                  </li>\n                </>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport Dropdown from \"~/components/accord-drop\";\nimport { prisma } from \"~/server/prisma.server\";\nimport React from \"react\";\nimport type {\n  Criterion} from \"~/constants/acmg-criteria\";\nimport {\n  convertToNumbers,\n  extractFirstTwoLetters,\n} from \"~/constants/acmg-criteria\";\nimport {\n  ChevronDownIcon,\n  ChevronUpIcon,\n} from \"@radix-ui/react-icons\";\nexport async function loader({ request, params }: LoaderArgs) {\n  const criteria = await prisma.criterion.findMany();\n\n  return json({ criteria });\n}\n\n\nexport async function action({request, params}: ActionArgs) {\n  const formData = await request.formData();\n  console.log(Object.fromEntries(formData), \"formData\"\n\n  );\n\n  const pop =formData.get('Population Data')\n  const func =formData.getAll('Functional Data')\n  const comp =formData.get('Computational and Predictive Data')\n  const seg =formData.get('Segregation Data')\n  const deNovo =formData.get('De Novo Data')\n  const allelic =formData.get('Allelic Data')\n  const other =formData.get('Other Data')\n  const patho =formData.get('Other Database')\n\n  \n\n\n\nreturn json({\n  message: \"success\",\n})\n}\nexport default function Wip() {\n  const data = useLoaderData<typeof loader>();\n  const [open, setOpen] = React.useState(false);\n  const [criteriaUsed, setCriteriaUsed] = React.useState<\n    {\n      type: string;\n      label: string;\n    }[]\n  >([]);\n\n  console.log(criteriaUsed, \"criteriaUsed\");\n  const checkboxselected = criteriaUsed.filter((item) => {\n    return item.type === \"Functional Data\";\n  });\n\n  const fixedSelectedCriteria = criteriaUsed.map((item) => {\n    return item.label;\n  });\n\n  const reducedSelectedCriteria = extractFirstTwoLetters(fixedSelectedCriteria);\n  const transformed = convertToNumbers(reducedSelectedCriteria);\n  // Extract the functional data from the criteria array to be used in the checkbox\n\n  const functional_data = data.criteria.filter((item) => {\n    return item.evidenceType === \"Functional Data\";\n  });\n\n  // extract non functional data from the criteria array to be used in the dropdown\n  \n  const woFunctional = data.criteria.filter((item) => {\n    return item.evidenceType !== \"Functional Data\";\n  });\n\n  type CurType = {\n    evidenceType: string;\n    label: string;\n  };\n  // create an object with the evidenceType as the key and the array of criteria as the value\n\n  const accordianData = woFunctional\n    .reduce((acc, cur) => {\n      const index = acc.findIndex((item) => {\n        return item === cur.evidenceType;\n      });\n      if (index === -1) {\n        acc.push(cur.evidenceType);\n      }\n      return acc;\n    }, [] as string[])\n    .reduce((acc, cur) => {\n      acc[cur] = woFunctional.filter((item) => {\n        return item.evidenceType === cur;\n      });\n      return acc;\n    }, {} as Record<string, CurType[]>);\n\n  const handleSelect = (option: { value: string; label: string }) => {\n    // if criteriaUsed has the same type as the option, remove it from the array and add the new one\n\n    const index = criteriaUsed.findIndex((item) => {\n      return item.type === option.value;\n    });\n    if (index !== -1) {\n      setCriteriaUsed((prev) => {\n        const copy = [...prev];\n        copy.splice(index, 1);\n        return [...copy, { type: option.value, label: option.label }];\n      });\n      return;\n    }\n\n    setCriteriaUsed((prev) => [\n      ...prev,\n      { type: option.value, label: option.label },\n    ]);\n  };\n\n  // handle checkbox change and add the selected criteria to the criteriaUsed array\n\n  function handleCheckboxChange(e: React.ChangeEvent<HTMLInputElement>){\n    const { name, value, checked } = e.target;\n    if (checked && checkboxselected.length < 4) {\n      setCriteriaUsed((prev) => [...prev, { type: name, label: value }]);\n      return;\n    }\n    setCriteriaUsed((prev) => {\n      const copy = [...prev];\n      const index = copy.findIndex((item) => {\n        return item.label === value;\n      });\n      if (index !== -1) {\n        copy.splice(index, 1);\n      }\n      return [...copy];\n    });\n  };\n\n  const dropdowns = Object.entries(accordianData).map((key) => {\n    return (\n      <Dropdown\n        key={key[0]}\n        title={key[0]}\n        options={data.criteria\n          .filter((criterion) => {\n            return criterion.evidenceType === key[0];\n          })\n          .map((criterion) => {\n            return {\n              value: criterion.evidenceType,\n              label: criterion.label,\n              definition: criterion.definition,\n            };\n          })}\n        onChange={handleSelect}\n      />\n    );\n  });\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center py-2 pb-10 pt-10\">\n      <h1 className=\"text-2xl font-bold\">ACMG Criteria Work in Progress</h1>\n      {criteriaUsed.map((item) => {\n        return (\n          <div className=\"flex gap-2\" key={item.type}>\n            {item.label}\n          </div>\n        );\n      })}\n      {transformed.classification}\n\n     <Form method=\"post\">\n     {dropdowns}\n\n<div className=\"flex flex-col gap-2\">\n  <CheckBoxes\n    checkboxselected={checkboxselected}\n    data={functional_data}\n    setIsOpen={setOpen}\n    handleCheckboxChange={handleCheckboxChange}\n  />\n  </div>\n  <button type=\"submit\">Submit</button>\n     </Form>\n    </div>\n  );\n}\n\nfunction CheckBoxes({\n  data,\n  setIsOpen,\n  handleCheckboxChange,\n  checkboxselected,\n}: {\n  checkboxselected: {\n    type: string;\n    label: string;\n  }[];\n\n  data: Criterion[];\n  handleCheckboxChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  setIsOpen: React.Dispatch<React.SetStateAction<boolean>>;\n}) {\n  const [open, setOpen] = React.useState(false);\n  const [selected, setSelected] = React.useState<\n    {\n      name: string;\n      value: string;\n      label: string;\n    }[]\n  >([]);\n\n  return (\n    <div className=\"flex w-72 flex-col gap-2 rounded-md border-2 p-1\">\n      <div className=\"flex justify-between gap-2\">\n        {\n          data.length > 0 && (\n            <div className=\"flex gap-2\">\n              <p className=\"p-1\">{data[0].evidenceType}</p>\n            \n            </div>\n          )\n\n\n        }\n        {selected.map((item) => {\n          return <div key={item.value}>{item.label}</div>;\n        })}\n\n        <button\n        type='button'\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </button>\n      </div>\n\n      <div className=\"flex gap-2\">\n        {checkboxselected.map((item) => {\n          return (\n            <div key={item.label} className=\"flex gap-2 text-white\">\n              <p className=\"p-1\">\n              {item.label}</p>\n            </div>\n          );\n        })}\n      </div>\n      {open && (\n        <div className=\"flex flex-col gap-2\">\n          {data.map((criterion) => {\n            return (\n              <>\n                <label\n                  key={criterion.evidenceType}\n                  className=\"flex items-center gap-2\"\n                >\n                  <input\n                    type=\"checkbox\"\n                    name={criterion.evidenceType}\n                    value={criterion.label}\n                    onChange={handleCheckboxChange}\n                  />\n                  {criterion.label}\n                </label>\n                <p className=\"text-sm\">{criterion.definition}</p>\n              </>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n", "import { ChevronDownIcon, ChevronUpIcon, Cross2Icon } from \"@radix-ui/react-icons\";\nimport React, { useState } from \"react\";\nimport * as Tooltip from \"@radix-ui/react-tooltip\";\n\ntype OptionType = {\n  label: string;\n  value: string;\n  definition: string;\n};\n\ntype DropdownProps = {\n  options: OptionType[];\n  onChange: (selectedOption: OptionType) => void;\n  title: string;\n};\n\nconst Dropdown: React.FC<DropdownProps> = ({ options, onChange, title }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState<OptionType | null>(null);\n\n  const handleSelect = (option: OptionType) => {\n    setSelectedOption(option);\n    onChange(option);\n    setIsOpen(false);\n  };\n  React.useEffect(() => {\n    const handleKeyboardEvent = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyboardEvent);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyboardEvent);\n    };\n  }, []);\n\n  return (\n    <div className=\"relative flex w-72 flex-col gap-2 rounded-md border-2 p-1\">\n      {title}\n   <div className=\"flex gap-2 justify-between\">\n    <div\n      className=\"flex w-1/2 flex-row   gap-2 items-center\"\n    >\n      <p className=\"text-xs\">{selectedOption?.label || \"Select an option\"}</p>\n     <button type='button' \n     className=\"\"\n    onClick={()=> setSelectedOption(null)}>\n        {\n          selectedOption && <Cross2Icon />\n        }\n    </button>\n\n    </div>\n      <button\n      type='button'\n        className=\"flex flex-row items-center  gap-2 \"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        \n\n        {isOpen ? <ChevronUpIcon /> : <ChevronDownIcon />}\n      </button>\n      </div>\n      {isOpen && (\n        <ul\n          className=\"absolute left-[50%] top-10 z-10 w-full -translate-x-1/2 transform rounded-md border-2 \n                    bg-white p-1\n                    text-black\"\n        >\n          {options.map((option) => (\n            <>\n           \n            \n            <li\n              className=\"flex w-full cursor-pointer  flex-col overflow-auto hover:bg-gray-200\"\n              key={option.value}\n              onClick={() => handleSelect(option)}\n            >\n              <div className=\"items-centser flex flex-col justify-between gap-1 border-b-2\">\n                <p className=\"text-base\">{option.label}</p>\n                <p className=\"text-[8px]\">Definition:{option.definition}</p>\n              </div>\n            </li>\n            </>\n          ))}\n          \n        </ul>\n      )}\n      {\n        options.map((option) => (\n          <input\n            key={option.value}\n          type=\"hidden\" name={option.value} value={\n            selectedOption?.label\n          } />\n        ))\n\n      }\n    </div>\n  );\n};\n\nexport default Dropdown;\n", "// consts.ts is my reference for this file\nimport type { Criterion as PrismaCriterion } from \"@prisma/client\";\nimport type { SerializeFrom } from \"@remix-run/node\";\n\nexport type Criterion = SerializeFrom<PrismaCriterion>;\n\n// define an interfacefor the criterion then define an interface for the acmg criteria\ninterface CriterionInterface {\n  benign: string[];\n  pathogenic: string[];\n}\n\nexport interface AcmgCriteria {\n  population: CriterionInterface;\n  computational: CriterionInterface;\n  functional: CriterionInterface;\n  segregation: CriterionInterface;\n  deNovo: CriterionInterface;\n  allelic: CriterionInterface;\n  other_database: CriterionInterface;\n  other_data: CriterionInterface;\n}\n\n//   export the base acmg criteria\nexport const acmgCriteria = {\n  population: {\n    benign: [\"BA1\", \"BS1\", \"BS2\"],\n    pathogenic: [\"PM2\", \"PM2_Supporting\", \"PS4\"],\n  },\n  computational: {\n    benign: [\"BP4\", \"BP7\", \"BP1\", \"BP3\"],\n    pathogenic: [\n      \"PP3\",\n      \"PM4\",\n      \"PM5\",\n      \"PVS1\",\n      \"PVS1_Strong\",\n      \"PVS1_Moderate\",\n      \"PVS1_Supporting\",\n      \"PS1\",\n    ],\n  },\n\n  functional: {\n    benign: [\"BS3\"],\n    pathogenic: [\"PS3\", \"PM1\", \"PP2\"],\n  },\n  segregation: {\n    benign: [\"BS4\"],\n    pathogenic: [\"PP1\"],\n  },\n  deNovo: {\n    benign: [],\n    pathogenic: [\"PS2\", \"PM6\"],\n  },\n  allelic: {\n    benign: [\"BP2\"],\n    pathogenic: [\"PM3\"],\n  },\n  other_database: {\n    benign: [\"BP6\"],\n    pathogenic: [\"PP5\"],\n  },\n  other_data: {\n    benign: [\"BP5\"],\n    pathogenic: [\"PP4\"],\n  },\n};\n\nexport type GroupData = {\n  [group: string]: {\n    [category: string]: string;\n  };\n};\n\nexport type GroupData2 = {\n  [group: string]: {\n    [category: string]: string[];\n  };\n};\n\n// define a function that will receive form data and return the acmg criteria\nexport function getAcmgData(\n  group: keyof typeof acmgCriteria,\n  category: keyof Criterion,\n  label: string,\n  selectedCriteria: GroupData\n) {\n  const newSelectedCriteria = { ...selectedCriteria };\n\n  newSelectedCriteria[group] = {\n    ...newSelectedCriteria[group],\n    [category]: label,\n  };\n\n  const criteriaArray: string[] = [];\n\n  for (const group in newSelectedCriteria) {\n    const { benign, pathogenic } = newSelectedCriteria[\n      group as keyof typeof newSelectedCriteria\n    ] as { benign?: string; pathogenic?: string };\n    if (benign) {\n      criteriaArray.push(benign);\n    }\n    if (pathogenic) {\n      criteriaArray.push(pathogenic);\n    }\n  }\n  return criteriaArray;\n}\n// define an object that will help convert outdated acmg strength to updated acmg strength\n\nexport const specialCases: string[] = [\n  \"PM2_Supporting\",\n  \"PVS1_Supporting\",\n  \"PVS1_Strong\",\n  \"PVS1_Moderate\",\n];\n\n//  define a mapping from the special cases to their corresponding values\nexport const specialConversion: { [key: string]: string } = {\n  PM2_Supporting: \"P\",\n  PVS1_Supporting: \"P\",\n  PVS1_Strong: \"S\",\n  PVS1_Moderate: \"M\",\n};\n\n//   define a function that will extract the first two letters of the acmg strength\nexport const extractFirstTwoLetters = (arr: string[]) => {\n  const firstTwoLetters: string[] = [];\n  return arr.map((item) => {\n    const firstLetter = item[0];\n\n    let firstTwoChars: string;\n\n    const underScoreIndex = item.indexOf(\"_\");\n    if (underScoreIndex > -1 && specialCases.includes(item)) {\n      firstTwoChars = item[0] + specialConversion[item];\n    } else {\n      firstTwoChars = item.substring(0, 2);\n    }\n    firstTwoLetters.push(firstTwoChars);\n    return firstTwoChars;\n  });\n};\n// Define a mapping from strength letters to their corresponding values\nexport const strengthValues: { [key: string]: number } = {\n  V: 8,\n  A: 8,\n  S: 4,\n  M: 2,\n  P: 1,\n};\n\n//   Define a function to convert the output to numbers that correspond to the strength values\nexport function convertToNumbers(arr: string[]) {\n  const strengthValues: { [key: string]: number } = {\n    V: 5,\n    A: 8,\n    S: 4,\n    M: 2,\n    P: 1,\n  };\n\n  const transformedValues = arr.map((item) => {\n    const firstLetter = item[0];\n\n    const secondLetter = item[1];\n\n    const secondNumber = strengthValues[secondLetter];\n    const transformedNumber =\n      firstLetter === \"B\" ? -secondNumber : secondNumber;\n    return transformedNumber;\n  });\n  const totalSum = transformedValues.reduce((sum, value) => sum + value, 0);\n\n  interface Classification {\n    totalSum: number;\n    classification: string;\n  }\n  const obj = {} as Classification;\n\n  if (totalSum <= -7) {\n    obj.classification = \"Benign\";\n  } else if (totalSum >= -6 && totalSum <= -1) {\n    obj.classification = \"Likely Benign\";\n  } else if (totalSum >= 0 && totalSum <= 5) {\n    obj.classification = \"Variant of Uncertain Significance\";\n  } else if (totalSum >= 6 && totalSum <= 9) {\n    obj.classification = \"Likely Pathogenic\";\n  } else if (totalSum >= 10) {\n    obj.classification = \"Pathogenic\";\n  }\n\n  obj.totalSum = totalSum;\n  return obj;\n}\n\nexport const scoreMatrix = [\n  {\n    name: \"Benign\",\n    score: [-100, -7],\n  },\n  {\n    name: \"Likely Benign\",\n    score: [-1, -6],\n  },\n  {\n    name: \"Variant of Uncertain Significance\",\n    score: [0, 5],\n  },\n  {\n    name: \"Likely Pathogenic\",\n    score: [6, 9],\n  },\n  {\n    name: \"Pathogenic\",\n    score: [10, 100],\n  },\n];\n\nfunction getClassification(score: number): string {\n  for (const item of scoreMatrix) {\n    const [minScore, maxScore] = item.score;\n    if (score >= minScore && score <= maxScore) {\n      return item.name;\n    }\n  }\n\n  return \"Indeterminate\";\n}\n", "export default {'entry':{'module':'/build/entry.client-VF4IYYO7.js','imports':['/build/_shared/chunk-LKOPCC2G.js','/build/_shared/chunk-GUPKMWBY.js','/build/_shared/chunk-ABY47LC6.js','/build/_shared/chunk-TZ27RBAM.js','/build/_shared/chunk-J2OVIFEL.js','/build/_shared/chunk-MQESCB4Y.js','/build/_shared/chunk-HH3BOLTW.js','/build/_shared/chunk-R6ILELA2.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GZXOWJSC.js','imports':['/build/_shared/chunk-WNJU47PY.js','/build/_shared/chunk-GJCQINV5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/beta':{'id':'routes/beta','parentId':'root','path':'beta','index':undefined,'caseSensitive':undefined,'module':'/build/routes/beta-UVN7MEVI.js','imports':['/build/_shared/chunk-A5NX5H24.js','/build/_shared/chunk-D2JCSPI6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/calculator':{'id':'routes/calculator','parentId':'root','path':'calculator','index':undefined,'caseSensitive':undefined,'module':'/build/routes/calculator-WBXJODFZ.js','imports':['/build/_shared/chunk-RZYARJKT.js','/build/_shared/chunk-D2JCSPI6.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criteria-dropdown':{'id':'routes/criteria-dropdown','parentId':'root','path':'criteria-dropdown','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criteria-dropdown-ZMDEFM5P.js','imports':['/build/_shared/chunk-A5NX5H24.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion':{'id':'routes/criterion','parentId':'root','path':'criterion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion-ZIVBXQDI.js','imports':['/build/_shared/chunk-A5NX5H24.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion.help':{'id':'routes/criterion.help','parentId':'routes/criterion','path':'help','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion.help-DVN556NV.js','imports':['/build/_shared/chunk-GJCQINV5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion_.$splat':{'id':'routes/criterion_.$splat','parentId':'root','path':'criterion/:splat','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion_.$splat-3REZYNGQ.js','imports':['/build/_shared/chunk-D2JCSPI6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-2DZMBREB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up':{'id':'routes/sign-up','parentId':'root','path':'sign-up','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up-7YUFWEHQ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants':{'id':'routes/variants','parentId':'root','path':'variants','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants-VDY4MTM7.js','imports':['/build/_shared/chunk-IXKHEUAX.js','/build/_shared/chunk-A5NX5H24.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants.$id':{'id':'routes/variants.$id','parentId':'routes/variants','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants.$id-VVBXGDTD.js','imports':['/build/_shared/chunk-GJCQINV5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants_.$id.annotate':{'id':'routes/variants_.$id.annotate','parentId':'root','path':'variants/:id/annotate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants_.$id.annotate-QB7NAKOT.js','imports':['/build/_shared/chunk-RZYARJKT.js','/build/_shared/chunk-D2JCSPI6.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/wip':{'id':'routes/wip','parentId':'root','path':'wip','index':undefined,'caseSensitive':undefined,'module':'/build/routes/wip-Y3L7JDSI.js','imports':['/build/_shared/chunk-A5NX5H24.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'cssBundleHref':undefined,'version':'2652a4f5','hmr':{'runtime':'/build/_shared/chunk-J2OVIFEL.js','timestamp':1685565585920},'url':'/build/manifest-2652A4F5.js'};", "\nimport * as entryServer from \"/Users/voidnation/Documents/projects/remix-2023/genes_23/node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/variants_.$id.annotate.tsx\";\nimport * as route2 from \"./routes/criteria-dropdown.tsx\";\nimport * as route3 from \"./routes/criterion_.$splat.tsx\";\nimport * as route4 from \"./routes/criterion.help.tsx\";\nimport * as route5 from \"./routes/variants.$id.tsx\";\nimport * as route6 from \"./routes/calculator/route.tsx\";\nimport * as route7 from \"./routes/criterion.tsx\";\nimport * as route8 from \"./routes/variants.tsx\";\nimport * as route9 from \"./routes/sign-in.tsx\";\nimport * as route10 from \"./routes/sign-up.tsx\";\nimport * as route11 from \"./routes/beta.tsx\";\nimport * as route12 from \"./routes/wip.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":false,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"websocketPort\":3004}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/variants_.$id.annotate\": {\n      id: \"routes/variants_.$id.annotate\",\n      parentId: \"root\",\n      path: \"variants/:id/annotate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/criteria-dropdown\": {\n      id: \"routes/criteria-dropdown\",\n      parentId: \"root\",\n      path: \"criteria-dropdown\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/criterion_.$splat\": {\n      id: \"routes/criterion_.$splat\",\n      parentId: \"root\",\n      path: \"criterion/:splat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/criterion.help\": {\n      id: \"routes/criterion.help\",\n      parentId: \"routes/criterion\",\n      path: \"help\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/variants.$id\": {\n      id: \"routes/variants.$id\",\n      parentId: \"routes/variants\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/calculator\": {\n      id: \"routes/calculator\",\n      parentId: \"root\",\n      path: \"calculator\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/criterion\": {\n      id: \"routes/criterion\",\n      parentId: \"root\",\n      path: \"criterion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/variants\": {\n      id: \"routes/variants\",\n      parentId: \"root\",\n      path: \"variants\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/sign-up\": {\n      id: \"routes/sign-up\",\n      parentId: \"root\",\n      path: \"sign-up\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/beta\": {\n      id: \"routes/beta\",\n      parentId: \"root\",\n      path: \"beta\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/wip\": {\n      id: \"routes/wip\",\n      parentId: \"root\",\n      path: \"wip\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_remix", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "clsx", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "criteria", "React", "import_react", "import_jsx_dev_runtime", "React", "action", "loader", "import_remix", "import_node", "import_react", "import_react", "schema", "import_jsx_dev_runtime", "loader", "action", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "criteria", "VariantRoute", "loader", "import_node", "import_react", "loader", "import_node", "import_react", "import_react_icons", "import_jsx_dev_runtime", "loader", "React", "flip", "import_jsx_dev_runtime", "loader", "variant", "VariantRoute", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "criteria", "getNumbers", "loader", "import_react_icons", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "criterion", "React", "definition", "import_remix", "import_jsx_dev_runtime", "import_remix", "import_jsx_dev_runtime", "action", "loader", "import_node", "import_react", "import_react_icons", "import_jsx_dev_runtime", "loader", "criteria", "action", "React", "total", "criterion", "value", "action", "loader", "import_node", "import_react", "import_react_icons", "import_react", "import_jsx_dev_runtime", "React", "import_react", "import_react_icons", "import_jsx_dev_runtime", "loader", "criteria", "action", "React", "CheckBoxes"]
}
