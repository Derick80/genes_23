{
  "version": 3,
  "sources": ["<stdin>", "../../node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx", "../../app/root.tsx", "../../app/components/layout.tsx", "../../app/routes/kdb.$pdfId.edit-abstract.tsx", "../../app/server/prisma.server.ts", "../../app/routes/variants_.$id.annotate.tsx", "../../app/routes/criterion_.$splat.tsx", "../../app/components/button.tsx", "../../app/utilities/utility-functions.ts", "../../app/routes/criterion.help.tsx", "../../app/routes/genes.server.ts", "../../app/routes/variants.$id.tsx", "../../app/routes/variants.tsx", "../../app/acmg-functions-utilities/variants.ts", "../../app/routes/actions.pdf.ts", "../../app/server/cloudinary.server.ts", "../../app/routes/kdb_.$pdfId.tsx", "../../app/server/pdf.server.ts", "../../app/routes/calculator/route.tsx", "../../app/components/criteria-components/classification-component.tsx", "../../app/acmg-functions-utilities/acmg-criteria.ts", "../../app/components/criteria-components/my-custom-radix-checkbox.tsx", "../../app/components/criteria-components/my-custom-select.tsx", "../../app/components/bayes-table.tsx", "../../app/routes/calculator/calculator-documentation.tsx", "../../app/routes/criterion.tsx", "../../app/routes/kdb_.new.tsx", "../../app/components/shared/cloudinary-pdf-uploader.tsx", "../../app/routes/sign-in.tsx", "../../app/routes/sign-up.tsx", "../../app/routes/_index.tsx", "../../app/components/dev-components/welcome.tsx", "../../app/routes/genes.tsx", "../../app/components/gene-search.tsx", "../../app/routes/beta.tsx", "../../app/routes/kdb.tsx", "../../app/components/kdb-components/pdf-search.tsx", "../../app/components/kdb-components/kdb-welcome.tsx", "../../app/components/kdb-components/pdf-library-list.tsx", "../../app/components/kdb-components/pdf-edit-abstract.tsx", "../../app/routes/wip.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "import { PassThrough } from \"stream\";\n\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\nimport { Response } from \"@remix-run/node\";\nimport { RemixServer } from \"@remix-run/react\";\nimport isbot from \"isbot\";\nimport { renderToPipeableStream } from \"react-dom/server\";\n\nconst ABORT_DELAY = 5_000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n  loadContext: AppLoadContext\n) {\n  return isbot(request.headers.get(\"user-agent\"))\n    ? handleBotRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      )\n    : handleBrowserRequest(\n        request,\n        responseStatusCode,\n        responseHeaders,\n        remixContext\n      );\n}\n\nfunction handleBotRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onAllReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n\nfunction handleBrowserRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  return new Promise((resolve, reject) => {\n    let shellRendered = false;\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer\n        context={remixContext}\n        url={request.url}\n        abortDelay={ABORT_DELAY}\n      />,\n      {\n        onShellReady() {\n          shellRendered = true;\n          const body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              headers: responseHeaders,\n              status: responseStatusCode,\n            })\n          );\n\n          pipe(body);\n        },\n        onShellError(error: unknown) {\n          reject(error);\n        },\n        onError(error: unknown) {\n          responseStatusCode = 500;\n          // Log streaming rendering errors from inside the shell.  Don't log\n          // errors encountered during initial shell rendering since they'll\n          // reject and get logged in handleDocumentRequest.\n          if (shellRendered) {\n            console.error(error);\n          }\n        },\n      }\n    );\n\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type {\n  LinksFunction,\n  LoaderArgs,\n  V2_MetaFunction } from\n\"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useLoaderData } from\n\"@remix-run/react\";\nimport stylesheet from \"~/tailwind.css\";\nimport Layout from \"./components/layout\";\nimport { rootAuthLoader } from \"@clerk/remix/ssr.server\";\nimport { ClerkApp, ClerkCatchBoundary } from \"@clerk/remix\";\n\nexport const meta: V2_MetaFunction = () => {\n  return [\n  { title: \"Variant Classifications\" },\n  {\n    name: \"description\",\n    content: \"ACMG Variant Classifications Powered by Remix-run\"\n  },\n  { name: \"viewport\", content: \"width=device-width, initial-scale=1\" }];\n\n};\n\nexport const links: LinksFunction = () => [\n{ rel: \"stylesheet\", href: stylesheet }];\n\n\nexport async function loader(args: LoaderArgs) {\n  return rootAuthLoader(args, ({ request }) => {\n    const { userId } = request.auth;\n    if (!userId) return json(({} as any), { status: 401 });\n    return {\n      loadUser: true\n    };\n  });\n}\n\nfunction App() {\n  const data = useLoaderData<typeof loader>();\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <Layout>\n          <Outlet />\n          <ScrollRestoration />\n          <Scripts />\n          <LiveReload />\n        </Layout>\n      </body>\n    </html>);\n\n}\n// export function ErrorBoundary() {\n//   const error = useRouteError();\n//   if (isRouteErrorResponse(error)) {\n//     return (\n//       <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n//         <h1 className=\"text-2xl font-bold text-red-500\">Uh Oh!...</h1>\n//         <h1 className=\"text-2xl font-bold text-red-500\">\n//           Status:{error.status}\n//         </h1>\n//         <p className=\"text-xl\">{error.data.message}</p>\n//       </div>\n//     );\n//   }\n//   let errorMessage = \"unknown error\";\n//   if (error instanceof Error) {\n//     errorMessage = error.message;\n//   } else if (typeof error === \"string\") {\n//     errorMessage = error;\n//   }\n//   return (\n//     <div className=\"flex h-full w-full flex-col items-center justify-center text-center\">\n//       <h1 className=\"text-2xl font-bold\">uh Oh..</h1>\n//       <p className=\"text-xl\">something went wrong</p>\n//       <pre>{errorMessage}</pre>\n//     </div>\n//   );\n// }\n\nexport default ClerkApp(App);\n\nexport const CatchBoundary = ClerkCatchBoundary();", "import { UserButton, useAuth } from \"@clerk/remix\";\nimport { GitHubLogoIcon, TwitterLogoIcon } from \"@radix-ui/react-icons\";\nimport { Link } from \"@remix-run/react\";\n\nexport default function Layout({ children }: { children: React.ReactNode }) {\n  const { userId } = useAuth();\n  return (\n    <div className=\"flex min-h-screen flex-col bg-gray-900 p-1 text-gray-100\">\n      <header className=\"fixed left-0 right-0 top-0 z-10 flex flex-wrap items-center justify-around gap-2  bg-gray-800 p-1 text-gray-100 shadow-md \">\n        <p className=\"text-center text-xl font-bold md:text-2xl\">\n          ACMG Variant Classifications\n        </p>\n        <ul className=\"hidden items-center gap-1 md:flex \">\n          <li className=\"font-semibold\">\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li className=\"font-semibold\">\n            {\" \"}\n            <Link to=\"/criterion\">Criterion</Link>\n          </li>\n          <li className=\"font-semibold\">\n            {\" \"}\n            <Link to=\"variants\">Variants</Link>\n          </li>\n          <li className=\"font-semibold\">\n            <Link to=\"/calculator\">Calculator</Link>\n          </li>\n          <li className=\"font-semibold\">\n            <Link to=\"/kdb\">KDB</Link>\n          </li>\n\n          <li className=\"font-semibold\">\n            <Link to=\"/beta\">Beta</Link>\n          </li>\n        </ul>\n        {userId ? (\n          <div className=\"flex w-full justify-center md:w-fit\">\n            <UserButton />\n          </div>\n        ) : (\n          <div className=\"text-semibold flex gap-1\">\n            <Link to=\"/sign-in\">Sign In</Link>\n            <Link to=\"/sign-up\">Sign Up</Link>\n          </div>\n        )}\n      </header>\n      <main className=\"relative mt-20 flex-1 overflow-auto\">{children}</main>\n      <footer className=\"fixed bottom-0 left-0 right-0 z-50 flex h-10 items-center  justify-center bg-gray-800 text-gray-100 shadow-md\">\n        <ul className=\"flex items-center gap-1\">\n          <li className=\"flex flex-col  items-center gap-1 font-semibold\">\n            <GitHubLogoIcon />\n\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://github.com/Derick80\"\n            >\n              <p className=\"text-sm\">Github</p>\n            </a>\n          </li>\n          <li className=\"flex flex-col  items-center gap-1 font-semibold\">\n            <div className=\"flex gap-1\">\n              <p className=\"text-sm \">Copyright</p>\n              <p className=\"text-sm\"> {new Date().getFullYear()}</p>\n            </div>\n          </li>\n          <li className=\"flex flex-col  items-center gap-1 font-semibold\">\n            <TwitterLogoIcon />\n            <a\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              href=\"https://twitter.com/GeneticsStar\"\n            >\n              <p className=\"text-sm\">Twitter</p>\n            </a>\n          </li>\n        </ul>\n      </footer>\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { prisma } from \"~/server/prisma.server\";\nexport async function action({ request, params }: ActionArgs) {\n  const pdfId = params.pdfId;\n  console.log(\"pdfId\", pdfId);\n  const formData = await request.formData();\n  const abstract = formData.get(\"abstract\") as string;\n\n  const updated = await prisma.pdfLibrary.update({\n    where: {\n      id: pdfId,\n    },\n    data: {\n      abstract,\n    },\n  });\n\n  if (!updated) {\n    return json({ error: \"There was an error updating the abstract\" });\n  }\n  return redirect(`/kdb`);\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\n// Prevent multiple instances of Prisma Client in development\ndeclare global {\n  // eslint-disable-next-line no-var\n  var __db: PrismaClient | undefined;\n}\n\nlet prisma: PrismaClient;\n\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n  prisma.$connect();\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient();\n    global.__db.$connect();\n  }\n  prisma = global.__db;\n}\nexport { prisma };\n", "import type { LoaderArgs } from \"@remix-run/node\";\n\nimport { json, redirect } from \"@remix-run/node\";\nexport async function loader({ request, params }: LoaderArgs) {\n  return json({});\n}\n", "import { useAuth } from \"@clerk/remix\";\nimport type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport * as Label from \"@radix-ui/react-label\";\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useLoaderData } from \"@remix-run/react\";\nimport { z } from \"zod\";\nimport Button from \"~/components/button\";\nimport { validateAction } from \"~/utilities/utility-functions\";\nimport { prisma } from \"~/server/prisma.server\";\nexport async function loader({ request, params }: LoaderArgs) {\n  const searchParam = params.splat || \"\";\n\n  const formattedsearchParam = searchParam\n    .split(\" \")\n    .join(\"_\")\n    .split(\"_Data\")\n    .join(\"_data\")\n    .toLowerCase();\n\n  const criterion = await prisma.criterion.findMany({\n    where: {\n      OR: [\n        {\n          evidenceType: {\n            contains: formattedsearchParam,\n          },\n        },\n        {\n          id: {\n            contains: formattedsearchParam,\n          },\n        },\n      ],\n    },\n\n    orderBy: {\n      evidenceType: \"asc\",\n    },\n  });\n\n  return json({ criterion, searchParam });\n}\n\nconst schema = z.object({\n  criterionName: z.string(),\n  definition: z.string(),\n  evidenceType: z.string(),\n  example: z.string(),\n  criterionBaseWeight: z.string(),\n  caveat: z.string(),\n});\n\ntype ActionInput = z.infer<typeof schema>;\nexport async function action({ request, params }: ActionArgs) {\n  const criterionId = params.splat;\n  const userId = useAuth;\n  if (!userId) {\n    return redirect(\"/sign-in\");\n  }\n\n  const { formData, errors } = await validateAction({ request, schema });\n\n  if (errors) {\n    return json({ errors });\n  }\n  const {\n    criterionName,\n    definition,\n    evidenceType,\n    example,\n    criterionBaseWeight,\n    caveat,\n  } = formData as ActionInput;\n\n  const updated = await prisma.criterion.update({\n    where: {\n      id: criterionId,\n    },\n    data: {\n      label: criterionName,\n      definition,\n      evidenceType,\n      example,\n      criterionBaseWeight,\n      caveat,\n    },\n  });\n\n  if (updated) {\n    return redirect(\"/criterion\");\n  }\n}\nexport default function EditIndex() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2\">\n      <Form\n        className=\"flex w-full max-w-2xl flex-col gap-2 rounded-md border p-4  \"\n        method=\"post\"\n      >\n        <Label.Root\n          className=\"text-xl font-bold text-white\"\n          htmlFor=\"criterionName\"\n        >\n          Criterion Name\n        </Label.Root>\n        <input\n          className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n          type=\"text\"\n          name=\"criterionName\"\n          id=\"criterionName\"\n          placeholder=\"criterionName\"\n          defaultValue={data.criterion[0].label}\n        />\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"definition\">\n            Definition\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"definition\"\n            id=\"definition\"\n            placeholder=\"definition\"\n            defaultValue={data.criterion[0].definition}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"evidenceType\">\n            Evidence Type\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"evidenceType\"\n            id=\"evidenceType\"\n            placeholder=\"evidenceType\"\n            defaultValue={data.criterion[0].evidenceType}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"example\">\n            Example\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"example\"\n            id=\"example\"\n            placeholder=\"...example\"\n            defaultValue={data.criterion[0].example || \"\"}\n          />\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"criterionBaseWeight\">\n            Criterion Base Weight\n          </label>\n          <select\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            name=\"criterionBaseWeight\"\n            id=\"criterionBaseWeight\"\n            defaultValue={data.criterion[0].criterionBaseWeight}\n          >\n            <option value=\"P\">Supporting</option>\n            <option value=\"M\">Moderate</option>\n            <option value=\"S\">Strong</option>\n            <option value=\"VS\">Very Strong</option>\n            <option value=\"SA\">Stand Alone</option>\n          </select>\n        </div>\n        <div className=\"flex flex-col gap-2\">\n          <label className=\"text-xl font-bold\" htmlFor=\"caveat\">\n            Caveat\n          </label>\n          <input\n            className=\"rounded-md border-2 border-gray-400 p-2 text-black\"\n            type=\"text\"\n            name=\"caveat\"\n            id=\"caveat\"\n            defaultValue={data.criterion[0].caveat || \"\"}\n            onChange={(e) => {\n              console.log(e.target.value, \"e.target.value\");\n            }}\n          />\n        </div>\n        <Button variant=\"warning_filled\" size=\"large\" type=\"submit\">\n          Submit\n        </Button>\n      </Form>\n    </div>\n  );\n}\n", "import { type ButtonHTMLAttributes, type ReactNode } from \"react\";\nimport clsx from \"clsx\";\n\ntype buttonVariant =\n  | \"success\"\n  | \"warning\"\n  | \"danger\"\n  | \"primary\"\n  | \"ghost\"\n  | \"success_filled\"\n  | \"danger_filled\"\n  | \"primary_filled\"\n  | \"icon_filled\"\n  | \"icon_unfilled\"\n  | \"warning_filled\"\n  | \"icon_text_filled\"\n  | \"icon_text_unfilled\";\ntype buttonSize = \"base\" | \"large\" | \"small\" | \"tiny\";\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  size?: buttonSize;\n  variant?: buttonVariant;\n  children: ReactNode;\n}\n\nexport default function Button({\n  size = \"base\",\n  variant = \"primary_filled\",\n  children,\n  className,\n  ...props\n}: Props) {\n  const sizeClasses = {\n    base: \"px-4 py-2\",\n    large: \"px-6 py-3\",\n    small: \"px-2 py-1\",\n    tiny: \"px-1 py-1 text-xs\",\n  };\n  const variantClasses = {\n    success:\n      \"rounded border-2  border-green-500 dark:text-slate-50 hover:bg-green-600 hover:border-green-600 hover:text-slate-50 capitalize\",\n    warning:\n      \"rounded border-2 border-orange-200 dark:text-slate-50 hover:bg-orange-300 hover:border-orange-200 hover:text-slate-50 capitalize\",\n    danger:\n      \"rounded border-2 border-red-500 dark:text-slate-50 hover:bg-red-600 hover:border-red-600 hover:text-slate-50 capitalize\",\n    primary:\n      \"rounded border-2  border-blue-500 capitalize dark:text-slate-50 hover:bg-blue-600 hover:border-blue-600 hover:text-slate-50 capitalize\",\n    ghost: \"hover:bg-slate-50 hover:text-slate-500 capitalize hover:border-2\",\n    success_filled:\n      \"rounded border-2 bg-green-500 border-green-500 text-slate-50 hover:bg-green-600 hover:border-green-600 capitalize\",\n    warning_filled:\n      \"rounded border-2 bg-orange-500 border-orange-500  hover:bg-orange-300 hover:border-orange-300 capitalize \",\n    danger_filled:\n      \"rounded border-2 bg-red-500 border-red-500 text-slate-50 hover:bg-red-600 hover:border-red-600 capitalize\",\n    primary_filled:\n      \"rounded border-2 bg-blue-500 border-blue-500 text-slate-50 hover:bg-blue-600 hover:border-blue-600\",\n    icon_filled:\n      \"rounded border-2 bg-slate-500 border-slate-500 text-slate-50 hover:bg-slate-600 hover:border-slate-600\",\n    icon_unfilled:\n      \"font-semibold text-slate-500 hover:bg-slate-50 dark:text-slate-50\",\n    icon_text_filled:\n      \"rounded border-2 bg-slate-500 border-slate-500 text-slate-50 hover:bg-slate-600 hover:border-slate-600 capitalize flex flex-row items-center gap-2\",\n    icon_text_unfilled:\n      \"font-semibold text-slate-500 hover:bg-slate-900 capitalize dark:text-slate-50 flex flex-row items-center gap-2\",\n  };\n  return (\n    <button\n      className={clsx(\n        \"flex h-fit w-fit flex-row items-center gap-2 rounded-md text-xs font-medium transition-all disabled:cursor-not-allowed disabled:opacity-50 disabled:hover:border-transparent disabled:hover:bg-transparent disabled:hover:text-slate-500\",\n        sizeClasses[size],\n        variantClasses[variant],\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </button>\n  );\n}\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\nimport type { ZodError, ZodSchema } from \"zod\";\n\n// This function is used to get the data from the routes\n\nexport async function useMatchesData(\n  id: string\n): Promise<Record<string, string>> {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\n// This type and the next function are used to validate the input of the action functions in the routes\ntype ActionErrors<T> = Partial<Record<keyof T, string>>;\n\nexport async function validateAction<ActionInput>({\n  request,\n  schema,\n}: {\n  request: Request;\n  schema: ZodSchema;\n}) {\n  const body = Object.fromEntries(await request.formData()) as ActionInput;\n\n  try {\n    const formData = schema.parse(body) as ActionInput;\n    return { formData, errors: null };\n  } catch (error) {\n    console.log(error);\n\n    const errors = error as ZodError<ActionInput>;\n\n    return {\n      formData: body,\n      errors: errors.issues.reduce((acc: ActionErrors<ActionInput>, curr) => {\n        const key = curr.path[0] as keyof ActionInput;\n\n        acc[key] = curr.message;\n        return acc;\n      }, {}),\n    };\n  }\n}\n", "export default function CriterionHelpRoute() {\n  return (\n    <div\n      className=\"\nflex\"\n    >\n      <h3 className=\"text-2xl font-bold\">Criterion Help</h3>\n      <h3 className=\"text-xl font-bold\">Evidence Types</h3>\n      <div className=\"flex flex-col gap-2\"></div>\n    </div>\n  );\n}\n", "import { prisma } from \"~/server/prisma.server\";\n\nexport async function getFilteredGenes(whereFilter: string) {\n  return await prisma.gene.findMany({\n    where: {\n      symbol: {\n        contains: whereFilter,\n        mode: \"insensitive\",\n      },\n    },\n    include: {\n      lofMetrics: true,\n    },\n  });\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { prisma } from \"~/server/prisma.server\";\nimport { VariantSummaryCard } from \"./variants\";\nimport { variants } from \"~/acmg-functions-utilities/variants\";\nexport async function loader({ request, params }: LoaderArgs) {\n  const id = params.id;\n\n  if (!id) return redirect(\"/variants\");\n\n  const variant = await variants.find((variant) => variant.id === id);\n\n  if (!variant) return redirect(\"/variants\");\n  return json({ variant });\n}\n\nexport default function VariantRoute() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2 md:flex-row\">\n      <main className=\"flex flex-1 flex-col items-center gap-2 text-center\">\n        <h1 className=\"text-6xl font-bold\">Variant</h1>\n        <Link to={`/variants/${data.variant.id}/annotate`}>annotate</Link>\n        <VariantSummaryCard variant={data.variant} key={data.variant.id} />\n      </main>\n      <Outlet />\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { variants } from \"~/acmg-functions-utilities/variants\";\nimport { Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\nimport { DotsVerticalIcon, InfoCircledIcon } from \"@radix-ui/react-icons\";\nimport React, { useCallback } from \"react\";\nexport async function loader({ request, params }: LoaderArgs) {\n  return json({ variants });\n}\n\nexport default function VariantRoute() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen flex-col items-center justify-center gap-10 py-2\">\n      <main className=\"flex flex-1 flex-col items-center gap-2 px-20 text-center\">\n        <Outlet />\n        <h1 className=\"text-6xl font-bold\">Variant</h1>\n\n        {data.variants.map((variant) => (\n          <CardContainer key={variant.id} variant={variant} />\n        ))}\n      </main>\n    </div>\n  );\n}\n\nconst CardContainer = ({ variant }: { variant: VariantCardType }) => {\n  const [flip, setFlip] = React.useState(false);\n\n  const handleFlip = useCallback(() => {\n    setFlip((flip) => !flip);\n  }, []);\n\n  return (\n    <div\n      key={variant.id}\n      className=\"h-[350px] w-[450px] rounded-md border-2 bg-gray-800 p-2 \"\n    >\n      <div className=\"duration-800 preserve-3d relative h-full w-full transform-gpu items-center transition-transform\">\n        {flip ? (\n          <CardBack variant={variant} handleFlip={handleFlip} />\n        ) : (\n          <CardFront variant={variant} handleFlip={handleFlip} />\n        )}\n      </div>\n    </div>\n  );\n};\n\nfunction CardFront({\n  handleFlip,\n  variant,\n}: {\n  handleFlip: () => void;\n  variant: VariantCardType;\n}) {\n  return (\n    <div className=\"[ backface-visibility:hidden] absolute flex h-full w-full flex-col\">\n      <div className=\"flex h-auto w-full grow flex-col justify-between gap-3 overflow-hidden rounded-md border p-2\">\n        <Link to={`/variants/${variant.id}/annotate`}>\n          <h3 className=\"text-xl font-bold text-slate-50\">{variant.symbol}</h3>\n        </Link>\n        <div className=\"flex flex-row items-center justify-between gap-3\">\n          <div className=\"flex w-1/2 flex-col items-start gap-1\">\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                HGVS:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.hgvs}</p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                Protein:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.protein}</p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                cDNA:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.cdna}</p>\n            </span>\n          </div>\n          <div className=\"flex w-1/2 flex-col items-start gap-2 \">\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                Transcript:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.transcript}</p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                CPRA:\n              </p>\n              <p className=\"text-xs text-gray-500\">\n                chr{variant.chr}:{variant.pos}\n                {variant.ref}&gt;{variant.alt}\n              </p>\n            </span>\n            <span className=\"text-xs text-gray-500\">\n              <p className=\"text-left text-xs font-semibold text-slate-50\">\n                AA:\n              </p>\n              <p className=\"text-xs text-gray-500\">{variant.aa}</p>\n            </span>\n          </div>\n        </div>\n\n        <div className=\"flex flex-col gap-2\">\n          <p className=\"text-center text-xs font-semibold text-slate-50\">\n            Description\n          </p>\n          <p className=\"text-xs text-gray-500\">{variant.description}</p>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row justify-end gap-2\">\n        <button onClick={handleFlip}>\n          <InfoCircledIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction CardBack({\n  handleFlip,\n  variant,\n}: {\n  handleFlip: () => void;\n  variant: VariantCardType;\n}) {\n  return (\n    <div className=\"[ backface-visibility:hidden] absolute flex h-full w-full flex-col\">\n      <div className=\"flex h-auto w-full grow flex-col gap-1 overflow-hidden rounded-md border p-2\">\n        back\n      </div>\n      <div className=\"flex flex-row justify-end gap-2\">\n        <button onClick={handleFlip}>\n          <InfoCircledIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\nexport type VariantCardType = {\n  id: string;\n  symbol: string;\n  transcript: string;\n  hgvs: string;\n  protein: string;\n  cdna: string;\n  aa: string;\n  chr: string;\n  pos: string;\n  ref: string;\n  alt: string;\n  hgnc: string;\n  omim: string;\n  clinvar: string;\n  gnomad: string;\n  sift: string;\n  polyphen: string;\n  zygosity: string;\n  inheritance: string;\n  vaf: string;\n  description: string;\n};\n\nexport function VariantCardFront({ variant }: { variant: VariantCardType }) {\n  const [flip, setFlip] = React.useState(false);\n\n  return (\n    <div className=\"flex  w-full flex-col gap-1 rounded-md border-2 p-2\">\n      <div\n        className=\"flex h-[350px] w-[350px] flex-col gap-1 overflow-hidden rounded-md bg-transparent p-2\"\n        key={variant.id}\n      ></div>\n    </div>\n  );\n}\n\nexport function VariantCardBack({ variant }: { variant: VariantCardType }) {\n  return (\n    <div\n      className=\"flex h-auto w-full flex-col gap-1 overflow-hidden rounded-md border-red-500  p-2\"\n      key={variant.id}\n    >\n      <div className=\"flex flex-row items-center justify-between gap-2\">\n        <h5 className=\"text-xl font-bold text-gray-900\">{variant.symbol}</h5>\n\n        <span className=\"text-xs text-gray-500\">{variant.hgvs}</span>\n        <span className=\"text-xs text-gray-500\">{variant.protein}</span>\n      </div>\n      <div className=\"flex h-full flex-col gap-2\">\n        <div className=\"flex w-full flex-row items-center gap-2\">\n          <span className=\"text-xs text-gray-500\">\n            chr{variant.chr}:{variant.pos}\n            {variant.ref}&gt;{variant.alt}\n          </span>\n\n          <span className=\"text-xs text-gray-500\">{variant.gnomad}</span>\n        </div>\n        <div className=\"flex w-full flex-col gap-2\">\n          <div className=\"flex w-full flex-col gap-2\">\n            <div\n              className=\"flex flex-col gap-2\n               rounded-md p-1\n            \"\n            >\n              <h5 className=\"text-left text-xs font-semibold text-gray-500\">\n                inSilico\n              </h5>\n              <div className=\"flex flex-row gap-1\">\n                <p className=\"text-xs text-gray-500\">Combined:</p>\n                <p className=\"text-xs text-gray-500\">\n                  {sortInSilico({\n                    polyphen: variant.polyphen,\n                    sift: variant.sift,\n                  })}\n                </p>\n              </div>\n              <div className=\"flex flex-row gap-2\">\n                <p className=\"text-xs text-gray-500\">SIFT:</p>\n                <span className=\"text-xs text-gray-500\">{variant.sift}</span>\n                <p className=\"text-xs text-gray-500\">PolyPhen:</p>\n\n                <span className=\"text-xs text-gray-500\">\n                  {variant.polyphen}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"flex w-full flex-row gap-1\">\n            <h5 className=\"text-xs font-semibold text-gray-500\">\n              Inheritance:\n            </h5>\n            <span className=\"text-xs text-gray-500\">\n              {variant.inheritance === \"Autosomal Dominant\" ? \"A.D\" : \"A.R\"}\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport function VariantSummaryCard({ variant }: { variant: VariantCardType }) {\n  const [flip, setFlip] = React.useState(false);\n\n  return (\n    <div\n      className=\"flex h-auto w-full flex-col gap-1 overflow-hidden rounded-md border p-2\"\n      key={variant.id}\n    >\n      {flip ? (\n        <VariantCardBack variant={variant} />\n      ) : (\n        <VariantCardFront variant={variant} />\n      )}\n      <div className=\"flex flex-row justify-end gap-2\">\n        <DotsVerticalIcon />\n        <button onClick={() => setFlip(!flip)}>\n          <InfoCircledIcon />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction sortInSilico({ polyphen, sift }: { polyphen: string; sift: string }) {\n  const phen = polyphen.toLowerCase();\n  const sifted = sift.toLowerCase();\n\n  if (phen === \"benign\" && sift === \"benign\") {\n    return \"Benign\";\n  } else if (phen === \"benign\" && sifted === \"deleterious\") {\n    return \"Likely Benign\";\n  } else if (phen === \"possibly damaging\" && sifted === \"tolerated\") {\n    return \"Likely Benign\";\n  } else if (phen === \"possibly damaging\" && sifted === \"deleterious\") {\n    return \"Likely Pathogenic\";\n  } else if (phen === \"probably damaging\" && sifted === \"tolerated\") {\n    return \"Likely Pathogenic\";\n  } else if (phen === \"probably damaging\" && sifted === \"deleterious\") {\n    return \"Pathogenic\";\n  } else {\n    return \"Unknown\";\n  }\n}\n", "export const variants = [\n  {\n    id: \"1\",\n    symbol: \"BRCA2\",\n    transcript: \"NM_000059.3\",\n    hgvs: \"NM_000059.3:c.68_69del\",\n    protein: \"NP_000050.2:p.Glu23Valfs*17\",\n    cdna: \"c.68_69del\",\n    aa: \"p.Glu23Valfs*17\",\n    chr: \"13\",\n    pos: \"32315474\",\n    ref: \"CT\",\n    alt: \"C\",\n    hgnc: \"HGNC:1101\",\n    omim: \"OMIM:600185\",\n    clinvar: \"RCV000000000\",\n    gnomad: \"0.0000000000\",\n    sift: \"Deleterious\",\n    polyphen: \"Probably Damaging\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Dominant\",\n    vaf: \"0.5\",\n    description: \"This is a brca2 variant description\",\n  },\n  {\n    id: \"2\",\n    symbol: \"EGFR\",\n    transcript: \"NM_005228.4\",\n    hgvs: \"NM_005228.4:c.2155G>T\",\n    protein: \"NP_005219.2:p.Glu719*\",\n    cdna: \"c.2155G>T\",\n    aa: \"p.Glu719*\",\n    chr: \"7\",\n    pos: \"55249071\",\n    ref: \"G\",\n    alt: \"T\",\n    hgnc: \"HGNC:3236\",\n    omim: \"OMIM:131550\",\n    clinvar: \"RCV000000000\",\n    gnomad: \"0.0000000000\",\n    sift: \"Deleterious\",\n    polyphen: \"Probably Damaging\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Dominant\",\n    vaf: \"0.5\",\n    descriptions: \"This is a EGFR variant description\",\n  },\n  {\n    id: \"3\",\n    symbol: \"RYR1\",\n    transcript: \"NM_000540.3\",\n    hgvs: \"NM_000540.2(RYR1):c.1202G>A\",\n    protein: \"NP_001036188.1:p.Arg401His\",\n    cdna: \"c.1202G>A\",\n    aa: \"pp.Arg401His\",\n    chr: \"19\",\n    pos: \"38942483\",\n    ref: \"G\",\n    alt: \"A\",\n    hgnc: \"HGNC:10479\",\n    omim: \"OMIM:180901\",\n    clinvar: \"133030\",\n    gnomad: \"0.0000000000\",\n    sift: \"Deleterious\",\n    polyphen: \"Probably Damaging\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Resessive\",\n    vaf: \"0.5\",\n    description: \"This is a RYR1 variant description\",\n  },\n  {\n    id: \"4\",\n    symbol: \"TP53\",\n    transcript: \"NM_000546.6\",\n    hgvs: \"NM_000546.5:c.935C>G\",\n    protein: \"NP_000537.3:p.Thr312Ser\",\n    cdna: \"c.935C>G\",\n    aa: \"p.Thr312Ser\",\n    chr: \"17\",\n    pos: \"7576911\",\n    ref: \"C\",\n    alt: \"G\",\n    hgnc: \"HGNC:11998\",\n    omim: \"OMIM:191170\",\n    clinvar: \"RCV000000000\",\n    gnomad: \"0.0000000000\",\n    sift: \"benign\",\n    polyphen: \"benign\",\n    zygosity: \"Heterozygous\",\n    inheritance: \"Autosomal Dominant\",\n    vaf: \"0.5\",\n    description: \"This is a TP53 variant description\",\n  },\n];\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { cloudinaryPdfUpload } from \"~/server/cloudinary.server\";\nexport async function action({ request, params }: ActionArgs) {\n  const pdfUrl = await cloudinaryPdfUpload(request);\n\n  console.log(\"pdfUrl from action function\", pdfUrl);\n\n  return json({ pdfUrl });\n}\n", "import cloudinary from \"cloudinary\";\nimport type { UploadHandler } from \"@remix-run/node\";\nimport { unstable_parseMultipartFormData } from \"@remix-run/node\";\nimport {\n  unstable_composeUploadHandlers,\n  unstable_createMemoryUploadHandler,\n  writeAsyncIterableToWritable,\n} from \"@remix-run/node\";\n\ncloudinary.v2.config({\n  cloud_name: process.env.CLOUDINARY_CLOUD_NAME,\n  api_key: process.env.CLOUDINARY_API_KEY,\n  api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\nexport async function uploadPdfToCloudinary(\n  data: AsyncIterable<Uint8Array>,\n  filename: string\n) {\n  const uploadPromise = new Promise(async (resolve, reject) => {\n    const uploadStream = cloudinary.v2.uploader.upload_stream(\n      {\n        cloud_name: \"dch-photo\",\n        folder: \"alleles_pdf\",\n        use_filename: true,\n        unique_filename: false,\n        public_id: filename,\n      },\n      (error, result) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n        resolve(result);\n      }\n    );\n    await writeAsyncIterableToWritable(data, uploadStream);\n  });\n  return uploadPromise;\n}\n\nexport const pdfUploadHandler: UploadHandler = unstable_composeUploadHandlers(\n  async ({ name, data, filename }) => {\n    if (name !== \"pdfUrl\") {\n      return undefined;\n    }\n    // use the filename to create a new file in cloudinary but not the file extension\n\n    const updatedFileName =\n      filename?.replace(/\\.[^/.]+$/, \"\") || \"no_file_name\";\n    console.log(\"updatedFileName from cloudinary server file\", updatedFileName);\n    const uploadedPdf = (await uploadPdfToCloudinary(\n      data,\n      updatedFileName\n    )) as string;\n    console.log(\"uploadedPdf from cloudinary server file\", uploadedPdf);\n\n    // @ts-ignore\n    // this ignore came from the source i followed.  I think I kinda solved this by adding the type to the uploadImage function\n\n    return uploadedPdf.secure_url;\n  },\n  unstable_createMemoryUploadHandler()\n);\n\nexport async function cloudinaryPdfUpload(request: Request) {\n  const formData = await unstable_parseMultipartFormData(\n    request,\n    pdfUploadHandler\n  );\n  console.log(\n    Object.fromEntries(formData),\n    \"formData from cloudinary server file\"\n  );\n\n  const pdfUrl = formData.get(\"pdfUrl\" || \"\") as string;\n  return pdfUrl;\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\nimport z from \"zod\";\nimport { zx } from \"zodix\";\nimport { getPdfLibraryItem } from \"~/server/pdf.server\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  console.log(\"params\", params);\n\n  const { pdfId } = zx.parseParams(params, {\n    pdfId: z.string().nonempty(),\n  });\n  const pdfItem = await getPdfLibraryItem(pdfId);\n  if (!pdfItem) {\n    throw new Error(\"pdfItem not found\");\n  }\n  console.log(pdfItem.abstract as string, \"pdfItem.abstract\");\n\n  const tst = JSON.stringify(pdfItem.abstract, null, 2);\n  console.log(\"tst\", tst);\n\n  return json({ pdfItem });\n}\n\nexport default function KdbPdfItemRoute() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"mt-15 mb-10 flex h-full w-full flex-row items-center justify-center\">\n      {<div dangerouslySetInnerHTML={{ __html: data.pdfItem.abstract }} />}\n      <details>\n        <pre className=\"whitespace-break-spaces\">\n          {JSON.stringify(data.pdfItem.abstract, null, 2)}\n        </pre>\n      </details>\n    </div>\n  );\n}\n", "import type { Prisma } from \"@prisma/client\";\nimport { prisma } from \"./prisma.server\";\n//  extract PMCiD from last part of url\nexport async function getPMSearchTerm(url: string) {\n  console.log(url, \"url from getPMSearchTerm\");\n\n  const urlParts = url.split(\"/\");\n  const lastPart = urlParts[urlParts.length - 1];\n  const pmcId = lastPart.split(\".\")[0];\n  return pmcId;\n}\n// First fetch article data from pubmed using the pmid and then fetch the abstract using the pmcId\n// export async function getPmidData(pmid: string) {\n//   // create a url to fetch data associated with the pmid from pubmed\n//   const url = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=${pmid}&retmode=json`;\n//   //   below is a url for testing purposes. It will return a complete object with all the data\n//   //   const url = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/esummary.fcgi?db=pubmed&id=32720330&retmode=json`;\n//   const response = await fetch(url);\n//   const jsonResponse = await response.json();\n\n//   const dataToTransform = Object.values(\n//     jsonResponse.result\n//   ).flat() as PubmedItem[];\n//   // transform the data into a format that is easier to work with in the app and get rid of any data that is not needed\n//   const data = dataToTransform\n//     .filter((item) => typeof item !== \"string\")\n//     .map((item: PubmedItem) => {\n//       return {\n//         pmid: item.uid,\n//         title: item.title,\n//         journal: item.fulljournalname,\n//         pubdate: item.pubdate,\n//         pmcId: item.articleids\n//           .filter((id) => id.idtype === \"pmc\")\n//           .map((id) => id.value)[0],\n//         firstAuthor: item.sortfirstauthor,\n//         lastAuthor: item.lastauthor,\n//         doi: item.articleids\n//           .filter((id) => id.idtype === \"doi\")\n//           .map((id) => id.value)[0],\n\n//         authors: item.authors\n//           .map((author) => {\n//             return {\n//               name: author.name,\n//             };\n//           })\n//           .flat(),\n//       };\n//     });\n\n//     const pmcid = data[0].pmcId;\n//   // Build a url to fetch the abstract from pubmed using the pmcId derived from the pmid data\n\n//   const abstractUrl = `https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pmc&id=${pmcid}&retmode=xml&rettype=abstract`;\n//   console.log(abstractUrl, \"abstractUrl from getPmidData\");\n\n//   const abstractResponse = await fetch(abstractUrl);\n//   const abstractText = await abstractResponse.text();\n//   console.table(abstractText);\n//   // console.log(abstractText, \"abstractText from getPmidData\");\n//   const reg = new RegExp(\"<abstract>(.*?)</abstract>\", \"g\");\n//   const stuff = abstractText.match(reg);\n//   const stuffContent = stuff?[1] : \"\";\n//   const stuffToArray = Object.values(stuffContent);\n\n//   console.log(stuffToArray, \"stuff\");\n//   const parser = new XMLParser();\n//   const abstractObject = await parser.parse(abstractText);\n//   //   console.log(abstractObject, \"abstractObject from getPmidData\");\n//   const abstractObjectToArray = Object.entries(abstractObject)\n//     .flat()\n//     .filter((item) => typeof item !== \"string\");\n\n//   //   console.log(abstractObjectToArray, \"abstractObjectToArray from getPmidData\");\n\n//   const abstract = abstractObjectToArray\n//     .map((item: any) => item[\"article\"])\n//     .map((item: any) => item.front[\"article-meta\"][\"abstract\"][\"p\"][\"#text\"])\n//     .flat()\n//     .toString()\n//     .replace(/&#x\\d+;/g, \"\");\n//   return { data, abstract };\n// }\n\nexport async function createPdfEntry(data: Prisma.PdfLibraryCreateInput) {\n  const alreadyExists = await prisma.pdfLibrary.findUnique({\n    where: {\n      internalPdfUrl: data.internalPdfUrl,\n    },\n  });\n  if (alreadyExists) {\n    return;\n  }\n  const pdfEntry = await prisma.pdfLibrary.create({\n    data,\n  });\n  return pdfEntry;\n}\n\nexport async function getPdfLibrary({\n  whereFilter,\n}: {\n  whereFilter: Prisma.PdfLibraryWhereInput;\n}) {\n  const pdfLibrary = await prisma.pdfLibrary.findMany({\n    where: {\n      ...whereFilter,\n    },\n    orderBy: {\n      pubYear: \"desc\",\n    },\n  });\n  return pdfLibrary;\n}\n\nexport async function getPdfLibraryItem(id: string) {\n  const pdfLibraryItem = await prisma.pdfLibrary.findUnique({\n    where: {\n      id,\n    },\n  });\n  return pdfLibraryItem;\n}\n\n// Semantic Scholor API\n// https://api.semanticscholar.org/api-docs/graph#tag/Paper-Data/operation/get_graph_get_paper\n\n//\n// https://api.semanticscholar.org/graph/v1/paper/PMID:30191630?fields=abstract,authors,externalIds,fieldsOfStudy,influentialCitationCount,paperId,references,title,url,venue,year\nexport async function getSemanticScholorArticleDetails(pmid: string) {\n  const typeofId = pmid.startsWith(\"PMC\") ? \"pmcid\" : \"pmid\";\n\n  const fields =\n    \"abstract,authors,externalIds,fieldsOfStudy,influentialCitationCount,paperId,title,url,venue,year\";\n\n  const builtUrl = `https://api.semanticscholar.org/graph/v1/paper/${typeofId}:${pmid}?fields=${fields}`;\n  console.log(builtUrl, \"builtUrl from getSemanticScholorArticleDetails\");\n\n  const response = await fetch(builtUrl);\n  const data = (await response.json()) as Root;\n\n  const dataToReturn = {\n    semanticScholarId: data.paperId,\n    semanticScholarUrl: data.url,\n    title: data.title,\n    abstract: data.abstract || \"\",\n    authors: data.authors.map((author: Author) => author.name),\n    journal: data.venue,\n    pubYear: data.year,\n    pmid: data.externalIds.PubMed,\n    pmcId: data.externalIds.PubMedCentral || \"\",\n    doi: data.externalIds.DOI,\n  };\n  console.log(\n    dataToReturn,\n    \"dataToReturn from getSemanticScholorArticleDetails\"\n  );\n\n  return dataToReturn as DataToReturn;\n}\n\n// Semantic Scholor API Types\nexport interface Root {\n  paperId: string;\n  externalIds: ExternalIds;\n  url: string;\n  title: string;\n  abstract: any;\n  venue: string;\n  year: number;\n  influentialCitationCount: number;\n  fieldsOfStudy: string[];\n  authors: Author[];\n}\n\nexport interface ExternalIds {\n  PubMedCentral: string;\n  MAG: string;\n  DOI: string;\n  CorpusId: number;\n  PubMed: string;\n}\n\nexport interface Author {\n  authorId: string;\n  name: string;\n}\nexport interface DataToReturn {\n  semanticScholarId: string;\n  semanticScholarUrl: string;\n  title: string;\n  abstract: string;\n  authors: string[];\n  journal: string;\n  pubYear: number;\n  pmid: string;\n  pmcId: string;\n  doi: string;\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { prisma } from \"~/server/prisma.server\";\nimport React from \"react\";\nimport ClassificationComponent from \"~/components/criteria-components/classification-component\";\nimport CustomCriteriaCheckBox from \"~/components/criteria-components/my-custom-radix-checkbox\";\nimport CustomCriteriaSelect from \"~/components/criteria-components/my-custom-select\";\nimport Documentation from \"./calculator-documentation\";\n\nexport type ListCriteriaUsed = {\n  evidenceType: string;\n  label: string;\n  weight: number;\n}[];\n\nexport type ClassificatonScore = number;\nexport async function loader({ request, params }: LoaderArgs) {\n  const criteria = await prisma.criterion.findMany();\n\n  const functionalData = criteria.filter((item) => {\n    return item.evidenceType === \"Functional Data\";\n  });\n  const allOtherData = criteria.filter((item) => {\n    return item.evidenceType !== \"Functional Data\";\n  });\n\n  //  I want to group the criteria by evidenceType so that updating the state array can be done in complex ways\n\n  const allDataByEvidenceType = allOtherData.reduce((acc, item) => {\n    const { evidenceType, label, id, definition, weight } = item;\n    if (!acc[evidenceType]) {\n      acc[evidenceType] = [];\n    }\n    acc[evidenceType].push({ label, id, evidenceType, definition, weight });\n    return acc;\n  }, {} as Record<string, { label: string; id: string; evidenceType: string; definition: string; weight: number }[]>);\n\n  // extract the functional data from the byEvidenceType object\n\n  return json({ functionalData, allDataByEvidenceType, criteria });\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  return json({\n    message: \"success\",\n  });\n}\n\nexport default function CalculatorRoute() {\n  const { functionalData, criteria, allDataByEvidenceType } =\n    useLoaderData<typeof loader>();\n  const [listCriteriaUsed, setListCriteriaUsed] =\n    React.useState<ListCriteriaUsed>([]);\n\n  const [classificationScore, setClassificationScore] =\n    React.useState<ClassificatonScore>(0);\n  const [variantClassification, setVariantClassification] =\n    React.useState<string>(\"\");\n\n  const calculatorRef = React.useRef<HTMLDivElement>(null);\n  const handleListCriteriaUsed = (\n    value: string,\n    evidenceType: string,\n    weight: number\n  ) => {\n    const index = listCriteriaUsed.findIndex((item) => {\n      return item.evidenceType === evidenceType;\n    });\n    if (index === -1) {\n      setListCriteriaUsed((prev) => {\n        return [...prev, { evidenceType, label: value, weight }];\n      });\n    } else {\n      setListCriteriaUsed((prev) => {\n        return prev.map((item) => {\n          if (item.evidenceType === evidenceType) {\n            return { evidenceType, label: value, weight };\n          }\n          return item;\n        });\n      });\n    }\n  };\n  const handleCheckBoxListCriteriaUsed = (\n    value: string,\n    evidenceType: string,\n    weight: number\n  ) => {\n    const isPresent = listCriteriaUsed.some((item) => {\n      return item.label === value;\n    });\n    if (isPresent) {\n      setListCriteriaUsed((prev) => {\n        return prev.filter((item) => {\n          return item.label !== value;\n        });\n      });\n    } else {\n      setListCriteriaUsed((prev) => {\n        return [...prev, { evidenceType, label: value, weight }];\n      });\n    }\n  };\n\n  return (\n    <div className=\"itesms-center justify-cesnter mb-10 mt-10 flex flex-col gap-2 md:flex-row\">\n      <Form method=\"post\" className=\"w-full rounded-md border-2 p-1 md:w-1/3 \">\n        <CustomCriteriaSelect\n          handleListCriteriaUsed={handleListCriteriaUsed}\n          data={allDataByEvidenceType}\n          options={criteria}\n        />\n\n        <CustomCriteriaCheckBox\n          handleCheckBoxListCriteriaUsed={handleCheckBoxListCriteriaUsed}\n          data={functionalData}\n        />\n        <button type=\"submit\">Submit</button>\n      </Form>\n      <ClassificationComponent\n        data={listCriteriaUsed}\n        setClassificationScore={setClassificationScore}\n        setVariantClassification={setVariantClassification}\n      />\n      <Documentation />\n      <Outlet />\n    </div>\n  );\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from \"react\";\nimport { extractFirstTwoLetters } from \"~/acmg-functions-utilities/acmg-criteria\";\nimport { convertToNumbers } from \"~/acmg-functions-utilities/acmg-criteria\";\nimport type { ListCriteriaUsed } from \"~/routes/calculator/route\";\n\ntype Props = {\n  data: ListCriteriaUsed;\n  setClassificationScore: React.Dispatch<React.SetStateAction<number>>;\n  setVariantClassification: React.Dispatch<React.SetStateAction<string>>;\n};\nexport default function ClassificationComponent({\n  data,\n  setClassificationScore,\n  setVariantClassification,\n}: Props) {\n  // calculate the subtotal of the weights of the criteria used\n  const [subtotals, setSubtotals] = React.useState<number>(0);\n  const subtotal = data.reduce((acc, item) => {\n    return acc + item.weight;\n  }, 0);\n\n  const criteriaBreakdown = extractFirstTwoLetters(\n    data.map((item) => {\n      return item.label;\n    })\n  );\n\n  const transformed = convertToNumbers(criteriaBreakdown);\n\n  React.useEffect(() => {\n    setClassificationScore(subtotal);\n    setSubtotals(subtotal);\n    setVariantClassification(transformed.classification);\n  }, [subtotal, setClassificationScore, setVariantClassification, transformed]);\n\n  return (\n    <div className=\"order-first flex w-full flex-col gap-2 rounded-md border-2 p-1 md:order-none md:w-1/3\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"text-white\">Classification Score</div>\n        <div className=\"text-white\">{subtotals}</div>\n      </div>\n\n      <div className=\"flex flex-col items-center justify-between\">\n        <div className=\"text-white\">Variant Classification</div>\n        <div className=\"text-white\">{transformed.classification}</div>\n      </div>\n    </div>\n  );\n}\n", "/* eslint-disable @typescript-eslint/no-unused-vars */\n// consts.ts is my reference for this file\nimport type { Criterion as PrismaCriterion } from \"@prisma/client\";\nimport type { SerializeFrom } from \"@remix-run/node\";\n\nexport type Criterion = SerializeFrom<PrismaCriterion>;\n\n// define an object that will help convert outdated acmg strength to updated acmg strength\n\nexport const specialCases: string[] = [\n  \"PM2_Supporting\",\n  \"PVS1_Supporting\",\n  \"PVS1_Strong\",\n  \"PVS1_Moderate\",\n];\n\n//  define a mapping from the special cases to their corresponding values\nexport const specialConversion: { [key: string]: string } = {\n  PM2_Supporting: \"P\",\n  PVS1_Supporting: \"P\",\n  PVS1_Strong: \"S\",\n  PVS1_Moderate: \"M\",\n};\n\n//   define a function that will extract the first two letters of the acmg strength\nexport const extractFirstTwoLetters = (arr: string[]) => {\n  const firstTwoLetters: string[] = [];\n  return arr.map((item) => {\n    const firstLetter = item[0];\n\n    let firstTwoChars: string;\n\n    const underScoreIndex = item.indexOf(\"_\");\n    if (underScoreIndex > -1 && specialCases.includes(item)) {\n      firstTwoChars = item[0] + specialConversion[item];\n    } else {\n      firstTwoChars = item.substring(0, 2);\n    }\n    firstTwoLetters.push(firstTwoChars);\n    return firstTwoChars;\n  });\n};\n// Define a mapping from strength letters to their corresponding values\nexport const strengthValues: { [key: string]: number } = {\n  V: 5,\n  A: 5,\n  S: 4,\n  M: 2,\n  P: 1,\n};\n\n//   Define a function to convert the output to numbers that correspond to the strength values\nexport function convertToNumbers(arr: string[]) {\n  const strengthValues: { [key: string]: number } = {\n    V: 5,\n    A: 5,\n    S: 4,\n    M: 2,\n    P: 1,\n  };\n\n  const transformedValues = arr.map((item) => {\n    const firstLetter = item[0];\n\n    const secondLetter = item[1];\n\n    const secondNumber = strengthValues[secondLetter];\n    const transformedNumber =\n      firstLetter === \"B\" ? -secondNumber : secondNumber;\n    return transformedNumber;\n  });\n  const totalSum = transformedValues.reduce((sum, value) => sum + value, 0);\n\n  interface Classification {\n    totalSum: number;\n    classification: string;\n  }\n  const obj = {} as Classification;\n\n  if (totalSum <= -7) {\n    obj.classification = \"Benign\";\n  } else if (totalSum >= -6 && totalSum <= -1) {\n    obj.classification = \"Likely Benign\";\n  } else if (totalSum >= 0 && totalSum <= 5) {\n    obj.classification = \"Variant of Uncertain Significance\";\n  } else if (totalSum >= 6 && totalSum <= 10) {\n    obj.classification = \"Likely Pathogenic\";\n  } else if (totalSum > 10) {\n    obj.classification = \"Pathogenic\";\n  } else {\n    obj.classification = \"Error\";\n  }\n\n  obj.totalSum = totalSum;\n  return obj;\n}\n", "import { ChevronUpIcon, ChevronDownIcon } from \"@radix-ui/react-icons\";\nimport React from \"react\";\nimport type { Criterion } from \"~/acmg-functions-utilities/acmg-criteria\";\nimport * as Checkbox from \"@radix-ui/react-checkbox\";\nimport { CheckIcon } from \"@radix-ui/react-icons\";\nimport { Label } from \"@radix-ui/react-label\";\nexport default function CustomCriteriaCheckBox({\n  data,\n  handleCheckBoxListCriteriaUsed,\n}: {\n  data: Criterion[];\n  handleCheckBoxListCriteriaUsed: (\n    value: string,\n    evidenceType: string,\n    weight: number\n  ) => void;\n}) {\n  const [open, setOpen] = React.useState(false);\n\n  return (\n    <div className=\"flex w-full flex-col gap-2 rounded-md border-2 p-1\">\n      <div className=\"flex justify-between gap-2\">\n        <div>{data[0].evidenceType}</div>\n        <button\n          type=\"button\"\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </button>\n      </div>\n      {open &&\n        data.map((item) => {\n          return (\n            <Checkbox.Root\n              className=\"outlisne-none flex items-center  justify-center rounded-[4px] bg-slate-300 text-black shadow-[0_2px_10px] shadow-black hover:bg-blue-50 focus:shadow-[0_0_0_2px_black]\"\n              id={item.label}\n              key={item.label}\n              name={item.evidenceType}\n              onCheckedChange={(e) => {\n                handleCheckBoxListCriteriaUsed(\n                  item.label,\n                  item.evidenceType,\n                  item.weight\n                );\n              }}\n              value={item.label}\n            >\n              <Checkbox.Indicator className=\"text-teal-400\" id={item.label}>\n                <CheckIcon />\n              </Checkbox.Indicator>\n              <Label className=\"pl-[15px] text-[15px] leading-none text-black\">\n                <p className=\"p-1\">{item.label}</p>\n                <p className=\"text-xs\">{item.definition}</p>\n              </Label>\n            </Checkbox.Root>\n          );\n        })}\n    </div>\n  );\n}\n", "import { Label } from \"@radix-ui/react-label\";\nimport React from \"react\";\nimport * as Select from \"@radix-ui/react-select\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\";\ntype Props = {\n  data: {\n    [key: string]: {\n      id: string;\n      evidenceType: string;\n      label: string;\n      definition: string;\n      weight: number;\n    }[];\n  };\n\n  options: {\n    id: string;\n    evidenceType: string;\n    label: string;\n    definition: string;\n    weight: number;\n  }[];\n  handleListCriteriaUsed: (\n    value: string,\n    evidenceType: string,\n    weight: number\n  ) => void;\n};\n\nexport default function CustomCriteriaSelect({\n  data,\n  options,\n  handleListCriteriaUsed,\n}: Props) {\n  return (\n    <div className=\"flex w-full flex-col\">\n      {Object.entries(data).map((key, index) => {\n        const dataagain = options.filter(\n          (item) => item.evidenceType === key[0]\n        );\n\n        return (\n          <div key={key[0]}>\n            <Label key={key[0]} className=\"text-white\">\n              {key[0]}\n            </Label>\n\n            <div\n              key={key[0]}\n              className=\"w-fsull flex items-center justify-between rounded-md border p-2 text-white\"\n            >\n              <Select.Root\n                name={key[0]}\n                onValueChange={(value) => [\n                  handleListCriteriaUsed(\n                    value,\n                    key[0],\n                    dataagain\n                      .filter(\n                        (item: {\n                          id: string;\n                          evidenceType: string;\n                          label: string;\n                          definition: string;\n                          weight: number;\n                        }) =>\n                          item.label === value && item.evidenceType === key[0]\n                      )\n                      .map(\n                        (item: {\n                          id: string;\n                          evidenceType: string;\n                          label: string;\n                          definition: string;\n                          weight: number;\n                        }) => item.weight\n                      )[0]\n                  ),\n                ]}\n              >\n                <Select.Trigger className=\"flex w-full items-center justify-between rounded-md  p-2 text-white\">\n                  <Select.Value\n                    placeholder=\"Select\"\n                    className=\"text-black\"\n                  ></Select.Value>\n                  <ChevronDownIcon />\n                </Select.Trigger>\n                <Select.Content className=\"overflow-hidden rounded-md bg-white shadow-[0px_10px_38px_-10px_rgba(22,_23,_24,_0.35),0px_10px_20px_-15px_rgba(22,_23,_24,_0.2)]\">\n                  <Select.ScrollUpButton className=\"text-violet11 flex h-[25px] cursor-default items-center justify-center bg-white\">\n                    <ChevronUpIcon />\n                  </Select.ScrollUpButton>\n                  <Select.Viewport className=\"p-[5px]\">\n                    {options\n                      .filter((item) => item.evidenceType === key[0])\n                      .map((item) => {\n                        return (\n                          <Select.Item key={item.id} value={item.label}>\n                            <p className=\"text-xs text-black\">{item.label}</p>\n                            <p className=\"text-xs text-black\">\n                              {item.definition}\n                            </p>\n                            <Select.ItemText>{item.label}</Select.ItemText>\n                          </Select.Item>\n                        );\n                      })}\n                  </Select.Viewport>\n                </Select.Content>\n              </Select.Root>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n", "export default function BayesTable() {\n  return (\n    <div className=\"flex w-1/2 flex-col gap-2\">\n      <table className=\"w-1/2 text-sm\">\n        <thead>\n          <tr>\n            <th className=\"text-left\">Category</th>\n\n            <th className=\"text-left\">Total Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td className=\"text-left\">Pathogenic</td>\n            <td className=\"text-left\"> &gt;10</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\"> Likely Pathogenic</td>\n            <td className=\"text-left\"> 6-9</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\">Uncertain Significance</td>\n            <td className=\"text-left\">0-5</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\">Likely Benign</td>\n            <td className=\"text-left\"> -1-6</td>\n          </tr>\n          <tr>\n            <td className=\"text-left\">Benign</td>\n            <td className=\"text-left\">\n              {\" \"}\n              {`>=`}\n              -7\n            </td>\n          </tr>\n          <tr></tr>\n        </tbody>\n        <p className=\"text-xs text-gray-500\">\n          *Note: This is a beta version of the ACMG classification tool. Please\n          use with caution. Based on Tavtigian 2020\n        </p>\n      </table>\n    </div>\n  );\n}\n", "import BayesTable from \"~/components/bayes-table\";\n\nexport default function Documentation() {\n  return (\n    <div className=\"flex w-full flex-col gap-2 rounded-md border-2 md:w-1/3\">\n      <h1 className=\"text-2xl font-bold\">Documentation</h1>\n      <p className=\"text-gray-500\">\n        This is a work in progress. Please check back later.\n      </p>\n      <h2 className=\"text-xl font-bold\">Known Issues + Future Fixes</h2>\n      <p className=\"text-gray-500\">\n        Cannot unselect criteria. This is a known issue and will be fixed in the\n        future.\n      </p>\n      <p>\n        Form isn't hooked up to an action yet but was built on a route that\n        could recieve form data\n      </p>\n      <p>\n        Some UI/layout issues including large dropdown menus, lack of actual\n        checkboxes in the checkbox component\n      </p>\n      <h3 className=\"text-xl font-bold\">ACMG Calculator</h3>\n      <p className=\"text-gray-500\">\n        This implementation of the calculator is based on the 2015 ACMG/AMP\n        guidelines and Tavtigian paper using Bayes scores\n      </p>\n      <p className=\"text-gray-500\">\n        I followed most of the rules but modified the scoring such that a single\n        very strong piece of evidence can not be enough to classify a variant as\n        pathogenic. That means I took the recommended score of 8 and reduced it\n        2 5. This means that a very strong piece of evidence requires at least 1\n        supporting piece of evidence to be classified as pathogenic. I think\n        this is in line with the spirit of the guidelines.\n      </p>\n      <BayesTable />\n      <p className=\"text-gray-500\">Generating Criterion</p>\n\n      <h3 className=\"text-xl font-bold\">Criterion</h3>\n      <p className=\"text-gray-500\">\n        The ACMG/AMP guidelines are broken down into 28 individual criteria.\n        Each Criterion is assigned an evidenceType Group of which there are 8\n      </p>\n      <h3 className=\"text-xl font-bold\">Variants</h3>\n      <p className=\"text-gray-500\">\n        Variants are the individual mutations that are being evaluated. Each\n        variant is assigned a classification based on the criteria.\n      </p>\n    </div>\n  );\n}\n", "import type { Criterion } from \"@prisma/client\";\nimport { ChevronDownIcon, ChevronUpIcon } from \"@radix-ui/react-icons\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Link, Outlet, useLoaderData, useMatches } from \"@remix-run/react\";\nimport React from \"react\";\nimport { prisma } from \"~/server/prisma.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const searchParam =\n    new URLSearchParams(request.url.split(\"?\")[1]).get(\"searchParam\") || \"\";\n  console.log(searchParam, \"searchParam\");\n\n  const criterion = await prisma.criterion.findMany({\n    where: {\n      evidenceType: {\n        contains: searchParam,\n      },\n    },\n    orderBy: {\n      evidenceType: \"asc\",\n    },\n  });\n\n  // reduce to evidenceType object with benign and pathogenic arrays\n\n  // generate a list of unique column names\n  const columnNames = criterion.reduce(\n    (acc: string[], cur: (typeof criterion)[0]) => {\n      if (!acc.includes(cur.evidenceType)) {\n        acc.push(cur.evidenceType);\n      }\n      return acc;\n    },\n    [] as string[]\n  );\n\n  return json({ criterion, columnNames });\n}\n\nexport default function Criterio() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div className=\"flex min-h-screen w-full flex-col p-1\">\n      <div className=\"flex flex-col gap-2\">\n        <Outlet />\n        <h1 className=\"text-2xl font-bold\">Documentation</h1>\n\n        <p className=\"text-gray-500\">\n          This page is a work in progress. Please check back later for more\n          information. Definitions are based on the ACMG/AMP 2015 Guidelines.\n        </p>\n        <p className=\"text-gray-500\">\n          Individual Criterion are grouped by Evidence Type. Click on the\n          Evidence Type to see the Criterion.\n        </p>\n        <p className=\"text-gray-500\">\n          To Edit a Criterion, click on the Criterion Name.\n        </p>\n\n        <div className=\"flex flex-col gap-2 p-1\">\n          {data.columnNames.map((column) => {\n            return (\n              <div\n                key={column}\n                className=\"items-cener flex w-full flex-col gap-2\"\n              >\n                <div className=\"flex flex-row gap-2\">\n                  <CriteriaFetcher searchParam={column} />\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction CriteriaFetcher({ searchParam }: { searchParam: string }) {\n  const matches = useMatches();\n\n  const criterion = matches.find((match) => match.pathname === \"/criterion\")\n    ?.data.criterion as Criterion[];\n\n  const byEvidenceType = criterion?.filter((criterion) => {\n    return criterion.evidenceType === searchParam;\n  }) as Criterion[];\n\n  const [open, setOpen] = React.useState(false);\n  return (\n    <div\n      className={`flex w-full flex-col gap-2 p-1 ${\n        open ? \"rounded-md border border-gray-500\" : \"rounded-md border\"\n      }`}\n    >\n      <div className=\"flex flex-row items-center gap-2\">\n        <button\n          className=\"flex flex-row items-center gap-2\"\n          onClick={() => setOpen(!open)}\n        >\n          <h3 className=\"text-xl font-bold\">{searchParam}</h3>\n\n          {open ? <ChevronUpIcon /> : <ChevronDownIcon />}\n        </button>\n      </div>\n\n      {open ? (\n        <div className=\"flex flex-col gap-2 p-1\">\n          {byEvidenceType?.map((criterion) => {\n            return (\n              <div key={criterion.id} className=\"flex flex-col gap-2\">\n                <Link to={`/criterion/${criterion.id}`}>\n                  <h3 className=\"text-xl font-bold\">{criterion.label}</h3>\n                </Link>\n                <div className=\"flex flex-row gap-2\">\n                  <FormatDefinition definition={criterion.definition} />\n                </div>\n\n                {criterion.example ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\">\n                      {\" \"}\n                      Example: {criterion.example}\n                    </p>\n                  </div>\n                ) : null}\n\n                {criterion.caveat ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\"> Caveat: {criterion.caveat}</p>\n                  </div>\n                ) : null}\n\n                {criterion.criterionBaseWeight ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\">\n                      Criterion Base Weight: {criterion.criterionBaseWeight}\n                    </p>\n                  </div>\n                ) : null}\n                {criterion.weight ? (\n                  <div className=\"flex flex-row gap-2\">\n                    <p className=\"text-gray-500\">Weight: {criterion.weight}</p>\n                  </div>\n                ) : null}\n              </div>\n            );\n          })}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nfunction FormatDefinition({ definition }: { definition: string }) {\n  function sortMe(definition: string) {\n    const toString = definition.toString();\n\n    const formattedDef = toString\n      .replace(`P:`, \"Supporting: \")\n      .replace(`VS:`, \"Strong: \")\n      .replace(`M:`, \"Moderate: \")\n      .replace(`S:`, \"Strong: \")\n      .replace(`SA: `, \"Stand alone:\");\n\n    return formattedDef;\n  }\n  return (\n    <div className=\"flex flex-col gap-2\">\n      <p className=\"text-gray-500\">Definition: {sortMe(definition)}</p>\n    </div>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport React from \"react\";\nimport PdfUploader from \"~/components/shared/cloudinary-pdf-uploader\";\nimport {\n  createPdfEntry,\n  getPMSearchTerm,\n  getSemanticScholorArticleDetails,\n} from \"~/server/pdf.server\";\n\nexport async function action({ request, params }: ActionArgs) {\n  const formData = await request.formData();\n  console.log(Object.fromEntries(formData.entries()), \"formData\");\n\n  const pdfUrl = formData.get(\"pdfUrl\") as string;\n  const searchPmid = (await getPMSearchTerm(pdfUrl)) as string;\n\n  const data = await getSemanticScholorArticleDetails(searchPmid);\n  console.log(\"data, from semantic scholor\", data);\n\n  const {\n    semanticScholarId,\n    semanticScholarUrl,\n    title,\n    abstract,\n    authors,\n    journal,\n    pubYear,\n    pmid,\n    pmcId,\n    doi,\n  } = data;\n\n  const dbData = {\n    semanticScholarId,\n    semanticScholarUrl,\n    title,\n    abstract,\n    authors,\n    journal,\n    pubYear: Number(pubYear),\n    pmid,\n    pmcid: pmcId,\n    doi,\n    internalPdfUrl: pdfUrl,\n  };\n  const pdfEntry = await createPdfEntry(dbData);\n\n  if (!pdfEntry) {\n    return json({ error: \"There was an error uploading the pdf\" });\n  }\n\n  return redirect(`/kdb/${pdfEntry.id}`);\n}\n\nexport default function Wip() {\n  const actionData = useActionData<{\n    pdfEntry: {\n      error?: string;\n    };\n  }>();\n\n  const [url, setUrl] = React.useState<string>(\"\");\n  return (\n    <div className=\"mb-20 flex flex-col items-center justify-center\">\n      <PdfUploader setUrl={setUrl} />\n\n      <div>\n        <Form\n          className=\"flex w-full flex-col items-center justify-center\"\n          method=\"POST\"\n        >\n          <input\n            className=\"w-full text-black\"\n            type=\"text\"\n            name=\"pdfUrl\"\n            defaultValue={url}\n            onChange={(e) => setUrl(e.target.value)}\n          />\n          {actionData?.pdfEntry?.error && (\n            <div className=\"text-red-500\">{actionData.pdfEntry.error}</div>\n          )}\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { useFetcher } from \"@remix-run/react\";\n\ntype PdfUploaderProps = {\n  setUrl: React.Dispatch<React.SetStateAction<string>>;\n};\nexport default function PdfUploader({ setUrl }: PdfUploaderProps) {\n  const pdfFetcher = useFetcher();\n\n  const handlePdfUpload = async () => {\n    pdfFetcher.submit({\n      pdfUrl: \"pdfUrl\",\n      key: \"pdfUrl\",\n      action: `/actions/pdf`,\n    });\n    pdfFetcher.data?.pdfUrl && setUrl(pdfFetcher.data.pdfUrl);\n  };\n\n\n  return (\n    <>\n      <pdfFetcher.Form\n        method=\"post\"\n        encType=\"multipart/form-data\"\n        action=\"/actions/pdf\"\n        onChange={handlePdfUpload}\n        className=\"flex flex-col items-center justify-center\"\n      >\n        <input\n          className=\"border-input ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex h-10 w-full rounded-md border bg-transparent px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n          type=\"file\"\n          name=\"pdfUrl\"\n          accept=\"application/pdf\"\n        />\n        <button type=\"submit\">Upload</button>\n      </pdfFetcher.Form>\n      {pdfFetcher.data?.pdfUrl && (\n        <div>\n          <input\n            type=\"text\"\n            name=\"pdfUrl\"\n            onChange={setUrl(pdfFetcher.data?.pdfUrl)}\n          />\n        </div>\n      )}\n    </>\n  );\n}\n", "import { SignIn } from \"@clerk/remix\";\n\nexport default function SignInPage() {\n  return (\n    <div>\n      <h1>Sign In route</h1>\n      <SignIn routing={\"path\"} path={\"/sign-in\"} />\n    </div>\n  );\n}\n", "import { SignUp } from \"@clerk/remix\";\n\nexport default function SignUpPage() {\n  return (\n    <div>\n      <h1>Sign Up route</h1>\n      <SignUp routing={\"path\"} path={\"/sign-up\"} />\n    </div>\n  );\n}\n", "import DevelopmentWelcome from \"~/components/dev-components/welcome\";\n\nexport default function Index() {\n  return (\n    <div className=\"\">\n      <DevelopmentWelcome />\n    </div>\n  );\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function DevelopmentWelcome() {\n  return (\n    <div className=\"prose prose-invert mx-auto flex h-full w-full flex-col items-center gap-2  rounded-md border-2 p-2 xl:prose-xl\">\n      Welcome to my in development site. This site is a work in progress. I am\n      working towards a comprehensive ACMG/AMP variant classification tool.\n      <h2>Current Features</h2>\n      <ul>\n        <li>\n          <Link to=\"/calculator\">ACMG Classification Counter Calculator</Link>\n        </li>\n        <li>Variant Classification Score</li>\n      </ul>\n      <h2>Future Features</h2>\n      <ul>\n        <li>Citations</li>\n        <li>Documentation </li>\n        <li>PDF upload and retreival page</li>\n      </ul>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { getFilteredGenes } from \"./genes.server\";\nimport GeneSearch from \"~/components/gene-search\";\nimport { useLoaderData } from \"@remix-run/react\";\nexport async function loader({ request, params }: LoaderArgs) {\n  const url = new URL(request.url);\n  const filter = url.searchParams.get(\"filter\");\n  console.log(filter, \"filter\");\n\n  const gene = await getFilteredGenes(filter ? filter : \"\");\n\n  return json({ gene });\n}\n\nexport default function GenesRoute() {\n  const data = useLoaderData<typeof loader>();\n  console.log(data);\n\n  return (\n    <div>\n      <h1>Genes</h1>\n      <GeneSearch />\n    </div>\n  );\n}\n", "import { useNavigate, useSearchParams } from \"@remix-run/react\";\n\nexport default function GeneSearch() {\n  const navigate = useNavigate();\n  let [searchParams] = useSearchParams();\n  return (\n    <form className=\"text-black\">\n      <input type=\"text\" placeholder=\"Search for a gene\" name=\"filter\" />\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n}\n", "export default function BetaRoute() {\n  return <div className=\"\"></div>;\n}\n", "import type { Prisma } from \"@prisma/client\";\nimport type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { NavLink } from \"@remix-run/react\";\nimport KdbWelcome from \"~/components/kdb-components/kdb-welcome\";\nimport PdfList from \"~/components/kdb-components/pdf-library-list\";\nimport { prisma } from \"~/server/prisma.server\";\nexport function shouldRevalidate() {\n  return true;\n}\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const url = new URL(request.url);\n  const filter = url.searchParams.get(\"filter\");\n  console.log(\"filter\", filter);\n\n  let textFilter: Prisma.PdfLibraryWhereInput = {};\n  if (filter) {\n    textFilter = {\n      OR: [\n        {\n          title: {\n            contains: filter,\n            mode: \"insensitive\",\n          },\n        },\n        {\n          abstract: {\n            contains: filter,\n            mode: \"insensitive\",\n          },\n        },\n        {\n          pmcid: {\n            contains: filter,\n            mode: \"insensitive\",\n          },\n        },\n        {\n          pmid: {\n            contains: filter,\n            mode: \"insensitive\",\n          },\n        },\n        {\n          authors: {\n            has: filter,\n          },\n        },\n      ],\n    };\n  }\n\n  const pdfLibrary = await prisma.pdfLibrary.findMany({\n    where: {\n      ...textFilter,\n    },\n  });\n\n  // const pdfLibrary = await getPdfLibrary( textFilter);\n\n  if (!pdfLibrary) {\n    throw new Error(\"pdfLibrary not found\");\n  }\n\n  return json({ pdfLibrary });\n}\n\nexport default function KdbIndex() {\n  return (\n    <div className=\"mt-15 mb-10 flex h-screen  w-full flex-col items-center justify-center md:flex-row\">\n      <div className=\"mt-5 flex h-[24px] w-full flex-col items-center justify-center border-2 border-green-500 md:h-screen md:w-1/5\">\n        <NavLink to=\"/kdb/new\">add new pdf</NavLink>\n      </div>\n\n      <div className=\"flex h-full w-full flex-col items-center gap-2 overflow-scroll border-2  border-red-500 md:h-screen md:w-4/5\">\n        <KdbWelcome />\n        <PdfList />\n      </div>\n    </div>\n  );\n}\n", "import {\n  Form,\n  useNavigate,\n  useSearchParams,\n} from \"@remix-run/react\";\nimport React from \"react\";\nexport function shouldRevalidate() {\n  return true;\n}\n\nexport default function PdfSearch() {\n  const [searchParams] = useSearchParams();\n  const formRef = React.useRef<HTMLFormElement>(null);\n  const navigate = useNavigate();\n  function handleClear(e: React.MouseEvent<HTMLButtonElement>) {\n    e.preventDefault();\n\n    searchParams.delete(\"filter\");\n\n    formRef.current?.reset();\n    navigate(`/kdb/`, {\n      replace: true,\n    });\n  }\n\n  return (\n    <div className=\"flex flex-col  items-center gap-2 border-2 border-purple-500 p-1 md:p-2\">\n      <Form\n        ref={formRef}\n        className=\"flex w-full flex-col items-center gap-2\"\n        method=\"GET\"\n      >\n        <input\n          className=\"border-input ring-offset-background placeholder:text-muted-foreground focus-visible:ring-ring flex h-10 w-full rounded-md border bg-transparent px-3 py-2 text-sm file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-white placeholder:text-[8px] focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\"\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search for PMID, PMCID, Author, Title\"\n          // defaultValue={searchParams.get('filter' ) || ''}\n        />\n        {searchParams.get(\"filter\") ? (\n          <button\n            className=\"w-1/2 rounded-xl bg-red-300 px-3 py-2 font-semibold text-blue-600 transition duration-300 ease-in-out hover:-translate-y-1 hover:bg-yellow-400\"\n            onClick={(e) => handleClear(e)}\n            type=\"submit\"\n          >\n            Clear\n          </button>\n        ) : (\n          <button\n            className=\"rounded-xl bg-blue-300 px-3 py-2 font-semibold text-blue-600 transition duration-300 ease-in-out hover:-translate-y-1 hover:bg-yellow-400\"\n            type=\"submit\"\n          >\n            Search\n          </button>\n        )}\n      </Form>\n    </div>\n  );\n}\n", "import PdfSearch from \"./pdf-search\";\n\nexport default function KdbWelcome() {\n  return (\n    <div className=\"flex w-full flex-col items-center gap-2 border-2 border-purple-500 p-2\">\n      <p className=\"text-2xl\">Welcome to the KDB</p>\n      <p className=\"text-2xl\">Please select an option from the menu below</p>\n      <PdfSearch />\n    </div>\n  );\n}\n", "import { ChevronUpIcon, ChevronDownIcon } from \"@radix-ui/react-icons\";\nimport { Link, useLoaderData } from \"@remix-run/react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport React, { useCallback } from \"react\";\nimport type { loader } from \"~/routes/kdb\";\nimport type { PdfLibrary } from \"~/types/kdb-types\";\nimport EditAbstract from \"./pdf-edit-abstract\";\n\nexport default function PdfList() {\n  const [edit, setEdit] = React.useState(false);\n  const data = useLoaderData<typeof loader>();\n  return (\n    <div className=\"flex w-full flex-col gap-2 border-2 border-pink-500\">\n      {data.pdfLibrary.map((kdbEntry) => (\n        <div\n          key={kdbEntry.id}\n          className=\"flex w-full flex-col items-stretch gap-4 rounded-md border-2 p-1\"\n        >\n          <div className=\"flex flex-col items-center justify-between gap-2  text-xs md:flex-row md:items-baseline\">\n            <p className=\"text-base font-bold\">{kdbEntry.title}</p>\n            <p className=\"text-xs font-bold\">({kdbEntry.pubYear})</p>\n          </div>\n          <AccordianTriggerBar kdbEntry={kdbEntry}>\n            <div className=\"flex h-full flex-col items-start gap-2 border-2 border-indigo-500 px-4 py-2 md:flex-row\">\n              <ul className=\"flex border-2 border-lime-500 px-2\">\n                <li className=\"flex list-none flex-col gap-2 text-teal-400\">\n                  <p className=\"text-xs font-bold underline\">Abstract:</p>\n                  {kdbEntry.abstract ? (\n                    <p className=\"text-xs\">{kdbEntry.abstract}</p>\n                  ) : (\n                    <>\n                      <p className=\"text-xs\">no abstract</p>\n                      <button onClick={() => setEdit(true)}>\n                        add abstract\n                      </button>\n                      {edit ? <EditAbstract pdfId={kdbEntry.id} /> : null}\n                    </>\n                  )}\n                  <div className=\"flex flex-col gap-2\">\n                    <div className=\"flex flex-col justify-between\">\n                      <p className=\"text-xs font-bold underline\">Authors:</p>\n                      <p className=\"text-xs\">{kdbEntry.authors.join(\", \")}</p>\n                    </div>\n                    <div className=\"flex flex-row items-center justify-between\">\n                      <div className=\"flex flex-col\">\n                        <p className=\"text-xs font-bold underline\">PMID:</p>\n                        <p className=\"text-xs\">{kdbEntry.pmid}</p>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <p className=\"text-xs font-bold underline\">PMCID:</p>\n                        <p className=\"text-xs\">{kdbEntry.pmcid}</p>\n                      </div>\n                      <Link\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        to={kdbEntry.internalPdfUrl}\n                        className=\"text-xs\"\n                      >\n                        <p className=\"text-xs font-bold underline\">\n                          Download PDF\n                        </p>\n                      </Link>\n                    </div>\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </AccordianTriggerBar>\n        </div>\n      ))}\n    </div>\n  );\n}\n\ntype Props = {\n  children: React.ReactNode;\n  kdbEntry: PdfLibrary;\n};\n\nfunction AccordianTriggerBar(props: Props) {\n  const { children, kdbEntry } = props;\n\n  const [open, setOpen] = React.useState(false);\n  const toggleOpen = useCallback(() => {\n    setOpen((open) => !open);\n  }, []);\n\n  return (\n    <div className=\"flex flex-col gap-2 rounded-md md:gap-4\">\n      <div className=\"flex flex-row items-center justify-between gap-2 text-xs\">\n        <div className=\"flex flex-col items-start gap-1 \">\n          <p className=\"text-xs font-bold underline\">Journal</p>\n          <p className=\"text-xs font-bold\">{kdbEntry.journal}</p>\n        </div>\n        <div className=\"grow\" />\n\n        <AccordianNavBar kdbEntry={kdbEntry} />\n        <div className=\"grow\" />\n\n        <div className=\"flex flex-col items-end gap-1\">\n          <p className=\"text-xs font-bold underline\">Publication Year</p>\n          <p className=\"text-xs font-bold\">({kdbEntry.pubYear})</p>\n        </div>\n        <div className=\"flex flex-col items-center justify-center pl-4\">\n          <button\n            type=\"button\"\n            onClick={toggleOpen}\n            aria-label=\"Search database\"\n            className=\"rounded-md p-2 text-teal-400 transition-all duration-300 hover:backdrop-blur-sm\"\n          >\n            {open ? (\n              <div className=\"flex flex-col items-end gap-1\">\n                <p className=\"text-xs font-bold\">Hide Details</p>\n                <ChevronUpIcon />\n              </div>\n            ) : (\n              <div className=\"flex flex-col items-end gap-1\">\n                <p className=\"text-xs font-bold\">View Details</p>\n                <ChevronDownIcon />\n              </div>\n            )}\n          </button>\n        </div>\n      </div>\n      <AnimatePresence>\n        {open && (\n          <motion.div\n            key={kdbEntry.id}\n            initial={{ opacity: 0, height: 0 }}\n            animate={{ opacity: 1, height: \"auto\" }}\n            exit={{ opacity: 0, height: 0 }}\n            transition={{ type: \"tween\" }}\n          >\n            <div className=\"flex  flex-col items-stretch\">{children}</div>\n          </motion.div>\n        )}\n      </AnimatePresence>\n    </div>\n  );\n}\n\nfunction AccordianNavBar({ kdbEntry }: { kdbEntry: PdfLibrary }) {\n  return (\n    <div className=\"flex flex-col items-center gap-1\">\n      <p className=\"text-xs font-bold underline\">Links</p>\n\n      <div className=\"flex flex-row items-center justify-between gap-2 text-xs\">\n        <Link\n          to={`https://pubmed.ncbi.nlm.nih.gov/${kdbEntry.pmid}/`}\n          className=\"text-xs font-bold hover:cursor-pointer\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          PubMed\n        </Link>\n        {kdbEntry.pmcid ? (\n          <Link\n            to={`https://www.ncbi.nlm.nih.gov/pmc/${kdbEntry.pmcid}/`}\n            className=\"text-xs font-bold hover:cursor-pointer\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            PMC\n          </Link>\n        ) : null}\n        <Link\n          to={`https://doi.org/${kdbEntry.doi}`}\n          className=\"text-xs font-bold hover:cursor-pointer\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          DOI\n        </Link>\n        <Link\n          to={kdbEntry.semanticScholarUrl}\n          className=\"text-xs font-bold hover:cursor-pointer\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Semantic Scholar\n        </Link>\n      </div>\n    </div>\n  );\n}\n", "import { Form } from \"@remix-run/react\";\n\nexport default function EditAbstract({ pdfId }: { pdfId: string }) {\n  return (\n    <Form\n      className=\"z-10 flex flex-col\"\n      method=\"post\"\n      action={`/kdb/${pdfId}/edit-abstract`}\n    >\n      <div className=\"flex flex-col\">\n        <label htmlFor=\"abstract\">Abstract</label>\n        <textarea name=\"abstract\" id=\"abstract\" cols={30} rows={10}></textarea>\n      </div>\n      <button type=\"submit\">Submit</button>\n    </Form>\n  );\n}\n", "export {};\n", "export default {'entry':{'module':'/build/entry.client-ZST4TBUP.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-B3XGAVOJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-FYE7RXT4.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-HXKEEHZ3.js','imports':['/build/_shared/chunk-YHIUPQAQ.js','/build/_shared/chunk-W4JOHJUN.js','/build/_shared/chunk-ZTEULLCC.js','/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-3337B4DZ.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/actions.pdf':{'id':'routes/actions.pdf','parentId':'root','path':'actions/pdf','index':undefined,'caseSensitive':undefined,'module':'/build/routes/actions.pdf-K73GFXMQ.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/beta':{'id':'routes/beta','parentId':'root','path':'beta','index':undefined,'caseSensitive':undefined,'module':'/build/routes/beta-BLVKSIZC.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/calculator':{'id':'routes/calculator','parentId':'root','path':'calculator','index':undefined,'caseSensitive':undefined,'module':'/build/routes/calculator-X4J4WQ66.js','imports':['/build/_shared/chunk-VLOORRQ2.js','/build/_shared/chunk-4T5KGPBP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion':{'id':'routes/criterion','parentId':'root','path':'criterion','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion-4ELLFVPN.js','imports':['/build/_shared/chunk-4T5KGPBP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion.help':{'id':'routes/criterion.help','parentId':'routes/criterion','path':'help','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion.help-GMZYN2OI.js','imports':['/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/criterion_.$splat':{'id':'routes/criterion_.$splat','parentId':'root','path':'criterion/:splat','index':undefined,'caseSensitive':undefined,'module':'/build/routes/criterion_.$splat-6MKSVMMH.js','imports':['/build/_shared/chunk-JNOKBHGH.js','/build/_shared/chunk-VLOORRQ2.js','/build/_shared/chunk-4T5KGPBP.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/genes':{'id':'routes/genes','parentId':'root','path':'genes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/genes-S74C53LR.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/genes.server':{'id':'routes/genes.server','parentId':'routes/genes','path':'server','index':undefined,'caseSensitive':undefined,'module':'/build/routes/genes.server-HPSUZRDK.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb':{'id':'routes/kdb','parentId':'root','path':'kdb','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb-H3FXLPIP.js','imports':['/build/_shared/chunk-4T5KGPBP.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb.$pdfId.edit-abstract':{'id':'routes/kdb.$pdfId.edit-abstract','parentId':'routes/kdb','path':':pdfId/edit-abstract','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb.$pdfId.edit-abstract-VIGQUX6B.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb_.$pdfId':{'id':'routes/kdb_.$pdfId','parentId':'root','path':'kdb/:pdfId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb_.$pdfId-HE6VHWNV.js','imports':['/build/_shared/chunk-P745DJB6.js','/build/_shared/chunk-JNOKBHGH.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/kdb_.new':{'id':'routes/kdb_.new','parentId':'root','path':'kdb/new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/kdb_.new-TJNCNQG4.js','imports':['/build/_shared/chunk-P745DJB6.js'],'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-in':{'id':'routes/sign-in','parentId':'root','path':'sign-in','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-in-E6NJ4WKB.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/sign-up':{'id':'routes/sign-up','parentId':'root','path':'sign-up','index':undefined,'caseSensitive':undefined,'module':'/build/routes/sign-up-SEBFCP57.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants':{'id':'routes/variants','parentId':'root','path':'variants','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants-P4UMW4JP.js','imports':['/build/_shared/chunk-NOWEFZI5.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants.$id':{'id':'routes/variants.$id','parentId':'routes/variants','path':':id','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants.$id-MHIVRS33.js','imports':['/build/_shared/chunk-ZTEULLCC.js','/build/_shared/chunk-NMZL6IDN.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/variants_.$id.annotate':{'id':'routes/variants_.$id.annotate','parentId':'root','path':'variants/:id/annotate','index':undefined,'caseSensitive':undefined,'module':'/build/routes/variants_.$id.annotate-ZP5XECGE.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/wip':{'id':'routes/wip','parentId':'root','path':'wip','index':undefined,'caseSensitive':undefined,'module':'/build/routes/wip-4BDBACDH.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'version':'98e26e56','hmr':{'runtime':'/build/_shared/chunk-FYE7RXT4.js','timestamp':1686908561837},'url':'/build/manifest-98E26E56.js'};", "\nimport * as entryServer from \"/Users/voidnation/Documents/projects/remix-2023/genes_23/node_modules/@remix-run/dev/dist/config/defaults/node/entry.server.react-stream.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/kdb.$pdfId.edit-abstract.tsx\";\nimport * as route2 from \"./routes/variants_.$id.annotate.tsx\";\nimport * as route3 from \"./routes/criterion_.$splat.tsx\";\nimport * as route4 from \"./routes/criterion.help.tsx\";\nimport * as route5 from \"./routes/genes.server.ts\";\nimport * as route6 from \"./routes/variants.$id.tsx\";\nimport * as route7 from \"./routes/actions.pdf.ts\";\nimport * as route8 from \"./routes/kdb_.$pdfId.tsx\";\nimport * as route9 from \"./routes/calculator/route.tsx\";\nimport * as route10 from \"./routes/criterion.tsx\";\nimport * as route11 from \"./routes/kdb_.new.tsx\";\nimport * as route12 from \"./routes/variants.tsx\";\nimport * as route13 from \"./routes/sign-in.tsx\";\nimport * as route14 from \"./routes/sign-up.tsx\";\nimport * as route15 from \"./routes/_index.tsx\";\nimport * as route16 from \"./routes/genes.tsx\";\nimport * as route17 from \"./routes/beta.tsx\";\nimport * as route18 from \"./routes/kdb.tsx\";\nimport * as route19 from \"./routes/wip.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public/build\";\n  export const future = {\"unstable_dev\":true,\"unstable_postcss\":false,\"unstable_tailwind\":false,\"v2_errorBoundary\":false,\"v2_headers\":false,\"v2_meta\":true,\"v2_normalizeFormMethod\":true,\"v2_routeConvention\":true};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const dev = {\"port\":3001}\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/kdb.$pdfId.edit-abstract\": {\n      id: \"routes/kdb.$pdfId.edit-abstract\",\n      parentId: \"routes/kdb\",\n      path: \":pdfId/edit-abstract\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/variants_.$id.annotate\": {\n      id: \"routes/variants_.$id.annotate\",\n      parentId: \"root\",\n      path: \"variants/:id/annotate\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/criterion_.$splat\": {\n      id: \"routes/criterion_.$splat\",\n      parentId: \"root\",\n      path: \"criterion/:splat\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/criterion.help\": {\n      id: \"routes/criterion.help\",\n      parentId: \"routes/criterion\",\n      path: \"help\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/genes.server\": {\n      id: \"routes/genes.server\",\n      parentId: \"routes/genes\",\n      path: \"server\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/variants.$id\": {\n      id: \"routes/variants.$id\",\n      parentId: \"routes/variants\",\n      path: \":id\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/actions.pdf\": {\n      id: \"routes/actions.pdf\",\n      parentId: \"root\",\n      path: \"actions/pdf\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/kdb_.$pdfId\": {\n      id: \"routes/kdb_.$pdfId\",\n      parentId: \"root\",\n      path: \"kdb/:pdfId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/calculator\": {\n      id: \"routes/calculator\",\n      parentId: \"root\",\n      path: \"calculator\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/criterion\": {\n      id: \"routes/criterion\",\n      parentId: \"root\",\n      path: \"criterion\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    },\n  \"routes/kdb_.new\": {\n      id: \"routes/kdb_.new\",\n      parentId: \"root\",\n      path: \"kdb/new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route11\n    },\n  \"routes/variants\": {\n      id: \"routes/variants\",\n      parentId: \"root\",\n      path: \"variants\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route12\n    },\n  \"routes/sign-in\": {\n      id: \"routes/sign-in\",\n      parentId: \"root\",\n      path: \"sign-in\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route13\n    },\n  \"routes/sign-up\": {\n      id: \"routes/sign-up\",\n      parentId: \"root\",\n      path: \"sign-up\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route14\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route15\n    },\n  \"routes/genes\": {\n      id: \"routes/genes\",\n      parentId: \"root\",\n      path: \"genes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route16\n    },\n  \"routes/beta\": {\n      id: \"routes/beta\",\n      parentId: \"root\",\n      path: \"beta\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route17\n    },\n  \"routes/kdb\": {\n      id: \"routes/kdb\",\n      parentId: \"root\",\n      path: \"kdb\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route18\n    },\n  \"routes/wip\": {\n      id: \"routes/wip\",\n      parentId: \"root\",\n      path: \"wip\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route19\n    }\n  };"],
  "mappings": "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",
  "names": ["isbot", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "import_remix", "import_jsx_dev_runtime", "import_node", "loader", "import_node", "loader", "action", "loader", "import_remix", "import_node", "import_react", "import_jsx_dev_runtime", "clsx", "import_react", "schema", "import_jsx_dev_runtime", "loader", "action", "import_jsx_dev_runtime", "VariantRoute", "loader", "import_node", "import_react", "loader", "import_node", "import_react", "import_react_icons", "import_jsx_dev_runtime", "loader", "React", "flip", "import_jsx_dev_runtime", "loader", "variant", "VariantRoute", "action", "import_node", "import_node", "cloudinary", "action", "loader", "import_node", "import_react", "import_zod", "import_jsx_dev_runtime", "loader", "z", "action", "loader", "import_node", "import_react", "import_react", "import_react", "import_jsx_dev_runtime", "React", "import_react_icons", "import_react", "import_jsx_dev_runtime", "React", "import_react_label", "import_react_icons", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "action", "React", "loader", "import_react_icons", "import_node", "import_react", "import_jsx_dev_runtime", "loader", "criterion", "React", "definition", "action", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "_a", "import_jsx_dev_runtime", "action", "React", "import_remix", "import_jsx_dev_runtime", "import_remix", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_jsx_dev_runtime", "import_react", "import_jsx_dev_runtime", "loader", "import_jsx_dev_runtime", "loader", "import_node", "import_react", "import_react", "import_jsx_dev_runtime", "React", "import_jsx_dev_runtime", "import_react_icons", "import_react", "import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "React", "open", "import_jsx_dev_runtime", "loader"]
}
